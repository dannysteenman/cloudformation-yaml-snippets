{
    "AWS::ACMPCA::Certificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::Certificate\"\r\n\tProperties:\r\n\t\tCertificateAuthorityArn: ${2:String} #required\r\n\t\tCertificateSigningRequest: ${3:String} #required\r\n\t\tSigningAlgorithm: ${4:String} #required\r\n\t\tTemplateArn: ${5:String}\r\n\t\tValidity: #required\r\n\t\t\t${6:Validity}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html\r\n\nAttributes: \r\n  Certificate\r\n  Arn\r\n",
        "prefix": "acmpca-certificate",
        "scope": "source.cloudformation"
    },
    "AWS::ACMPCA::CertificateAuthority": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::CertificateAuthority\"\r\n\tProperties:\r\n\t\tKeyAlgorithm: ${2:String} #required\r\n\t\tRevocationConfiguration:\r\n\t\t\t${3:RevocationConfiguration}\r\n\t\tSigningAlgorithm: ${4:String} #required\r\n\t\tSubject: #required\r\n\t\t\t${5:Subject}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tType: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html\r\n\nAttributes: \r\n  Arn\r\n  CertificateSigningRequest\r\n",
        "prefix": "acmpca-certificateauthority",
        "scope": "source.cloudformation"
    },
    "AWS::ACMPCA::CertificateAuthorityActivation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::CertificateAuthorityActivation\"\r\n\tProperties:\r\n\t\tCertificate: ${2:String} #required\r\n\t\tCertificateAuthorityArn: ${3:String} #required\r\n\t\tCertificateChain: ${4:String}\r\n\t\tStatus: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html\r\n\nAttributes: \r\n  CompleteCertificateChain\r\n",
        "prefix": "acmpca-certificateauthorityactivation",
        "scope": "source.cloudformation"
    },
    "AWS::AccessAnalyzer::Analyzer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AccessAnalyzer::Analyzer\"\r\n\tProperties:\r\n\t\tAnalyzerName: ${2:String}\r\n\t\tArchiveRules:\r\n\t\t\t- ${3:ArchiveRule}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n\t\tType: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "accessanalyzer-analyzer",
        "scope": "source.cloudformation"
    },
    "AWS::AmazonMQ::Broker": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::Broker\"\r\n\tProperties:\r\n\t\tAuthenticationStrategy: ${2:String}\r\n\t\tAutoMinorVersionUpgrade: ${3:Boolean} #required\r\n\t\tBrokerName: ${4:String} #required\r\n\t\tConfiguration:\r\n\t\t\t${5:ConfigurationId}\r\n\t\tDeploymentMode: ${6:String} #required\r\n\t\tEncryptionOptions:\r\n\t\t\t${7:EncryptionOptions}\r\n\t\tEngineType: ${8:String} #required\r\n\t\tEngineVersion: ${9:String} #required\r\n\t\tHostInstanceType: ${10:String} #required\r\n\t\tLdapServerMetadata:\r\n\t\t\t${11:LdapServerMetadata}\r\n\t\tLogs:\r\n\t\t\t${12:LogList}\r\n\t\tMaintenanceWindowStartTime:\r\n\t\t\t${13:MaintenanceWindow}\r\n\t\tPubliclyAccessible: ${14:Boolean} #required\r\n\t\tSecurityGroups:\r\n\t\t\t- ${15:String}\r\n\t\tStorageType: ${16:String}\r\n\t\tSubnetIds:\r\n\t\t\t- ${17:String}\r\n\t\tTags:\r\n\t\t\t- ${18:TagsEntry}\r\n\t\tUsers: #required\r\n\t\t\t- ${19:User}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html\r\n\nAttributes: \r\n  IpAddresses\r\n  OpenWireEndpoints\r\n  ConfigurationRevision\r\n  StompEndpoints\r\n  MqttEndpoints\r\n  AmqpEndpoints\r\n  Arn\r\n  ConfigurationId\r\n  WssEndpoints\r\n",
        "prefix": "amazonmq-broker",
        "scope": "source.cloudformation"
    },
    "AWS::AmazonMQ::Configuration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::Configuration\"\r\n\tProperties:\r\n\t\tData: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tEngineType: ${4:String} #required\r\n\t\tEngineVersion: ${5:String} #required\r\n\t\tName: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:TagsEntry}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html\r\n\nAttributes: \r\n  Revision\r\n  Id\r\n  Arn\r\n",
        "prefix": "amazonmq-configuration",
        "scope": "source.cloudformation"
    },
    "AWS::AmazonMQ::ConfigurationAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::ConfigurationAssociation\"\r\n\tProperties:\r\n\t\tBroker: ${2:String} #required\r\n\t\tConfiguration: #required\r\n\t\t\t${3:ConfigurationId}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html",
        "prefix": "amazonmq-configurationassociation",
        "scope": "source.cloudformation"
    },
    "AWS::Amplify::App": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::App\"\r\n\tProperties:\r\n\t\tAccessToken: ${2:String}\r\n\t\tAutoBranchCreationConfig:\r\n\t\t\t${3:AutoBranchCreationConfig}\r\n\t\tBasicAuthConfig:\r\n\t\t\t${4:BasicAuthConfig}\r\n\t\tBuildSpec: ${5:String}\r\n\t\tCustomHeaders: ${6:String}\r\n\t\tCustomRules:\r\n\t\t\t- ${7:CustomRule}\r\n\t\tDescription: ${8:String}\r\n\t\tEnableBranchAutoDeletion: ${9:Boolean}\r\n\t\tEnvironmentVariables:\r\n\t\t\t- ${10:EnvironmentVariable}\r\n\t\tIAMServiceRole: ${11:String}\r\n\t\tName: ${12:String} #required\r\n\t\tOauthToken: ${13:String}\r\n\t\tRepository: ${14:String}\r\n\t\tTags:\r\n\t\t\t- ${15:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html\r\n\nAttributes: \r\n  AppId\r\n  Arn\r\n  DefaultDomain\r\n  AppName\r\n",
        "prefix": "amplify-app",
        "scope": "source.cloudformation"
    },
    "AWS::Amplify::Branch": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::Branch\"\r\n\tProperties:\r\n\t\tAppId: ${2:String} #required\r\n\t\tBasicAuthConfig:\r\n\t\t\t${3:BasicAuthConfig}\r\n\t\tBranchName: ${4:String} #required\r\n\t\tBuildSpec: ${5:String}\r\n\t\tDescription: ${6:String}\r\n\t\tEnableAutoBuild: ${7:Boolean}\r\n\t\tEnablePerformanceMode: ${8:Boolean}\r\n\t\tEnablePullRequestPreview: ${9:Boolean}\r\n\t\tEnvironmentVariables:\r\n\t\t\t- ${10:EnvironmentVariable}\r\n\t\tPullRequestEnvironmentName: ${11:String}\r\n\t\tStage: ${12:String}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html\r\n\nAttributes: \r\n  BranchName\r\n  Arn\r\n",
        "prefix": "amplify-branch",
        "scope": "source.cloudformation"
    },
    "AWS::Amplify::Domain": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::Domain\"\r\n\tProperties:\r\n\t\tAppId: ${2:String} #required\r\n\t\tAutoSubDomainCreationPatterns:\r\n\t\t\t- ${3:String}\r\n\t\tAutoSubDomainIAMRole: ${4:String}\r\n\t\tDomainName: ${5:String} #required\r\n\t\tEnableAutoSubDomain: ${6:Boolean}\r\n\t\tSubDomainSettings: #required\r\n\t\t\t- ${7:SubDomainSetting}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html\r\n\nAttributes: \r\n  AutoSubDomainIAMRole\r\n  DomainName\r\n  StatusReason\r\n  EnableAutoSubDomain\r\n  Arn\r\n  DomainStatus\r\n  AutoSubDomainCreationPatterns\r\n  CertificateRecord\r\n",
        "prefix": "amplify-domain",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Account": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Account\"\r\n\tProperties:\r\n\t\tCloudWatchRoleArn: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html",
        "prefix": "apigateway-account",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::ApiKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::ApiKey\"\r\n\tProperties:\r\n\t\tCustomerId: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tEnabled: ${4:Boolean}\r\n\t\tGenerateDistinctId: ${5:Boolean}\r\n\t\tName: ${6:String}\r\n\t\tStageKeys:\r\n\t\t\t- ${7:StageKey}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n\t\tValue: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html",
        "prefix": "apigateway-apikey",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Authorizer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Authorizer\"\r\n\tProperties:\r\n\t\tAuthType: ${2:String}\r\n\t\tAuthorizerCredentials: ${3:String}\r\n\t\tAuthorizerResultTtlInSeconds: ${4:Integer}\r\n\t\tAuthorizerUri: ${5:String}\r\n\t\tIdentitySource: ${6:String}\r\n\t\tIdentityValidationExpression: ${7:String}\r\n\t\tName: ${8:String}\r\n\t\tProviderARNs:\r\n\t\t\t- ${9:String}\r\n\t\tRestApiId: ${10:String} #required\r\n\t\tType: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html",
        "prefix": "apigateway-authorizer",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::BasePathMapping": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::BasePathMapping\"\r\n\tProperties:\r\n\t\tBasePath: ${2:String}\r\n\t\tDomainName: ${3:String} #required\r\n\t\tRestApiId: ${4:String}\r\n\t\tStage: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html",
        "prefix": "apigateway-basepathmapping",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::ClientCertificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::ClientCertificate\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html",
        "prefix": "apigateway-clientcertificate",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Deployment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Deployment\"\r\n\tProperties:\r\n\t\tDeploymentCanarySettings:\r\n\t\t\t${2:DeploymentCanarySettings}\r\n\t\tDescription: ${3:String}\r\n\t\tRestApiId: ${4:String} #required\r\n\t\tStageDescription:\r\n\t\t\t${5:StageDescription}\r\n\t\tStageName: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html",
        "prefix": "apigateway-deployment",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::DocumentationPart": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DocumentationPart\"\r\n\tProperties:\r\n\t\tLocation: #required\r\n\t\t\t${2:Location}\r\n\t\tProperties: ${3:String} #required\r\n\t\tRestApiId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html",
        "prefix": "apigateway-documentationpart",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::DocumentationVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DocumentationVersion\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDocumentationVersion: ${3:String} #required\r\n\t\tRestApiId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html",
        "prefix": "apigateway-documentationversion",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::DomainName": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DomainName\"\r\n\tProperties:\r\n\t\tCertificateArn: ${2:String}\r\n\t\tDomainName: ${3:String}\r\n\t\tEndpointConfiguration:\r\n\t\t\t${4:EndpointConfiguration}\r\n\t\tMutualTlsAuthentication:\r\n\t\t\t${5:MutualTlsAuthentication}\r\n\t\tRegionalCertificateArn: ${6:String}\r\n\t\tSecurityPolicy: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html\r\n\nAttributes: \r\n  DistributionDomainName\r\n  DistributionHostedZoneId\r\n  RegionalDomainName\r\n  RegionalHostedZoneId\r\n",
        "prefix": "apigateway-domainname",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::GatewayResponse": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::GatewayResponse\"\r\n\tProperties:\r\n\t\tResponseParameters:\r\n\t\t\t${2:Map}\r\n\t\tResponseTemplates:\r\n\t\t\t${3:Map}\r\n\t\tResponseType: ${4:String} #required\r\n\t\tRestApiId: ${5:String} #required\r\n\t\tStatusCode: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html",
        "prefix": "apigateway-gatewayresponse",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Method": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Method\"\r\n\tProperties:\r\n\t\tApiKeyRequired: ${2:Boolean}\r\n\t\tAuthorizationScopes:\r\n\t\t\t- ${3:String}\r\n\t\tAuthorizationType: ${4:String}\r\n\t\tAuthorizerId: ${5:String}\r\n\t\tHttpMethod: ${6:String} #required\r\n\t\tIntegration:\r\n\t\t\t${7:Integration}\r\n\t\tMethodResponses:\r\n\t\t\t- ${8:MethodResponse}\r\n\t\tOperationName: ${9:String}\r\n\t\tRequestModels:\r\n\t\t\t${10:Map}\r\n\t\tRequestParameters:\r\n\t\t\t${11:Map}\r\n\t\tRequestValidatorId: ${12:String}\r\n\t\tResourceId: ${13:String} #required\r\n\t\tRestApiId: ${14:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
        "prefix": "apigateway-method",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Model": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Model\"\r\n\tProperties:\r\n\t\tContentType: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tRestApiId: ${5:String} #required\r\n\t\tSchema: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html",
        "prefix": "apigateway-model",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::RequestValidator": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::RequestValidator\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tRestApiId: ${3:String} #required\r\n\t\tValidateRequestBody: ${4:Boolean}\r\n\t\tValidateRequestParameters: ${5:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html",
        "prefix": "apigateway-requestvalidator",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Resource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Resource\"\r\n\tProperties:\r\n\t\tParentId: ${2:String} #required\r\n\t\tPathPart: ${3:String} #required\r\n\t\tRestApiId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html",
        "prefix": "apigateway-resource",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::RestApi": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::RestApi\"\r\n\tProperties:\r\n\t\tApiKeySourceType: ${2:String}\r\n\t\tBinaryMediaTypes:\r\n\t\t\t- ${3:String}\r\n\t\tBody: ${4:Json}\r\n\t\tBodyS3Location:\r\n\t\t\t${5:S3Location}\r\n\t\tCloneFrom: ${6:String}\r\n\t\tDescription: ${7:String}\r\n\t\tEndpointConfiguration:\r\n\t\t\t${8:EndpointConfiguration}\r\n\t\tFailOnWarnings: ${9:Boolean}\r\n\t\tMinimumCompressionSize: ${10:Integer}\r\n\t\tName: ${11:String}\r\n\t\tParameters:\r\n\t\t\t${12:Map}\r\n\t\tPolicy: ${13:Json}\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html\r\n\nAttributes: \r\n  RootResourceId\r\n",
        "prefix": "apigateway-restapi",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::Stage": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Stage\"\r\n\tProperties:\r\n\t\tAccessLogSetting:\r\n\t\t\t${2:AccessLogSetting}\r\n\t\tCacheClusterEnabled: ${3:Boolean}\r\n\t\tCacheClusterSize: ${4:String}\r\n\t\tCanarySetting:\r\n\t\t\t${5:CanarySetting}\r\n\t\tClientCertificateId: ${6:String}\r\n\t\tDeploymentId: ${7:String}\r\n\t\tDescription: ${8:String}\r\n\t\tDocumentationVersion: ${9:String}\r\n\t\tMethodSettings:\r\n\t\t\t- ${10:MethodSetting}\r\n\t\tRestApiId: ${11:String} #required\r\n\t\tStageName: ${12:String}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tTracingEnabled: ${14:Boolean}\r\n\t\tVariables:\r\n\t\t\t${15:Map}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
        "prefix": "apigateway-stage",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::UsagePlan": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::UsagePlan\"\r\n\tProperties:\r\n\t\tApiStages:\r\n\t\t\t- ${2:ApiStage}\r\n\t\tDescription: ${3:String}\r\n\t\tQuota:\r\n\t\t\t${4:QuotaSettings}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tThrottle:\r\n\t\t\t${6:ThrottleSettings}\r\n\t\tUsagePlanName: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html",
        "prefix": "apigateway-usageplan",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::UsagePlanKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::UsagePlanKey\"\r\n\tProperties:\r\n\t\tKeyId: ${2:String} #required\r\n\t\tKeyType: ${3:String} #required\r\n\t\tUsagePlanId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html",
        "prefix": "apigateway-usageplankey",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGateway::VpcLink": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::VpcLink\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTargetArns: #required\r\n\t\t\t- ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html",
        "prefix": "apigateway-vpclink",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Api": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Api\"\r\n\tProperties:\r\n\t\tApiKeySelectionExpression: ${2:String}\r\n\t\tBasePath: ${3:String}\r\n\t\tBody: ${4:Json}\r\n\t\tBodyS3Location:\r\n\t\t\t${5:BodyS3Location}\r\n\t\tCorsConfiguration:\r\n\t\t\t${6:Cors}\r\n\t\tCredentialsArn: ${7:String}\r\n\t\tDescription: ${8:String}\r\n\t\tDisableExecuteApiEndpoint: ${9:Boolean}\r\n\t\tDisableSchemaValidation: ${10:Boolean}\r\n\t\tFailOnWarnings: ${11:Boolean}\r\n\t\tName: ${12:String}\r\n\t\tProtocolType: ${13:String}\r\n\t\tRouteKey: ${14:String}\r\n\t\tRouteSelectionExpression: ${15:String}\r\n\t\tTags: ${16:Json}\r\n\t\tTarget: ${17:String}\r\n\t\tVersion: ${18:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html\r\n\nAttributes: \r\n  ApiEndpoint\r\n",
        "prefix": "apigatewayv2-api",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::ApiGatewayManagedOverrides\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tIntegration:\r\n\t\t\t${3:IntegrationOverrides}\r\n\t\tRoute:\r\n\t\t\t${4:RouteOverrides}\r\n\t\tStage:\r\n\t\t\t${5:StageOverrides}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html",
        "prefix": "apigatewayv2-apigatewaymanagedoverrides",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::ApiMapping": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::ApiMapping\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tApiMappingKey: ${3:String}\r\n\t\tDomainName: ${4:String} #required\r\n\t\tStage: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html",
        "prefix": "apigatewayv2-apimapping",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Authorizer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Authorizer\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tAuthorizerCredentialsArn: ${3:String}\r\n\t\tAuthorizerPayloadFormatVersion: ${4:String}\r\n\t\tAuthorizerResultTtlInSeconds: ${5:Integer}\r\n\t\tAuthorizerType: ${6:String} #required\r\n\t\tAuthorizerUri: ${7:String}\r\n\t\tEnableSimpleResponses: ${8:Boolean}\r\n\t\tIdentitySource: #required\r\n\t\t\t- ${9:String}\r\n\t\tIdentityValidationExpression: ${10:String}\r\n\t\tJwtConfiguration:\r\n\t\t\t${11:JWTConfiguration}\r\n\t\tName: ${12:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html",
        "prefix": "apigatewayv2-authorizer",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Deployment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Deployment\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tStageName: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html",
        "prefix": "apigatewayv2-deployment",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::DomainName": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::DomainName\"\r\n\tProperties:\r\n\t\tDomainName: ${2:String} #required\r\n\t\tDomainNameConfigurations:\r\n\t\t\t- ${3:DomainNameConfiguration}\r\n\t\tMutualTlsAuthentication:\r\n\t\t\t${4:MutualTlsAuthentication}\r\n\t\tTags: ${5:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html\r\n\nAttributes: \r\n  RegionalHostedZoneId\r\n  RegionalDomainName\r\n",
        "prefix": "apigatewayv2-domainname",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Integration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Integration\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tConnectionId: ${3:String}\r\n\t\tConnectionType: ${4:String}\r\n\t\tContentHandlingStrategy: ${5:String}\r\n\t\tCredentialsArn: ${6:String}\r\n\t\tDescription: ${7:String}\r\n\t\tIntegrationMethod: ${8:String}\r\n\t\tIntegrationSubtype: ${9:String}\r\n\t\tIntegrationType: ${10:String} #required\r\n\t\tIntegrationUri: ${11:String}\r\n\t\tPassthroughBehavior: ${12:String}\r\n\t\tPayloadFormatVersion: ${13:String}\r\n\t\tRequestParameters: ${14:Json}\r\n\t\tRequestTemplates: ${15:Json}\r\n\t\tTemplateSelectionExpression: ${16:String}\r\n\t\tTimeoutInMillis: ${17:Integer}\r\n\t\tTlsConfig:\r\n\t\t\t${18:TlsConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html",
        "prefix": "apigatewayv2-integration",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::IntegrationResponse": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::IntegrationResponse\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tContentHandlingStrategy: ${3:String}\r\n\t\tIntegrationId: ${4:String} #required\r\n\t\tIntegrationResponseKey: ${5:String} #required\r\n\t\tResponseParameters: ${6:Json}\r\n\t\tResponseTemplates: ${7:Json}\r\n\t\tTemplateSelectionExpression: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html",
        "prefix": "apigatewayv2-integrationresponse",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Model": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Model\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tContentType: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tName: ${5:String} #required\r\n\t\tSchema: ${6:Json} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html",
        "prefix": "apigatewayv2-model",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Route": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Route\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tApiKeyRequired: ${3:Boolean}\r\n\t\tAuthorizationScopes:\r\n\t\t\t- ${4:String}\r\n\t\tAuthorizationType: ${5:String}\r\n\t\tAuthorizerId: ${6:String}\r\n\t\tModelSelectionExpression: ${7:String}\r\n\t\tOperationName: ${8:String}\r\n\t\tRequestModels: ${9:Json}\r\n\t\tRequestParameters: ${10:Json}\r\n\t\tRouteKey: ${11:String} #required\r\n\t\tRouteResponseSelectionExpression: ${12:String}\r\n\t\tTarget: ${13:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html",
        "prefix": "apigatewayv2-route",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::RouteResponse": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::RouteResponse\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tModelSelectionExpression: ${3:String}\r\n\t\tResponseModels: ${4:Json}\r\n\t\tResponseParameters: ${5:Json}\r\n\t\tRouteId: ${6:String} #required\r\n\t\tRouteResponseKey: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html",
        "prefix": "apigatewayv2-routeresponse",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::Stage": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Stage\"\r\n\tProperties:\r\n\t\tAccessLogSettings:\r\n\t\t\t${2:AccessLogSettings}\r\n\t\tApiId: ${3:String} #required\r\n\t\tAutoDeploy: ${4:Boolean}\r\n\t\tClientCertificateId: ${5:String}\r\n\t\tDefaultRouteSettings:\r\n\t\t\t${6:RouteSettings}\r\n\t\tDeploymentId: ${7:String}\r\n\t\tDescription: ${8:String}\r\n\t\tRouteSettings: ${9:Json}\r\n\t\tStageName: ${10:String} #required\r\n\t\tStageVariables: ${11:Json}\r\n\t\tTags: ${12:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html",
        "prefix": "apigatewayv2-stage",
        "scope": "source.cloudformation"
    },
    "AWS::ApiGatewayV2::VpcLink": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::VpcLink\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n\t\tTags: ${5:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html",
        "prefix": "apigatewayv2-vpclink",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Application\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html",
        "prefix": "appconfig-application",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::ConfigurationProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::ConfigurationProfile\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tLocationUri: ${4:String} #required\r\n\t\tName: ${5:String} #required\r\n\t\tRetrievalRoleArn: ${6:String}\r\n\t\tTags:\r\n\t\t\t- ${7:Tags}\r\n\t\tValidators:\r\n\t\t\t- ${8:Validators}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html",
        "prefix": "appconfig-configurationprofile",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::Deployment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Deployment\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tConfigurationProfileId: ${3:String} #required\r\n\t\tConfigurationVersion: ${4:String} #required\r\n\t\tDeploymentStrategyId: ${5:String} #required\r\n\t\tDescription: ${6:String}\r\n\t\tEnvironmentId: ${7:String} #required\r\n\t\tTags:\r\n\t\t\t- ${8:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html",
        "prefix": "appconfig-deployment",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::DeploymentStrategy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::DeploymentStrategy\"\r\n\tProperties:\r\n\t\tDeploymentDurationInMinutes: ${2:Double} #required\r\n\t\tDescription: ${3:String}\r\n\t\tFinalBakeTimeInMinutes: ${4:Double}\r\n\t\tGrowthFactor: ${5:Double} #required\r\n\t\tGrowthType: ${6:String}\r\n\t\tName: ${7:String} #required\r\n\t\tReplicateTo: ${8:String} #required\r\n\t\tTags:\r\n\t\t\t- ${9:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html",
        "prefix": "appconfig-deploymentstrategy",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::Environment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Environment\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tMonitors:\r\n\t\t\t- ${4:Monitors}\r\n\t\tName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html",
        "prefix": "appconfig-environment",
        "scope": "source.cloudformation"
    },
    "AWS::AppConfig::HostedConfigurationVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::HostedConfigurationVersion\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tConfigurationProfileId: ${3:String} #required\r\n\t\tContent: ${4:String} #required\r\n\t\tContentType: ${5:String} #required\r\n\t\tDescription: ${6:String}\r\n\t\tLatestVersionNumber: ${7:Double}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html",
        "prefix": "appconfig-hostedconfigurationversion",
        "scope": "source.cloudformation"
    },
    "AWS::AppFlow::ConnectorProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppFlow::ConnectorProfile\"\r\n\tProperties:\r\n\t\tConnectionMode: ${2:String} #required\r\n\t\tConnectorProfileConfig:\r\n\t\t\t${3:ConnectorProfileConfig}\r\n\t\tConnectorProfileName: ${4:String} #required\r\n\t\tConnectorType: ${5:String} #required\r\n\t\tKMSArn: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html\r\n\nAttributes: \r\n  ConnectorProfileArn\r\n  CredentialsArn\r\n",
        "prefix": "appflow-connectorprofile",
        "scope": "source.cloudformation"
    },
    "AWS::AppFlow::Flow": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppFlow::Flow\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDestinationFlowConfigList: #required\r\n\t\t\t- ${3:DestinationFlowConfig}\r\n\t\tFlowName: ${4:String} #required\r\n\t\tKMSArn: ${5:String}\r\n\t\tSourceFlowConfig: #required\r\n\t\t\t${6:SourceFlowConfig}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tTasks: #required\r\n\t\t\t- ${8:Task}\r\n\t\tTriggerConfig: #required\r\n\t\t\t${9:TriggerConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html\r\n\nAttributes: \r\n  FlowArn\r\n",
        "prefix": "appflow-flow",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::GatewayRoute": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::GatewayRoute\"\r\n\tProperties:\r\n\t\tGatewayRouteName: ${2:String} #required\r\n\t\tMeshName: ${3:String} #required\r\n\t\tMeshOwner: ${4:String}\r\n\t\tSpec: #required\r\n\t\t\t${5:GatewayRouteSpec}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tVirtualGatewayName: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  VirtualGatewayName\r\n  MeshOwner\r\n  ResourceOwner\r\n  GatewayRouteName\r\n  Arn\r\n",
        "prefix": "appmesh-gatewayroute",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::Mesh": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::Mesh\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tSpec:\r\n\t\t\t${3:MeshSpec}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  MeshOwner\r\n  ResourceOwner\r\n  Arn\r\n",
        "prefix": "appmesh-mesh",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::Route": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::Route\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tMeshOwner: ${3:String}\r\n\t\tRouteName: ${4:String} #required\r\n\t\tSpec: #required\r\n\t\t\t${5:RouteSpec}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tVirtualRouterName: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  VirtualRouterName\r\n  MeshOwner\r\n  ResourceOwner\r\n  RouteName\r\n  Arn\r\n",
        "prefix": "appmesh-route",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::VirtualGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualGateway\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tMeshOwner: ${3:String}\r\n\t\tSpec: #required\r\n\t\t\t${4:VirtualGatewaySpec}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tVirtualGatewayName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html\r\n\nAttributes: \r\n  Uid\r\n  VirtualGatewayName\r\n  MeshName\r\n  MeshOwner\r\n  ResourceOwner\r\n  Arn\r\n",
        "prefix": "appmesh-virtualgateway",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::VirtualNode": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualNode\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tMeshOwner: ${3:String}\r\n\t\tSpec: #required\r\n\t\t\t${4:VirtualNodeSpec}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tVirtualNodeName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  MeshOwner\r\n  ResourceOwner\r\n  Arn\r\n  VirtualNodeName\r\n",
        "prefix": "appmesh-virtualnode",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::VirtualRouter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualRouter\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tMeshOwner: ${3:String}\r\n\t\tSpec: #required\r\n\t\t\t${4:VirtualRouterSpec}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tVirtualRouterName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  VirtualRouterName\r\n  MeshOwner\r\n  ResourceOwner\r\n  Arn\r\n",
        "prefix": "appmesh-virtualrouter",
        "scope": "source.cloudformation"
    },
    "AWS::AppMesh::VirtualService": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualService\"\r\n\tProperties:\r\n\t\tMeshName: ${2:String} #required\r\n\t\tMeshOwner: ${3:String}\r\n\t\tSpec: #required\r\n\t\t\t${4:VirtualServiceSpec}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tVirtualServiceName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html\r\n\nAttributes: \r\n  Uid\r\n  MeshName\r\n  MeshOwner\r\n  ResourceOwner\r\n  VirtualServiceName\r\n  Arn\r\n",
        "prefix": "appmesh-virtualservice",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::DirectoryConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::DirectoryConfig\"\r\n\tProperties:\r\n\t\tDirectoryName: ${2:String} #required\r\n\t\tOrganizationalUnitDistinguishedNames: #required\r\n\t\t\t- ${3:String}\r\n\t\tServiceAccountCredentials: #required\r\n\t\t\t${4:ServiceAccountCredentials}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html",
        "prefix": "appstream-directoryconfig",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::Fleet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Fleet\"\r\n\tProperties:\r\n\t\tComputeCapacity: #required\r\n\t\t\t${2:ComputeCapacity}\r\n\t\tDescription: ${3:String}\r\n\t\tDisconnectTimeoutInSeconds: ${4:Integer}\r\n\t\tDisplayName: ${5:String}\r\n\t\tDomainJoinInfo:\r\n\t\t\t${6:DomainJoinInfo}\r\n\t\tEnableDefaultInternetAccess: ${7:Boolean}\r\n\t\tFleetType: ${8:String}\r\n\t\tIamRoleArn: ${9:String}\r\n\t\tIdleDisconnectTimeoutInSeconds: ${10:Integer}\r\n\t\tImageArn: ${11:String}\r\n\t\tImageName: ${12:String}\r\n\t\tInstanceType: ${13:String} #required\r\n\t\tMaxUserDurationInSeconds: ${14:Integer}\r\n\t\tName: ${15:String} #required\r\n\t\tStreamView: ${16:String}\r\n\t\tTags:\r\n\t\t\t- ${17:Tag}\r\n\t\tVpcConfig:\r\n\t\t\t${18:VpcConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html",
        "prefix": "appstream-fleet",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::ImageBuilder": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::ImageBuilder\"\r\n\tProperties:\r\n\t\tAccessEndpoints:\r\n\t\t\t- ${2:AccessEndpoint}\r\n\t\tAppstreamAgentVersion: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tDisplayName: ${5:String}\r\n\t\tDomainJoinInfo:\r\n\t\t\t${6:DomainJoinInfo}\r\n\t\tEnableDefaultInternetAccess: ${7:Boolean}\r\n\t\tIamRoleArn: ${8:String}\r\n\t\tImageArn: ${9:String}\r\n\t\tImageName: ${10:String}\r\n\t\tInstanceType: ${11:String} #required\r\n\t\tName: ${12:String} #required\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tVpcConfig:\r\n\t\t\t${14:VpcConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html\r\n\nAttributes: \r\n  StreamingUrl\r\n",
        "prefix": "appstream-imagebuilder",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::Stack": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Stack\"\r\n\tProperties:\r\n\t\tAccessEndpoints:\r\n\t\t\t- ${2:AccessEndpoint}\r\n\t\tApplicationSettings:\r\n\t\t\t${3:ApplicationSettings}\r\n\t\tAttributesToDelete:\r\n\t\t\t- ${4:String}\r\n\t\tDeleteStorageConnectors: ${5:Boolean}\r\n\t\tDescription: ${6:String}\r\n\t\tDisplayName: ${7:String}\r\n\t\tEmbedHostDomains:\r\n\t\t\t- ${8:String}\r\n\t\tFeedbackURL: ${9:String}\r\n\t\tName: ${10:String}\r\n\t\tRedirectURL: ${11:String}\r\n\t\tStorageConnectors:\r\n\t\t\t- ${12:StorageConnector}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tUserSettings:\r\n\t\t\t- ${14:UserSetting}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html",
        "prefix": "appstream-stack",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::StackFleetAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::StackFleetAssociation\"\r\n\tProperties:\r\n\t\tFleetName: ${2:String} #required\r\n\t\tStackName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html",
        "prefix": "appstream-stackfleetassociation",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::StackUserAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::StackUserAssociation\"\r\n\tProperties:\r\n\t\tAuthenticationType: ${2:String} #required\r\n\t\tSendEmailNotification: ${3:Boolean}\r\n\t\tStackName: ${4:String} #required\r\n\t\tUserName: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html",
        "prefix": "appstream-stackuserassociation",
        "scope": "source.cloudformation"
    },
    "AWS::AppStream::User": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::User\"\r\n\tProperties:\r\n\t\tAuthenticationType: ${2:String} #required\r\n\t\tFirstName: ${3:String}\r\n\t\tLastName: ${4:String}\r\n\t\tMessageAction: ${5:String}\r\n\t\tUserName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html",
        "prefix": "appstream-user",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::ApiCache": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::ApiCache\"\r\n\tProperties:\r\n\t\tApiCachingBehavior: ${2:String} #required\r\n\t\tApiId: ${3:String} #required\r\n\t\tAtRestEncryptionEnabled: ${4:Boolean}\r\n\t\tTransitEncryptionEnabled: ${5:Boolean}\r\n\t\tTtl: ${6:Double} #required\r\n\t\tType: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html",
        "prefix": "appsync-apicache",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::ApiKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::ApiKey\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tApiKeyId: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tExpires: ${5:Double}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html\r\n\nAttributes: \r\n  ApiKey\r\n  Arn\r\n",
        "prefix": "appsync-apikey",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::DataSource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::DataSource\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tDynamoDBConfig:\r\n\t\t\t${4:DynamoDBConfig}\r\n\t\tElasticsearchConfig:\r\n\t\t\t${5:ElasticsearchConfig}\r\n\t\tHttpConfig:\r\n\t\t\t${6:HttpConfig}\r\n\t\tLambdaConfig:\r\n\t\t\t${7:LambdaConfig}\r\n\t\tName: ${8:String} #required\r\n\t\tRelationalDatabaseConfig:\r\n\t\t\t${9:RelationalDatabaseConfig}\r\n\t\tServiceRoleArn: ${10:String}\r\n\t\tType: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html\r\n\nAttributes: \r\n  DataSourceArn\r\n  Name\r\n",
        "prefix": "appsync-datasource",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::FunctionConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::FunctionConfiguration\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tDataSourceName: ${3:String} #required\r\n\t\tDescription: ${4:String}\r\n\t\tFunctionVersion: ${5:String} #required\r\n\t\tName: ${6:String} #required\r\n\t\tRequestMappingTemplate: ${7:String}\r\n\t\tRequestMappingTemplateS3Location: ${8:String}\r\n\t\tResponseMappingTemplate: ${9:String}\r\n\t\tResponseMappingTemplateS3Location: ${10:String}\r\n\t\tSyncConfig:\r\n\t\t\t${11:SyncConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html\r\n\nAttributes: \r\n  FunctionId\r\n  FunctionArn\r\n  DataSourceName\r\n  Name\r\n",
        "prefix": "appsync-functionconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::GraphQLApi": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::GraphQLApi\"\r\n\tProperties:\r\n\t\tAdditionalAuthenticationProviders:\r\n\t\t\t${2:AdditionalAuthenticationProviders}\r\n\t\tAuthenticationType: ${3:String} #required\r\n\t\tLogConfig:\r\n\t\t\t${4:LogConfig}\r\n\t\tName: ${5:String} #required\r\n\t\tOpenIDConnectConfig:\r\n\t\t\t${6:OpenIDConnectConfig}\r\n\t\tTags:\r\n\t\t\t${7:Tags}\r\n\t\tUserPoolConfig:\r\n\t\t\t${8:UserPoolConfig}\r\n\t\tXrayEnabled: ${9:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html\r\n\nAttributes: \r\n  GraphQLUrl\r\n  Arn\r\n  ApiId\r\n",
        "prefix": "appsync-graphqlapi",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::GraphQLSchema": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::GraphQLSchema\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tDefinition: ${3:String}\r\n\t\tDefinitionS3Location: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html",
        "prefix": "appsync-graphqlschema",
        "scope": "source.cloudformation"
    },
    "AWS::AppSync::Resolver": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::Resolver\"\r\n\tProperties:\r\n\t\tApiId: ${2:String} #required\r\n\t\tCachingConfig:\r\n\t\t\t${3:CachingConfig}\r\n\t\tDataSourceName: ${4:String}\r\n\t\tFieldName: ${5:String} #required\r\n\t\tKind: ${6:String}\r\n\t\tPipelineConfig:\r\n\t\t\t${7:PipelineConfig}\r\n\t\tRequestMappingTemplate: ${8:String}\r\n\t\tRequestMappingTemplateS3Location: ${9:String}\r\n\t\tResponseMappingTemplate: ${10:String}\r\n\t\tResponseMappingTemplateS3Location: ${11:String}\r\n\t\tSyncConfig:\r\n\t\t\t${12:SyncConfig}\r\n\t\tTypeName: ${13:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html\r\n\nAttributes: \r\n  TypeName\r\n  ResolverArn\r\n  FieldName\r\n",
        "prefix": "appsync-resolver",
        "scope": "source.cloudformation"
    },
    "AWS::ApplicationAutoScaling::ScalableTarget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationAutoScaling::ScalableTarget\"\r\n\tProperties:\r\n\t\tMaxCapacity: ${2:Integer} #required\r\n\t\tMinCapacity: ${3:Integer} #required\r\n\t\tResourceId: ${4:String} #required\r\n\t\tRoleARN: ${5:String} #required\r\n\t\tScalableDimension: ${6:String} #required\r\n\t\tScheduledActions:\r\n\t\t\t- ${7:ScheduledAction}\r\n\t\tServiceNamespace: ${8:String} #required\r\n\t\tSuspendedState:\r\n\t\t\t${9:SuspendedState}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html",
        "prefix": "applicationautoscaling-scalabletarget",
        "scope": "source.cloudformation"
    },
    "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationAutoScaling::ScalingPolicy\"\r\n\tProperties:\r\n\t\tPolicyName: ${2:String} #required\r\n\t\tPolicyType: ${3:String} #required\r\n\t\tResourceId: ${4:String}\r\n\t\tScalableDimension: ${5:String}\r\n\t\tScalingTargetId: ${6:String}\r\n\t\tServiceNamespace: ${7:String}\r\n\t\tStepScalingPolicyConfiguration:\r\n\t\t\t${8:StepScalingPolicyConfiguration}\r\n\t\tTargetTrackingScalingPolicyConfiguration:\r\n\t\t\t${9:TargetTrackingScalingPolicyConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html",
        "prefix": "applicationautoscaling-scalingpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::ApplicationInsights::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationInsights::Application\"\r\n\tProperties:\r\n\t\tAutoConfigurationEnabled: ${2:Boolean}\r\n\t\tCWEMonitorEnabled: ${3:Boolean}\r\n\t\tComponentMonitoringSettings:\r\n\t\t\t- ${4:ComponentMonitoringSetting}\r\n\t\tCustomComponents:\r\n\t\t\t- ${5:CustomComponent}\r\n\t\tLogPatternSets:\r\n\t\t\t- ${6:LogPatternSet}\r\n\t\tOpsCenterEnabled: ${7:Boolean}\r\n\t\tOpsItemSNSTopicArn: ${8:String}\r\n\t\tResourceGroupName: ${9:String} #required\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html\r\n\nAttributes: \r\n  ApplicationARN\r\n",
        "prefix": "applicationinsights-application",
        "scope": "source.cloudformation"
    },
    "AWS::Athena::DataCatalog": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::DataCatalog\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tParameters:\r\n\t\t\t${4:Map}\r\n\t\tTags:\r\n\t\t\t${5:Tags}\r\n\t\tType: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html",
        "prefix": "athena-datacatalog",
        "scope": "source.cloudformation"
    },
    "AWS::Athena::NamedQuery": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::NamedQuery\"\r\n\tProperties:\r\n\t\tDatabase: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tQueryString: ${5:String} #required\r\n\t\tWorkGroup: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html\r\n\nAttributes: \r\n  NamedQueryId\r\n",
        "prefix": "athena-namedquery",
        "scope": "source.cloudformation"
    },
    "AWS::Athena::WorkGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::WorkGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tRecursiveDeleteOption: ${4:Boolean}\r\n\t\tState: ${5:String}\r\n\t\tTags:\r\n\t\t\t${6:Tags}\r\n\t\tWorkGroupConfiguration:\r\n\t\t\t${7:WorkGroupConfiguration}\r\n\t\tWorkGroupConfigurationUpdates:\r\n\t\t\t${8:WorkGroupConfigurationUpdates}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html\r\n\nAttributes: \r\n  CreationTime\r\n",
        "prefix": "athena-workgroup",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScaling::AutoScalingGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::AutoScalingGroup\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: ${2:String}\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${3:String}\r\n\t\tCapacityRebalance: ${4:Boolean}\r\n\t\tCooldown: ${5:String}\r\n\t\tDesiredCapacity: ${6:String}\r\n\t\tHealthCheckGracePeriod: ${7:Integer}\r\n\t\tHealthCheckType: ${8:String}\r\n\t\tInstanceId: ${9:String}\r\n\t\tLaunchConfigurationName: ${10:String}\r\n\t\tLaunchTemplate:\r\n\t\t\t${11:LaunchTemplateSpecification}\r\n\t\tLifecycleHookSpecificationList:\r\n\t\t\t- ${12:LifecycleHookSpecification}\r\n\t\tLoadBalancerNames:\r\n\t\t\t- ${13:String}\r\n\t\tMaxInstanceLifetime: ${14:Integer}\r\n\t\tMaxSize: ${15:String} #required\r\n\t\tMetricsCollection:\r\n\t\t\t- ${16:MetricsCollection}\r\n\t\tMinSize: ${17:String} #required\r\n\t\tMixedInstancesPolicy:\r\n\t\t\t${18:MixedInstancesPolicy}\r\n\t\tNewInstancesProtectedFromScaleIn: ${19:Boolean}\r\n\t\tNotificationConfigurations:\r\n\t\t\t- ${20:NotificationConfiguration}\r\n\t\tPlacementGroup: ${21:String}\r\n\t\tServiceLinkedRoleARN: ${22:String}\r\n\t\tTags:\r\n\t\t\t- ${23:TagProperty}\r\n\t\tTargetGroupARNs:\r\n\t\t\t- ${24:String}\r\n\t\tTerminationPolicies:\r\n\t\t\t- ${25:String}\r\n\t\tVPCZoneIdentifier:\r\n\t\t\t- ${26:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html\r\n\nAttributes: \r\n  LaunchConfigurationName\r\n  LaunchTemplateSpecification\r\n  MixedInstancesPolicy\r\n  PlacementGroup\r\n  VPCZoneIdentifier\r\n",
        "prefix": "autoscaling-autoscalinggroup",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScaling::LaunchConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::LaunchConfiguration\"\r\n\tProperties:\r\n\t\tAssociatePublicIpAddress: ${2:Boolean}\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- ${3:BlockDeviceMapping}\r\n\t\tClassicLinkVPCId: ${4:String}\r\n\t\tClassicLinkVPCSecurityGroups:\r\n\t\t\t- ${5:String}\r\n\t\tEbsOptimized: ${6:Boolean}\r\n\t\tIamInstanceProfile: ${7:String}\r\n\t\tImageId: ${8:String} #required\r\n\t\tInstanceId: ${9:String}\r\n\t\tInstanceMonitoring: ${10:Boolean}\r\n\t\tInstanceType: ${11:String} #required\r\n\t\tKernelId: ${12:String}\r\n\t\tKeyName: ${13:String}\r\n\t\tLaunchConfigurationName: ${14:String}\r\n\t\tMetadataOptions:\r\n\t\t\t${15:MetadataOption}\r\n\t\tPlacementTenancy: ${16:String}\r\n\t\tRamDiskId: ${17:String}\r\n\t\tSecurityGroups:\r\n\t\t\t- ${18:String}\r\n\t\tSpotPrice: ${19:String}\r\n\t\tUserData: ${20:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html",
        "prefix": "autoscaling-launchconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScaling::LifecycleHook": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::LifecycleHook\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: ${2:String} #required\r\n\t\tDefaultResult: ${3:String}\r\n\t\tHeartbeatTimeout: ${4:Integer}\r\n\t\tLifecycleHookName: ${5:String}\r\n\t\tLifecycleTransition: ${6:String} #required\r\n\t\tNotificationMetadata: ${7:String}\r\n\t\tNotificationTargetARN: ${8:String}\r\n\t\tRoleARN: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html",
        "prefix": "autoscaling-lifecyclehook",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScaling::ScalingPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::ScalingPolicy\"\r\n\tProperties:\r\n\t\tAdjustmentType: ${2:String}\r\n\t\tAutoScalingGroupName: ${3:String} #required\r\n\t\tCooldown: ${4:String}\r\n\t\tEstimatedInstanceWarmup: ${5:Integer}\r\n\t\tMetricAggregationType: ${6:String}\r\n\t\tMinAdjustmentMagnitude: ${7:Integer}\r\n\t\tPolicyType: ${8:String}\r\n\t\tScalingAdjustment: ${9:Integer}\r\n\t\tStepAdjustments:\r\n\t\t\t- ${10:StepAdjustment}\r\n\t\tTargetTrackingConfiguration:\r\n\t\t\t${11:TargetTrackingConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html",
        "prefix": "autoscaling-scalingpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScaling::ScheduledAction": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::ScheduledAction\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: ${2:String} #required\r\n\t\tDesiredCapacity: ${3:Integer}\r\n\t\tEndTime: ${4:String}\r\n\t\tMaxSize: ${5:Integer}\r\n\t\tMinSize: ${6:Integer}\r\n\t\tRecurrence: ${7:String}\r\n\t\tStartTime: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html",
        "prefix": "autoscaling-scheduledaction",
        "scope": "source.cloudformation"
    },
    "AWS::AutoScalingPlans::ScalingPlan": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScalingPlans::ScalingPlan\"\r\n\tProperties:\r\n\t\tApplicationSource: #required\r\n\t\t\t${2:ApplicationSource}\r\n\t\tScalingInstructions: #required\r\n\t\t\t- ${3:ScalingInstruction}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html\r\n\nAttributes: \r\n  ScalingPlanName\r\n  ScalingPlanVersion\r\n",
        "prefix": "autoscalingplans-scalingplan",
        "scope": "source.cloudformation"
    },
    "AWS::Backup::BackupPlan": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupPlan\"\r\n\tProperties:\r\n\t\tBackupPlan: #required\r\n\t\t\t${2:BackupPlanResourceType}\r\n\t\tBackupPlanTags: ${3:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html\r\n\nAttributes: \r\n  VersionId\r\n  BackupPlanId\r\n  BackupPlanArn\r\n",
        "prefix": "backup-backupplan",
        "scope": "source.cloudformation"
    },
    "AWS::Backup::BackupSelection": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupSelection\"\r\n\tProperties:\r\n\t\tBackupPlanId: ${2:String} #required\r\n\t\tBackupSelection: #required\r\n\t\t\t${3:BackupSelectionResourceType}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html\r\n\nAttributes: \r\n  BackupPlanId\r\n  SelectionId\r\n",
        "prefix": "backup-backupselection",
        "scope": "source.cloudformation"
    },
    "AWS::Backup::BackupVault": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupVault\"\r\n\tProperties:\r\n\t\tAccessPolicy: ${2:Json}\r\n\t\tBackupVaultName: ${3:String} #required\r\n\t\tBackupVaultTags: ${4:Json}\r\n\t\tEncryptionKeyArn: ${5:String}\r\n\t\tNotifications:\r\n\t\t\t${6:NotificationObjectType}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html\r\n\nAttributes: \r\n  BackupVaultName\r\n  BackupVaultArn\r\n",
        "prefix": "backup-backupvault",
        "scope": "source.cloudformation"
    },
    "AWS::Batch::ComputeEnvironment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::ComputeEnvironment\"\r\n\tProperties:\r\n\t\tComputeEnvironmentName: ${2:String}\r\n\t\tComputeResources:\r\n\t\t\t${3:ComputeResources}\r\n\t\tServiceRole: ${4:String} #required\r\n\t\tState: ${5:String}\r\n\t\tTags: ${6:Json}\r\n\t\tType: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html",
        "prefix": "batch-computeenvironment",
        "scope": "source.cloudformation"
    },
    "AWS::Batch::JobDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::JobDefinition\"\r\n\tProperties:\r\n\t\tContainerProperties:\r\n\t\t\t${2:ContainerProperties}\r\n\t\tJobDefinitionName: ${3:String}\r\n\t\tNodeProperties:\r\n\t\t\t${4:NodeProperties}\r\n\t\tParameters: ${5:Json}\r\n\t\tRetryStrategy:\r\n\t\t\t${6:RetryStrategy}\r\n\t\tTags: ${7:Json}\r\n\t\tTimeout:\r\n\t\t\t${8:Timeout}\r\n\t\tType: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html",
        "prefix": "batch-jobdefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Batch::JobQueue": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::JobQueue\"\r\n\tProperties:\r\n\t\tComputeEnvironmentOrder: #required\r\n\t\t\t- ${2:ComputeEnvironmentOrder}\r\n\t\tJobQueueName: ${3:String}\r\n\t\tPriority: ${4:Integer} #required\r\n\t\tState: ${5:String}\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html",
        "prefix": "batch-jobqueue",
        "scope": "source.cloudformation"
    },
    "AWS::Budgets::Budget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Budgets::Budget\"\r\n\tProperties:\r\n\t\tBudget: #required\r\n\t\t\t${2:BudgetData}\r\n\t\tNotificationsWithSubscribers:\r\n\t\t\t- ${3:NotificationWithSubscribers}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html",
        "prefix": "budgets-budget",
        "scope": "source.cloudformation"
    },
    "AWS::CE::CostCategory": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CE::CostCategory\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tRuleVersion: ${3:String} #required\r\n\t\tRules: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html\r\n\nAttributes: \r\n  Arn\r\n  EffectiveStart\r\n",
        "prefix": "ce-costcategory",
        "scope": "source.cloudformation"
    },
    "AWS::Cassandra::Keyspace": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cassandra::Keyspace\"\r\n\tProperties:\r\n\t\tKeyspaceName: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html",
        "prefix": "cassandra-keyspace",
        "scope": "source.cloudformation"
    },
    "AWS::Cassandra::Table": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cassandra::Table\"\r\n\tProperties:\r\n\t\tBillingMode:\r\n\t\t\t${2:BillingMode}\r\n\t\tClusteringKeyColumns:\r\n\t\t\t- ${3:ClusteringKeyColumn}\r\n\t\tKeyspaceName: ${4:String} #required\r\n\t\tPartitionKeyColumns: #required\r\n\t\t\t- ${5:Column}\r\n\t\tRegularColumns:\r\n\t\t\t- ${6:Column}\r\n\t\tTableName: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html",
        "prefix": "cassandra-table",
        "scope": "source.cloudformation"
    },
    "AWS::CertificateManager::Certificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CertificateManager::Certificate\"\r\n\tProperties:\r\n\t\tCertificateAuthorityArn: ${2:String}\r\n\t\tCertificateTransparencyLoggingPreference: ${3:String}\r\n\t\tDomainName: ${4:String} #required\r\n\t\tDomainValidationOptions:\r\n\t\t\t- ${5:DomainValidationOption}\r\n\t\tSubjectAlternativeNames:\r\n\t\t\t- ${6:String}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tValidationMethod: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
        "prefix": "certificatemanager-certificate",
        "scope": "source.cloudformation"
    },
    "AWS::Chatbot::SlackChannelConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Chatbot::SlackChannelConfiguration\"\r\n\tProperties:\r\n\t\tConfigurationName: ${2:String} #required\r\n\t\tIamRoleArn: ${3:String} #required\r\n\t\tLoggingLevel: ${4:String}\r\n\t\tSlackChannelId: ${5:String} #required\r\n\t\tSlackWorkspaceId: ${6:String} #required\r\n\t\tSnsTopicArns:\r\n\t\t\t- ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "chatbot-slackchannelconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::Cloud9::EnvironmentEC2": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cloud9::EnvironmentEC2\"\r\n\tProperties:\r\n\t\tAutomaticStopTimeMinutes: ${2:Integer}\r\n\t\tConnectionType: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tInstanceType: ${5:String} #required\r\n\t\tName: ${6:String}\r\n\t\tOwnerArn: ${7:String}\r\n\t\tRepositories:\r\n\t\t\t- ${8:Repository}\r\n\t\tSubnetId: ${9:String}\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "cloud9-environmentec2",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFormation::CustomResource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::CustomResource\"\r\n\tProperties:\r\n\t\tServiceToken: ${2:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html",
        "prefix": "cloudformation-customresource",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFormation::Macro": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::Macro\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tFunctionName: ${3:String} #required\r\n\t\tLogGroupName: ${4:String}\r\n\t\tLogRoleARN: ${5:String}\r\n\t\tName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html",
        "prefix": "cloudformation-macro",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFormation::Stack": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::Stack\"\r\n\tProperties:\r\n\t\tNotificationARNs:\r\n\t\t\t- ${2:String}\r\n\t\tParameters:\r\n\t\t\t${3:Map}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n\t\tTemplateURL: ${5:String} #required\r\n\t\tTimeoutInMinutes: ${6:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html",
        "prefix": "cloudformation-stack",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFormation::StackSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::StackSet\"\r\n\tProperties:\r\n\t\tAdministrationRoleARN: ${2:String}\r\n\t\tAutoDeployment:\r\n\t\t\t${3:AutoDeployment}\r\n\t\tCapabilities:\r\n\t\t\t- ${4:String}\r\n\t\tDescription: ${5:String}\r\n\t\tExecutionRoleName: ${6:String}\r\n\t\tOperationPreferences:\r\n\t\t\t${7:OperationPreferences}\r\n\t\tParameters:\r\n\t\t\t- ${8:Parameter}\r\n\t\tPermissionModel: ${9:String}\r\n\t\tStackInstancesGroup:\r\n\t\t\t- ${10:StackInstances}\r\n\t\tStackSetName: ${11:String}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n\t\tTemplateBody: ${13:String}\r\n\t\tTemplateURL: ${14:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html\r\n\nAttributes: \r\n  StackSetId\r\n",
        "prefix": "cloudformation-stackset",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFormation::WaitCondition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::WaitCondition\"\r\n\tProperties:\r\n\t\tCount: ${2:Integer}\r\n\t\tHandle: ${3:String}\r\n\t\tTimeout: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html\r\n\nAttributes: \r\n  Data\r\n",
        "prefix": "cloudformation-waitcondition",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::CachePolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::CachePolicy\"\r\n\tProperties:\r\n\t\tCachePolicyConfig: #required\r\n\t\t\t${2:CachePolicyConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html\r\n\nAttributes: \r\n  Id\r\n  LastModifiedTime\r\n",
        "prefix": "cloudfront-cachepolicy",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::CloudFrontOriginAccessIdentity\"\r\n\tProperties:\r\n\t\tCloudFrontOriginAccessIdentityConfig: #required\r\n\t\t\t${2:CloudFrontOriginAccessIdentityConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html\r\n\nAttributes: \r\n  S3CanonicalUserId\r\n",
        "prefix": "cloudfront-cloudfrontoriginaccessidentity",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::Distribution": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::Distribution\"\r\n\tProperties:\r\n\t\tDistributionConfig: #required\r\n\t\t\t${2:DistributionConfig}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html\r\n\nAttributes: \r\n  DomainName\r\n",
        "prefix": "cloudfront-distribution",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::KeyGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::KeyGroup\"\r\n\tProperties:\r\n\t\tKeyGroupConfig: #required\r\n\t\t\t${2:KeyGroupConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html\r\n\nAttributes: \r\n  Id\r\n  LastModifiedTime\r\n",
        "prefix": "cloudfront-keygroup",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::OriginRequestPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::OriginRequestPolicy\"\r\n\tProperties:\r\n\t\tOriginRequestPolicyConfig: #required\r\n\t\t\t${2:OriginRequestPolicyConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html\r\n\nAttributes: \r\n  Id\r\n  LastModifiedTime\r\n",
        "prefix": "cloudfront-originrequestpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::PublicKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::PublicKey\"\r\n\tProperties:\r\n\t\tPublicKeyConfig: #required\r\n\t\t\t${2:PublicKeyConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html\r\n\nAttributes: \r\n  CreatedTime\r\n  Id\r\n",
        "prefix": "cloudfront-publickey",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::RealtimeLogConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::RealtimeLogConfig\"\r\n\tProperties:\r\n\t\tEndPoints: #required\r\n\t\t\t- ${2:EndPoint}\r\n\t\tFields: #required\r\n\t\t\t- ${3:String}\r\n\t\tName: ${4:String} #required\r\n\t\tSamplingRate: ${5:Double} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "cloudfront-realtimelogconfig",
        "scope": "source.cloudformation"
    },
    "AWS::CloudFront::StreamingDistribution": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::StreamingDistribution\"\r\n\tProperties:\r\n\t\tStreamingDistributionConfig: #required\r\n\t\t\t${2:StreamingDistributionConfig}\r\n\t\tTags: #required\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html\r\n\nAttributes: \r\n  DomainName\r\n",
        "prefix": "cloudfront-streamingdistribution",
        "scope": "source.cloudformation"
    },
    "AWS::CloudTrail::Trail": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudTrail::Trail\"\r\n\tProperties:\r\n\t\tCloudWatchLogsLogGroupArn: ${2:String}\r\n\t\tCloudWatchLogsRoleArn: ${3:String}\r\n\t\tEnableLogFileValidation: ${4:Boolean}\r\n\t\tEventSelectors:\r\n\t\t\t- ${5:EventSelector}\r\n\t\tIncludeGlobalServiceEvents: ${6:Boolean}\r\n\t\tIsLogging: ${7:Boolean} #required\r\n\t\tIsMultiRegionTrail: ${8:Boolean}\r\n\t\tKMSKeyId: ${9:String}\r\n\t\tS3BucketName: ${10:String} #required\r\n\t\tS3KeyPrefix: ${11:String}\r\n\t\tSnsTopicName: ${12:String}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tTrailName: ${14:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html\r\n\nAttributes: \r\n  Arn\r\n  SnsTopicArn\r\n",
        "prefix": "cloudtrail-trail",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::Alarm": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::Alarm\"\r\n\tProperties:\r\n\t\tActionsEnabled: ${2:Boolean}\r\n\t\tAlarmActions:\r\n\t\t\t- ${3:String}\r\n\t\tAlarmDescription: ${4:String}\r\n\t\tAlarmName: ${5:String}\r\n\t\tComparisonOperator: ${6:String} #required\r\n\t\tDatapointsToAlarm: ${7:Integer}\r\n\t\tDimensions:\r\n\t\t\t- ${8:Dimension}\r\n\t\tEvaluateLowSampleCountPercentile: ${9:String}\r\n\t\tEvaluationPeriods: ${10:Integer} #required\r\n\t\tExtendedStatistic: ${11:String}\r\n\t\tInsufficientDataActions:\r\n\t\t\t- ${12:String}\r\n\t\tMetricName: ${13:String}\r\n\t\tMetrics:\r\n\t\t\t- ${14:MetricDataQuery}\r\n\t\tNamespace: ${15:String}\r\n\t\tOKActions:\r\n\t\t\t- ${16:String}\r\n\t\tPeriod: ${17:Integer}\r\n\t\tStatistic: ${18:String}\r\n\t\tThreshold: ${19:Double}\r\n\t\tThresholdMetricId: ${20:String}\r\n\t\tTreatMissingData: ${21:String}\r\n\t\tUnit: ${22:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "cloudwatch-alarm",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::AnomalyDetector": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::AnomalyDetector\"\r\n\tProperties:\r\n\t\tConfiguration:\r\n\t\t\t${2:Configuration}\r\n\t\tDimensions:\r\n\t\t\t- ${3:Dimension}\r\n\t\tMetricName: ${4:String} #required\r\n\t\tNamespace: ${5:String} #required\r\n\t\tStat: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html",
        "prefix": "cloudwatch-anomalydetector",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::CompositeAlarm": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::CompositeAlarm\"\r\n\tProperties:\r\n\t\tActionsEnabled: ${2:Boolean}\r\n\t\tAlarmActions:\r\n\t\t\t- ${3:String}\r\n\t\tAlarmDescription: ${4:String}\r\n\t\tAlarmName: ${5:String} #required\r\n\t\tAlarmRule: ${6:String} #required\r\n\t\tInsufficientDataActions:\r\n\t\t\t- ${7:String}\r\n\t\tOKActions:\r\n\t\t\t- ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "cloudwatch-compositealarm",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::Dashboard": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::Dashboard\"\r\n\tProperties:\r\n\t\tDashboardBody: ${2:String} #required\r\n\t\tDashboardName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html",
        "prefix": "cloudwatch-dashboard",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::InsightRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::InsightRule\"\r\n\tProperties:\r\n\t\tRuleBody: ${2:String} #required\r\n\t\tRuleName: ${3:String} #required\r\n\t\tRuleState: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t${5:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html\r\n\nAttributes: \r\n  Arn\r\n  RuleName\r\n",
        "prefix": "cloudwatch-insightrule",
        "scope": "source.cloudformation"
    },
    "AWS::CloudWatch::MetricStream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::MetricStream\"\r\n\tProperties:\r\n\t\tExcludeFilters:\r\n\t\t\t- ${2:MetricStreamFilter}\r\n\t\tFirehoseArn: ${3:String} #required\r\n\t\tIncludeFilters:\r\n\t\t\t- ${4:MetricStreamFilter}\r\n\t\tName: ${5:String}\r\n\t\tRoleArn: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html\r\n\nAttributes: \r\n  Arn\r\n  CreationDate\r\n  LastUpdateDate\r\n  State\r\n",
        "prefix": "cloudwatch-metricstream",
        "scope": "source.cloudformation"
    },
    "AWS::CodeArtifact::Domain": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeArtifact::Domain\"\r\n\tProperties:\r\n\t\tDomainName: ${2:String} #required\r\n\t\tPermissionsPolicyDocument: ${3:Json}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html\r\n\nAttributes: \r\n  Name\r\n  Owner\r\n  EncryptionKey\r\n  Arn\r\n",
        "prefix": "codeartifact-domain",
        "scope": "source.cloudformation"
    },
    "AWS::CodeArtifact::Repository": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeArtifact::Repository\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tExternalConnections:\r\n\t\t\t- ${3:String}\r\n\t\tPermissionsPolicyDocument: ${4:Json}\r\n\t\tRepositoryName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tUpstreams:\r\n\t\t\t- ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html\r\n\nAttributes: \r\n  Name\r\n  DomainName\r\n  DomainOwner\r\n  Arn\r\n",
        "prefix": "codeartifact-repository",
        "scope": "source.cloudformation"
    },
    "AWS::CodeBuild::Project": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::Project\"\r\n\tProperties:\r\n\t\tArtifacts: #required\r\n\t\t\t${2:Artifacts}\r\n\t\tBadgeEnabled: ${3:Boolean}\r\n\t\tBuildBatchConfig:\r\n\t\t\t${4:ProjectBuildBatchConfig}\r\n\t\tCache:\r\n\t\t\t${5:ProjectCache}\r\n\t\tDescription: ${6:String}\r\n\t\tEncryptionKey: ${7:String}\r\n\t\tEnvironment: #required\r\n\t\t\t${8:Environment}\r\n\t\tFileSystemLocations:\r\n\t\t\t- ${9:ProjectFileSystemLocation}\r\n\t\tLogsConfig:\r\n\t\t\t${10:LogsConfig}\r\n\t\tName: ${11:String}\r\n\t\tQueuedTimeoutInMinutes: ${12:Integer}\r\n\t\tSecondaryArtifacts:\r\n\t\t\t- ${13:Artifacts}\r\n\t\tSecondarySourceVersions:\r\n\t\t\t- ${14:ProjectSourceVersion}\r\n\t\tSecondarySources:\r\n\t\t\t- ${15:Source}\r\n\t\tServiceRole: ${16:String} #required\r\n\t\tSource: #required\r\n\t\t\t${17:Source}\r\n\t\tSourceVersion: ${18:String}\r\n\t\tTags:\r\n\t\t\t- ${19:Tag}\r\n\t\tTimeoutInMinutes: ${20:Integer}\r\n\t\tTriggers:\r\n\t\t\t${21:ProjectTriggers}\r\n\t\tVpcConfig:\r\n\t\t\t${22:VpcConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "codebuild-project",
        "scope": "source.cloudformation"
    },
    "AWS::CodeBuild::ReportGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::ReportGroup\"\r\n\tProperties:\r\n\t\tDeleteReports: ${2:Boolean}\r\n\t\tExportConfig: #required\r\n\t\t\t${3:ReportExportConfig}\r\n\t\tName: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tType: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "codebuild-reportgroup",
        "scope": "source.cloudformation"
    },
    "AWS::CodeBuild::SourceCredential": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::SourceCredential\"\r\n\tProperties:\r\n\t\tAuthType: ${2:String} #required\r\n\t\tServerType: ${3:String} #required\r\n\t\tToken: ${4:String} #required\r\n\t\tUsername: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html",
        "prefix": "codebuild-sourcecredential",
        "scope": "source.cloudformation"
    },
    "AWS::CodeCommit::Repository": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeCommit::Repository\"\r\n\tProperties:\r\n\t\tCode:\r\n\t\t\t${2:Code}\r\n\t\tRepositoryDescription: ${3:String}\r\n\t\tRepositoryName: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tTriggers:\r\n\t\t\t- ${6:RepositoryTrigger}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html\r\n\nAttributes: \r\n  CloneUrlHttp\r\n  CloneUrlSsh\r\n  Arn\r\n  Name\r\n",
        "prefix": "codecommit-repository",
        "scope": "source.cloudformation"
    },
    "AWS::CodeDeploy::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::Application\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String}\r\n\t\tComputePlatform: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html",
        "prefix": "codedeploy-application",
        "scope": "source.cloudformation"
    },
    "AWS::CodeDeploy::DeploymentConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::DeploymentConfig\"\r\n\tProperties:\r\n\t\tDeploymentConfigName: ${2:String}\r\n\t\tMinimumHealthyHosts:\r\n\t\t\t${3:MinimumHealthyHosts}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html",
        "prefix": "codedeploy-deploymentconfig",
        "scope": "source.cloudformation"
    },
    "AWS::CodeDeploy::DeploymentGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::DeploymentGroup\"\r\n\tProperties:\r\n\t\tAlarmConfiguration:\r\n\t\t\t${2:AlarmConfiguration}\r\n\t\tApplicationName: ${3:String} #required\r\n\t\tAutoRollbackConfiguration:\r\n\t\t\t${4:AutoRollbackConfiguration}\r\n\t\tAutoScalingGroups:\r\n\t\t\t- ${5:String}\r\n\t\tDeployment:\r\n\t\t\t${6:Deployment}\r\n\t\tDeploymentConfigName: ${7:String}\r\n\t\tDeploymentGroupName: ${8:String}\r\n\t\tDeploymentStyle:\r\n\t\t\t${9:DeploymentStyle}\r\n\t\tEc2TagFilters:\r\n\t\t\t- ${10:EC2TagFilter}\r\n\t\tEc2TagSet:\r\n\t\t\t${11:EC2TagSet}\r\n\t\tLoadBalancerInfo:\r\n\t\t\t${12:LoadBalancerInfo}\r\n\t\tOnPremisesInstanceTagFilters:\r\n\t\t\t- ${13:TagFilter}\r\n\t\tOnPremisesTagSet:\r\n\t\t\t${14:OnPremisesTagSet}\r\n\t\tServiceRoleArn: ${15:String} #required\r\n\t\tTriggerConfigurations:\r\n\t\t\t- ${16:TriggerConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html",
        "prefix": "codedeploy-deploymentgroup",
        "scope": "source.cloudformation"
    },
    "AWS::CodeGuruProfiler::ProfilingGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeGuruProfiler::ProfilingGroup\"\r\n\tProperties:\r\n\t\tAgentPermissions: ${2:Json}\r\n\t\tAnomalyDetectionNotificationConfiguration:\r\n\t\t\t- ${3:Channel}\r\n\t\tComputePlatform: ${4:String}\r\n\t\tProfilingGroupName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "codeguruprofiler-profilinggroup",
        "scope": "source.cloudformation"
    },
    "AWS::CodeGuruReviewer::RepositoryAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeGuruReviewer::RepositoryAssociation\"\r\n\tProperties:\r\n\t\tConnectionArn: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tOwner: ${4:String}\r\n\t\tType: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html\r\n\nAttributes: \r\n  AssociationArn\r\n",
        "prefix": "codegurureviewer-repositoryassociation",
        "scope": "source.cloudformation"
    },
    "AWS::CodePipeline::CustomActionType": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::CustomActionType\"\r\n\tProperties:\r\n\t\tCategory: ${2:String} #required\r\n\t\tConfigurationProperties:\r\n\t\t\t- ${3:ConfigurationProperties}\r\n\t\tInputArtifactDetails: #required\r\n\t\t\t${4:ArtifactDetails}\r\n\t\tOutputArtifactDetails: #required\r\n\t\t\t${5:ArtifactDetails}\r\n\t\tProvider: ${6:String} #required\r\n\t\tSettings:\r\n\t\t\t${7:Settings}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n\t\tVersion: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html",
        "prefix": "codepipeline-customactiontype",
        "scope": "source.cloudformation"
    },
    "AWS::CodePipeline::Pipeline": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::Pipeline\"\r\n\tProperties:\r\n\t\tArtifactStore:\r\n\t\t\t${2:ArtifactStore}\r\n\t\tArtifactStores:\r\n\t\t\t- ${3:ArtifactStoreMap}\r\n\t\tDisableInboundStageTransitions:\r\n\t\t\t- ${4:StageTransition}\r\n\t\tName: ${5:String}\r\n\t\tRestartExecutionOnUpdate: ${6:Boolean}\r\n\t\tRoleArn: ${7:String} #required\r\n\t\tStages: #required\r\n\t\t\t- ${8:StageDeclaration}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html\r\n\nAttributes: \r\n  Version\r\n",
        "prefix": "codepipeline-pipeline",
        "scope": "source.cloudformation"
    },
    "AWS::CodePipeline::Webhook": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::Webhook\"\r\n\tProperties:\r\n\t\tAuthentication: ${2:String} #required\r\n\t\tAuthenticationConfiguration: #required\r\n\t\t\t${3:WebhookAuthConfiguration}\r\n\t\tFilters: #required\r\n\t\t\t- ${4:WebhookFilterRule}\r\n\t\tName: ${5:String}\r\n\t\tRegisterWithThirdParty: ${6:Boolean}\r\n\t\tTargetAction: ${7:String} #required\r\n\t\tTargetPipeline: ${8:String} #required\r\n\t\tTargetPipelineVersion: ${9:Integer} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html\r\n\nAttributes: \r\n  Url\r\n",
        "prefix": "codepipeline-webhook",
        "scope": "source.cloudformation"
    },
    "AWS::CodeStar::GitHubRepository": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStar::GitHubRepository\"\r\n\tProperties:\r\n\t\tCode:\r\n\t\t\t${2:Code}\r\n\t\tConnectionArn: ${3:String}\r\n\t\tEnableIssues: ${4:Boolean}\r\n\t\tIsPrivate: ${5:Boolean}\r\n\t\tRepositoryAccessToken: ${6:String}\r\n\t\tRepositoryDescription: ${7:String}\r\n\t\tRepositoryName: ${8:String} #required\r\n\t\tRepositoryOwner: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html",
        "prefix": "codestar-githubrepository",
        "scope": "source.cloudformation"
    },
    "AWS::CodeStarConnections::Connection": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStarConnections::Connection\"\r\n\tProperties:\r\n\t\tConnectionName: ${2:String} #required\r\n\t\tHostArn: ${3:String}\r\n\t\tProviderType: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html\r\n\nAttributes: \r\n  ConnectionArn\r\n  ConnectionStatus\r\n  OwnerAccountId\r\n",
        "prefix": "codestarconnections-connection",
        "scope": "source.cloudformation"
    },
    "AWS::CodeStarNotifications::NotificationRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStarNotifications::NotificationRule\"\r\n\tProperties:\r\n\t\tDetailType: ${2:String} #required\r\n\t\tEventTypeIds: #required\r\n\t\t\t- ${3:String}\r\n\t\tName: ${4:String} #required\r\n\t\tResource: ${5:String} #required\r\n\t\tStatus: ${6:String}\r\n\t\tTags: ${7:Json}\r\n\t\tTargets: #required\r\n\t\t\t- ${8:Target}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html",
        "prefix": "codestarnotifications-notificationrule",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::IdentityPool": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::IdentityPool\"\r\n\tProperties:\r\n\t\tAllowClassicFlow: ${2:Boolean}\r\n\t\tAllowUnauthenticatedIdentities: ${3:Boolean} #required\r\n\t\tCognitoEvents: ${4:Json}\r\n\t\tCognitoIdentityProviders:\r\n\t\t\t- ${5:CognitoIdentityProvider}\r\n\t\tCognitoStreams:\r\n\t\t\t${6:CognitoStreams}\r\n\t\tDeveloperProviderName: ${7:String}\r\n\t\tIdentityPoolName: ${8:String}\r\n\t\tOpenIdConnectProviderARNs:\r\n\t\t\t- ${9:String}\r\n\t\tPushSync:\r\n\t\t\t${10:PushSync}\r\n\t\tSamlProviderARNs:\r\n\t\t\t- ${11:String}\r\n\t\tSupportedLoginProviders: ${12:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html\r\n\nAttributes: \r\n  Name\r\n",
        "prefix": "cognito-identitypool",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::IdentityPoolRoleAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::IdentityPoolRoleAttachment\"\r\n\tProperties:\r\n\t\tIdentityPoolId: ${2:String} #required\r\n\t\tRoleMappings: ${3:Json}\r\n\t\tRoles: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html",
        "prefix": "cognito-identitypoolroleattachment",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPool": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPool\"\r\n\tProperties:\r\n\t\tAccountRecoverySetting:\r\n\t\t\t${2:AccountRecoverySetting}\r\n\t\tAdminCreateUserConfig:\r\n\t\t\t${3:AdminCreateUserConfig}\r\n\t\tAliasAttributes:\r\n\t\t\t- ${4:String}\r\n\t\tAutoVerifiedAttributes:\r\n\t\t\t- ${5:String}\r\n\t\tDeviceConfiguration:\r\n\t\t\t${6:DeviceConfiguration}\r\n\t\tEmailConfiguration:\r\n\t\t\t${7:EmailConfiguration}\r\n\t\tEmailVerificationMessage: ${8:String}\r\n\t\tEmailVerificationSubject: ${9:String}\r\n\t\tEnabledMfas:\r\n\t\t\t- ${10:String}\r\n\t\tLambdaConfig:\r\n\t\t\t${11:LambdaConfig}\r\n\t\tMfaConfiguration: ${12:String}\r\n\t\tPolicies:\r\n\t\t\t${13:Policies}\r\n\t\tSchema:\r\n\t\t\t- ${14:SchemaAttribute}\r\n\t\tSmsAuthenticationMessage: ${15:String}\r\n\t\tSmsConfiguration:\r\n\t\t\t${16:SmsConfiguration}\r\n\t\tSmsVerificationMessage: ${17:String}\r\n\t\tUserPoolAddOns:\r\n\t\t\t${18:UserPoolAddOns}\r\n\t\tUserPoolName: ${19:String}\r\n\t\tUserPoolTags: ${20:Json}\r\n\t\tUsernameAttributes:\r\n\t\t\t- ${21:String}\r\n\t\tUsernameConfiguration:\r\n\t\t\t${22:UsernameConfiguration}\r\n\t\tVerificationMessageTemplate:\r\n\t\t\t${23:VerificationMessageTemplate}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html\r\n\nAttributes: \r\n  ProviderName\r\n  ProviderURL\r\n  Arn\r\n",
        "prefix": "cognito-userpool",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolClient": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolClient\"\r\n\tProperties:\r\n\t\tAccessTokenValidity: ${2:Integer}\r\n\t\tAllowedOAuthFlows:\r\n\t\t\t- ${3:String}\r\n\t\tAllowedOAuthFlowsUserPoolClient: ${4:Boolean}\r\n\t\tAllowedOAuthScopes:\r\n\t\t\t- ${5:String}\r\n\t\tAnalyticsConfiguration:\r\n\t\t\t${6:AnalyticsConfiguration}\r\n\t\tCallbackURLs:\r\n\t\t\t- ${7:String}\r\n\t\tClientName: ${8:String}\r\n\t\tDefaultRedirectURI: ${9:String}\r\n\t\tExplicitAuthFlows:\r\n\t\t\t- ${10:String}\r\n\t\tGenerateSecret: ${11:Boolean}\r\n\t\tIdTokenValidity: ${12:Integer}\r\n\t\tLogoutURLs:\r\n\t\t\t- ${13:String}\r\n\t\tPreventUserExistenceErrors: ${14:String}\r\n\t\tReadAttributes:\r\n\t\t\t- ${15:String}\r\n\t\tRefreshTokenValidity: ${16:Integer}\r\n\t\tSupportedIdentityProviders:\r\n\t\t\t- ${17:String}\r\n\t\tTokenValidityUnits:\r\n\t\t\t${18:TokenValidityUnits}\r\n\t\tUserPoolId: ${19:String} #required\r\n\t\tWriteAttributes:\r\n\t\t\t- ${20:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html\r\n\nAttributes: \r\n  ClientSecret\r\n  Name\r\n",
        "prefix": "cognito-userpoolclient",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolDomain": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolDomain\"\r\n\tProperties:\r\n\t\tCustomDomainConfig:\r\n\t\t\t${2:CustomDomainConfigType}\r\n\t\tDomain: ${3:String} #required\r\n\t\tUserPoolId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html",
        "prefix": "cognito-userpooldomain",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGroupName: ${3:String}\r\n\t\tPrecedence: ${4:Double}\r\n\t\tRoleArn: ${5:String}\r\n\t\tUserPoolId: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html",
        "prefix": "cognito-userpoolgroup",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolIdentityProvider": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolIdentityProvider\"\r\n\tProperties:\r\n\t\tAttributeMapping: ${2:Json}\r\n\t\tIdpIdentifiers:\r\n\t\t\t- ${3:String}\r\n\t\tProviderDetails: ${4:Json}\r\n\t\tProviderName: ${5:String} #required\r\n\t\tProviderType: ${6:String} #required\r\n\t\tUserPoolId: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html",
        "prefix": "cognito-userpoolidentityprovider",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolResourceServer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolResourceServer\"\r\n\tProperties:\r\n\t\tIdentifier: ${2:String} #required\r\n\t\tName: ${3:String} #required\r\n\t\tScopes:\r\n\t\t\t- ${4:ResourceServerScopeType}\r\n\t\tUserPoolId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html",
        "prefix": "cognito-userpoolresourceserver",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolRiskConfigurationAttachment\"\r\n\tProperties:\r\n\t\tAccountTakeoverRiskConfiguration:\r\n\t\t\t${2:AccountTakeoverRiskConfigurationType}\r\n\t\tClientId: ${3:String} #required\r\n\t\tCompromisedCredentialsRiskConfiguration:\r\n\t\t\t${4:CompromisedCredentialsRiskConfigurationType}\r\n\t\tRiskExceptionConfiguration:\r\n\t\t\t${5:RiskExceptionConfigurationType}\r\n\t\tUserPoolId: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html",
        "prefix": "cognito-userpoolriskconfigurationattachment",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolUICustomizationAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUICustomizationAttachment\"\r\n\tProperties:\r\n\t\tCSS: ${2:String}\r\n\t\tClientId: ${3:String} #required\r\n\t\tUserPoolId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html",
        "prefix": "cognito-userpooluicustomizationattachment",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolUser": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUser\"\r\n\tProperties:\r\n\t\tClientMetadata: ${2:Json}\r\n\t\tDesiredDeliveryMediums:\r\n\t\t\t- ${3:String}\r\n\t\tForceAliasCreation: ${4:Boolean}\r\n\t\tMessageAction: ${5:String}\r\n\t\tUserAttributes:\r\n\t\t\t- ${6:AttributeType}\r\n\t\tUserPoolId: ${7:String} #required\r\n\t\tUsername: ${8:String}\r\n\t\tValidationData:\r\n\t\t\t- ${9:AttributeType}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html",
        "prefix": "cognito-userpooluser",
        "scope": "source.cloudformation"
    },
    "AWS::Cognito::UserPoolUserToGroupAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUserToGroupAttachment\"\r\n\tProperties:\r\n\t\tGroupName: ${2:String} #required\r\n\t\tUserPoolId: ${3:String} #required\r\n\t\tUsername: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html",
        "prefix": "cognito-userpoolusertogroupattachment",
        "scope": "source.cloudformation"
    },
    "AWS::Config::AggregationAuthorization": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::AggregationAuthorization\"\r\n\tProperties:\r\n\t\tAuthorizedAccountId: ${2:String} #required\r\n\t\tAuthorizedAwsRegion: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html",
        "prefix": "config-aggregationauthorization",
        "scope": "source.cloudformation"
    },
    "AWS::Config::ConfigRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigRule\"\r\n\tProperties:\r\n\t\tConfigRuleName: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tInputParameters: ${4:Json}\r\n\t\tMaximumExecutionFrequency: ${5:String}\r\n\t\tScope:\r\n\t\t\t${6:Scope}\r\n\t\tSource: #required\r\n\t\t\t${7:Source}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html\r\n\nAttributes: \r\n  Arn\r\n  Compliance.Type\r\n  ConfigRuleId\r\n",
        "prefix": "config-configrule",
        "scope": "source.cloudformation"
    },
    "AWS::Config::ConfigurationAggregator": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigurationAggregator\"\r\n\tProperties:\r\n\t\tAccountAggregationSources:\r\n\t\t\t- ${2:AccountAggregationSource}\r\n\t\tConfigurationAggregatorName: ${3:String} #required\r\n\t\tOrganizationAggregationSource:\r\n\t\t\t${4:OrganizationAggregationSource}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html",
        "prefix": "config-configurationaggregator",
        "scope": "source.cloudformation"
    },
    "AWS::Config::ConfigurationRecorder": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigurationRecorder\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tRecordingGroup:\r\n\t\t\t${3:RecordingGroup}\r\n\t\tRoleARN: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html",
        "prefix": "config-configurationrecorder",
        "scope": "source.cloudformation"
    },
    "AWS::Config::ConformancePack": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConformancePack\"\r\n\tProperties:\r\n\t\tConformancePackInputParameters:\r\n\t\t\t- ${2:ConformancePackInputParameter}\r\n\t\tConformancePackName: ${3:String} #required\r\n\t\tDeliveryS3Bucket: ${4:String}\r\n\t\tDeliveryS3KeyPrefix: ${5:String}\r\n\t\tTemplateBody: ${6:String}\r\n\t\tTemplateS3Uri: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html",
        "prefix": "config-conformancepack",
        "scope": "source.cloudformation"
    },
    "AWS::Config::DeliveryChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::DeliveryChannel\"\r\n\tProperties:\r\n\t\tConfigSnapshotDeliveryProperties:\r\n\t\t\t${2:ConfigSnapshotDeliveryProperties}\r\n\t\tName: ${3:String}\r\n\t\tS3BucketName: ${4:String} #required\r\n\t\tS3KeyPrefix: ${5:String}\r\n\t\tSnsTopicARN: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html",
        "prefix": "config-deliverychannel",
        "scope": "source.cloudformation"
    },
    "AWS::Config::OrganizationConfigRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::OrganizationConfigRule\"\r\n\tProperties:\r\n\t\tExcludedAccounts:\r\n\t\t\t- ${2:String}\r\n\t\tOrganizationConfigRuleName: ${3:String} #required\r\n\t\tOrganizationCustomRuleMetadata:\r\n\t\t\t${4:OrganizationCustomRuleMetadata}\r\n\t\tOrganizationManagedRuleMetadata:\r\n\t\t\t${5:OrganizationManagedRuleMetadata}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html",
        "prefix": "config-organizationconfigrule",
        "scope": "source.cloudformation"
    },
    "AWS::Config::OrganizationConformancePack": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::OrganizationConformancePack\"\r\n\tProperties:\r\n\t\tConformancePackInputParameters:\r\n\t\t\t- ${2:ConformancePackInputParameter}\r\n\t\tDeliveryS3Bucket: ${3:String}\r\n\t\tDeliveryS3KeyPrefix: ${4:String}\r\n\t\tExcludedAccounts:\r\n\t\t\t- ${5:String}\r\n\t\tOrganizationConformancePackName: ${6:String} #required\r\n\t\tTemplateBody: ${7:String}\r\n\t\tTemplateS3Uri: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html",
        "prefix": "config-organizationconformancepack",
        "scope": "source.cloudformation"
    },
    "AWS::Config::RemediationConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::RemediationConfiguration\"\r\n\tProperties:\r\n\t\tAutomatic: ${2:Boolean}\r\n\t\tConfigRuleName: ${3:String} #required\r\n\t\tExecutionControls:\r\n\t\t\t${4:ExecutionControls}\r\n\t\tMaximumAutomaticAttempts: ${5:Integer}\r\n\t\tParameters: ${6:Json}\r\n\t\tResourceType: ${7:String}\r\n\t\tRetryAttemptSeconds: ${8:Integer}\r\n\t\tTargetId: ${9:String} #required\r\n\t\tTargetType: ${10:String} #required\r\n\t\tTargetVersion: ${11:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html",
        "prefix": "config-remediationconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::DAX::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::Cluster\"\r\n\tProperties:\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${2:String}\r\n\t\tClusterName: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tIAMRoleARN: ${5:String} #required\r\n\t\tNodeType: ${6:String} #required\r\n\t\tNotificationTopicARN: ${7:String}\r\n\t\tParameterGroupName: ${8:String}\r\n\t\tPreferredMaintenanceWindow: ${9:String}\r\n\t\tReplicationFactor: ${10:Integer} #required\r\n\t\tSSESpecification:\r\n\t\t\t${11:SSESpecification}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${12:String}\r\n\t\tSubnetGroupName: ${13:String}\r\n\t\tTags: ${14:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html\r\n\nAttributes: \r\n  ClusterDiscoveryEndpoint\r\n  Arn\r\n",
        "prefix": "dax-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::DAX::ParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::ParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tParameterGroupName: ${3:String}\r\n\t\tParameterNameValues: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html",
        "prefix": "dax-parametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::DAX::SubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::SubnetGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tSubnetGroupName: ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html",
        "prefix": "dax-subnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::DLM::LifecyclePolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DLM::LifecyclePolicy\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tExecutionRoleArn: ${3:String}\r\n\t\tPolicyDetails:\r\n\t\t\t${4:PolicyDetails}\r\n\t\tState: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "dlm-lifecyclepolicy",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::Certificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::Certificate\"\r\n\tProperties:\r\n\t\tCertificateIdentifier: ${2:String}\r\n\t\tCertificatePem: ${3:String}\r\n\t\tCertificateWallet: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html",
        "prefix": "dms-certificate",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::Endpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::Endpoint\"\r\n\tProperties:\r\n\t\tCertificateArn: ${2:String}\r\n\t\tDatabaseName: ${3:String}\r\n\t\tDynamoDbSettings:\r\n\t\t\t${4:DynamoDbSettings}\r\n\t\tElasticsearchSettings:\r\n\t\t\t${5:ElasticsearchSettings}\r\n\t\tEndpointIdentifier: ${6:String}\r\n\t\tEndpointType: ${7:String} #required\r\n\t\tEngineName: ${8:String} #required\r\n\t\tExtraConnectionAttributes: ${9:String}\r\n\t\tKafkaSettings:\r\n\t\t\t${10:KafkaSettings}\r\n\t\tKinesisSettings:\r\n\t\t\t${11:KinesisSettings}\r\n\t\tKmsKeyId: ${12:String}\r\n\t\tMongoDbSettings:\r\n\t\t\t${13:MongoDbSettings}\r\n\t\tNeptuneSettings:\r\n\t\t\t${14:NeptuneSettings}\r\n\t\tPassword: ${15:String}\r\n\t\tPort: ${16:Integer}\r\n\t\tS3Settings:\r\n\t\t\t${17:S3Settings}\r\n\t\tServerName: ${18:String}\r\n\t\tSslMode: ${19:String}\r\n\t\tTags:\r\n\t\t\t- ${20:Tag}\r\n\t\tUsername: ${21:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html\r\n\nAttributes: \r\n  ExternalId\r\n",
        "prefix": "dms-endpoint",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::EventSubscription": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::EventSubscription\"\r\n\tProperties:\r\n\t\tEnabled: ${2:Boolean}\r\n\t\tEventCategories:\r\n\t\t\t- ${3:String}\r\n\t\tSnsTopicArn: ${4:String} #required\r\n\t\tSourceIds:\r\n\t\t\t- ${5:String}\r\n\t\tSourceType: ${6:String}\r\n\t\tSubscriptionName: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html",
        "prefix": "dms-eventsubscription",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::ReplicationInstance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationInstance\"\r\n\tProperties:\r\n\t\tAllocatedStorage: ${2:Integer}\r\n\t\tAllowMajorVersionUpgrade: ${3:Boolean}\r\n\t\tAutoMinorVersionUpgrade: ${4:Boolean}\r\n\t\tAvailabilityZone: ${5:String}\r\n\t\tEngineVersion: ${6:String}\r\n\t\tKmsKeyId: ${7:String}\r\n\t\tMultiAZ: ${8:Boolean}\r\n\t\tPreferredMaintenanceWindow: ${9:String}\r\n\t\tPubliclyAccessible: ${10:Boolean}\r\n\t\tReplicationInstanceClass: ${11:String} #required\r\n\t\tReplicationInstanceIdentifier: ${12:String}\r\n\t\tReplicationSubnetGroupIdentifier: ${13:String}\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${15:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html\r\n\nAttributes: \r\n  ReplicationInstancePublicIpAddresses\r\n  ReplicationInstancePrivateIpAddresses\r\n",
        "prefix": "dms-replicationinstance",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::ReplicationSubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationSubnetGroup\"\r\n\tProperties:\r\n\t\tReplicationSubnetGroupDescription: ${2:String} #required\r\n\t\tReplicationSubnetGroupIdentifier: ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html",
        "prefix": "dms-replicationsubnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::DMS::ReplicationTask": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationTask\"\r\n\tProperties:\r\n\t\tCdcStartPosition: ${2:String}\r\n\t\tCdcStartTime: ${3:Double}\r\n\t\tCdcStopPosition: ${4:String}\r\n\t\tMigrationType: ${5:String} #required\r\n\t\tReplicationInstanceArn: ${6:String} #required\r\n\t\tReplicationTaskIdentifier: ${7:String}\r\n\t\tReplicationTaskSettings: ${8:String}\r\n\t\tSourceEndpointArn: ${9:String} #required\r\n\t\tTableMappings: ${10:String} #required\r\n\t\tTags:\r\n\t\t\t- ${11:Tag}\r\n\t\tTargetEndpointArn: ${12:String} #required\r\n\t\tTaskData: ${13:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html",
        "prefix": "dms-replicationtask",
        "scope": "source.cloudformation"
    },
    "AWS::DataBrew::Dataset": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Dataset\"\r\n\tProperties:\r\n\t\tFormatOptions: ${2:Json}\r\n\t\tInput: ${3:Json} #required\r\n\t\tName: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html",
        "prefix": "databrew-dataset",
        "scope": "source.cloudformation"
    },
    "AWS::DataBrew::Job": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Job\"\r\n\tProperties:\r\n\t\tDatasetName: ${2:String}\r\n\t\tEncryptionKeyArn: ${3:String}\r\n\t\tEncryptionMode: ${4:String}\r\n\t\tLogSubscription: ${5:String}\r\n\t\tMaxCapacity: ${6:Integer}\r\n\t\tMaxRetries: ${7:Integer}\r\n\t\tName: ${8:String} #required\r\n\t\tOutputLocation: ${9:Json}\r\n\t\tOutputs:\r\n\t\t\t- ${10:Output}\r\n\t\tProjectName: ${11:String}\r\n\t\tRecipe: ${12:Json}\r\n\t\tRoleArn: ${13:String} #required\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n\t\tTimeout: ${15:Integer}\r\n\t\tType: ${16:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html",
        "prefix": "databrew-job",
        "scope": "source.cloudformation"
    },
    "AWS::DataBrew::Project": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Project\"\r\n\tProperties:\r\n\t\tDatasetName: ${2:String} #required\r\n\t\tName: ${3:String} #required\r\n\t\tRecipeName: ${4:String} #required\r\n\t\tRoleArn: ${5:String} #required\r\n\t\tSample: ${6:Json}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html",
        "prefix": "databrew-project",
        "scope": "source.cloudformation"
    },
    "AWS::DataBrew::Recipe": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Recipe\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tSteps: #required\r\n\t\t\t- ${4:RecipeStep}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html",
        "prefix": "databrew-recipe",
        "scope": "source.cloudformation"
    },
    "AWS::DataBrew::Schedule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Schedule\"\r\n\tProperties:\r\n\t\tCronExpression: ${2:String} #required\r\n\t\tJobNames:\r\n\t\t\t- ${3:String}\r\n\t\tName: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html",
        "prefix": "databrew-schedule",
        "scope": "source.cloudformation"
    },
    "AWS::DataPipeline::Pipeline": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataPipeline::Pipeline\"\r\n\tProperties:\r\n\t\tActivate: ${2:Boolean}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String} #required\r\n\t\tParameterObjects: #required\r\n\t\t\t- ${5:ParameterObject}\r\n\t\tParameterValues:\r\n\t\t\t- ${6:ParameterValue}\r\n\t\tPipelineObjects:\r\n\t\t\t- ${7:PipelineObject}\r\n\t\tPipelineTags:\r\n\t\t\t- ${8:PipelineTag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html",
        "prefix": "datapipeline-pipeline",
        "scope": "source.cloudformation"
    },
    "AWS::Detective::MemberInvitation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Detective::MemberInvitation\"\r\n\tProperties:\r\n\t\tGraphArn: ${2:String} #required\r\n\t\tMemberEmailAddress: ${3:String} #required\r\n\t\tMemberId: ${4:String} #required\r\n\t\tMessage: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html",
        "prefix": "detective-memberinvitation",
        "scope": "source.cloudformation"
    },
    "AWS::DirectoryService::MicrosoftAD": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DirectoryService::MicrosoftAD\"\r\n\tProperties:\r\n\t\tCreateAlias: ${2:Boolean}\r\n\t\tEdition: ${3:String}\r\n\t\tEnableSso: ${4:Boolean}\r\n\t\tName: ${5:String} #required\r\n\t\tPassword: ${6:String} #required\r\n\t\tShortName: ${7:String}\r\n\t\tVpcSettings: #required\r\n\t\t\t${8:VpcSettings}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html\r\n\nAttributes: \r\n  Alias\r\n  DnsIpAddresses\r\n",
        "prefix": "directoryservice-microsoftad",
        "scope": "source.cloudformation"
    },
    "AWS::DirectoryService::SimpleAD": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DirectoryService::SimpleAD\"\r\n\tProperties:\r\n\t\tCreateAlias: ${2:Boolean}\r\n\t\tDescription: ${3:String}\r\n\t\tEnableSso: ${4:Boolean}\r\n\t\tName: ${5:String} #required\r\n\t\tPassword: ${6:String} #required\r\n\t\tShortName: ${7:String}\r\n\t\tSize: ${8:String} #required\r\n\t\tVpcSettings: #required\r\n\t\t\t${9:VpcSettings}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html\r\n\nAttributes: \r\n  Alias\r\n  DnsIpAddresses\r\n",
        "prefix": "directoryservice-simplead",
        "scope": "source.cloudformation"
    },
    "AWS::DocDB::DBCluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBCluster\"\r\n\tProperties:\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${2:String}\r\n\t\tBackupRetentionPeriod: ${3:Integer}\r\n\t\tDBClusterIdentifier: ${4:String}\r\n\t\tDBClusterParameterGroupName: ${5:String}\r\n\t\tDBSubnetGroupName: ${6:String}\r\n\t\tDeletionProtection: ${7:Boolean}\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- ${8:String}\r\n\t\tEngineVersion: ${9:String}\r\n\t\tKmsKeyId: ${10:String}\r\n\t\tMasterUserPassword: ${11:String} #required\r\n\t\tMasterUsername: ${12:String} #required\r\n\t\tPort: ${13:Integer}\r\n\t\tPreferredBackupWindow: ${14:String}\r\n\t\tPreferredMaintenanceWindow: ${15:String}\r\n\t\tSnapshotIdentifier: ${16:String}\r\n\t\tStorageEncrypted: ${17:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${18:Tag}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${19:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html\r\n\nAttributes: \r\n  ClusterResourceId\r\n  Endpoint\r\n  Port\r\n  ReadEndpoint\r\n",
        "prefix": "docdb-dbcluster",
        "scope": "source.cloudformation"
    },
    "AWS::DocDB::DBClusterParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tFamily: ${3:String} #required\r\n\t\tName: ${4:String}\r\n\t\tParameters: ${5:Json} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html",
        "prefix": "docdb-dbclusterparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::DocDB::DBInstance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBInstance\"\r\n\tProperties:\r\n\t\tAutoMinorVersionUpgrade: ${2:Boolean}\r\n\t\tAvailabilityZone: ${3:String}\r\n\t\tDBClusterIdentifier: ${4:String} #required\r\n\t\tDBInstanceClass: ${5:String} #required\r\n\t\tDBInstanceIdentifier: ${6:String}\r\n\t\tPreferredMaintenanceWindow: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html\r\n\nAttributes: \r\n  Endpoint\r\n  Port\r\n",
        "prefix": "docdb-dbinstance",
        "scope": "source.cloudformation"
    },
    "AWS::DocDB::DBSubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupDescription: ${2:String} #required\r\n\t\tDBSubnetGroupName: ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html",
        "prefix": "docdb-dbsubnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::DynamoDB::Table": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DynamoDB::Table\"\r\n\tProperties:\r\n\t\tAttributeDefinitions:\r\n\t\t\t- ${2:AttributeDefinition}\r\n\t\tBillingMode: ${3:String}\r\n\t\tGlobalSecondaryIndexes:\r\n\t\t\t- ${4:GlobalSecondaryIndex}\r\n\t\tKeySchema: #required\r\n\t\t\t- ${5:KeySchema}\r\n\t\tLocalSecondaryIndexes:\r\n\t\t\t- ${6:LocalSecondaryIndex}\r\n\t\tPointInTimeRecoverySpecification:\r\n\t\t\t${7:PointInTimeRecoverySpecification}\r\n\t\tProvisionedThroughput:\r\n\t\t\t${8:ProvisionedThroughput}\r\n\t\tSSESpecification:\r\n\t\t\t${9:SSESpecification}\r\n\t\tStreamSpecification:\r\n\t\t\t${10:StreamSpecification}\r\n\t\tTableName: ${11:String}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n\t\tTimeToLiveSpecification:\r\n\t\t\t${13:TimeToLiveSpecification}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html\r\n\nAttributes: \r\n  Arn\r\n  StreamArn\r\n",
        "prefix": "dynamodb-table",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::CapacityReservation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CapacityReservation\"\r\n\tProperties:\r\n\t\tAvailabilityZone: ${2:String} #required\r\n\t\tEbsOptimized: ${3:Boolean}\r\n\t\tEndDate: ${4:String}\r\n\t\tEndDateType: ${5:String}\r\n\t\tEphemeralStorage: ${6:Boolean}\r\n\t\tInstanceCount: ${7:Integer} #required\r\n\t\tInstanceMatchCriteria: ${8:String}\r\n\t\tInstancePlatform: ${9:String} #required\r\n\t\tInstanceType: ${10:String} #required\r\n\t\tTagSpecifications:\r\n\t\t\t- ${11:TagSpecification}\r\n\t\tTenancy: ${12:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html\r\n\nAttributes: \r\n  Tenancy\r\n  AvailableInstanceCount\r\n  AvailabilityZone\r\n  TotalInstanceCount\r\n  InstanceType\r\n",
        "prefix": "ec2-capacityreservation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::CarrierGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CarrierGateway\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t${2:Tags}\r\n\t\tVpcId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html\r\n\nAttributes: \r\n  CarrierGatewayId\r\n  State\r\n  OwnerId\r\n",
        "prefix": "ec2-carriergateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::ClientVpnAuthorizationRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnAuthorizationRule\"\r\n\tProperties:\r\n\t\tAccessGroupId: ${2:String}\r\n\t\tAuthorizeAllGroups: ${3:Boolean}\r\n\t\tClientVpnEndpointId: ${4:String} #required\r\n\t\tDescription: ${5:String}\r\n\t\tTargetNetworkCidr: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html",
        "prefix": "ec2-clientvpnauthorizationrule",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::ClientVpnEndpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnEndpoint\"\r\n\tProperties:\r\n\t\tAuthenticationOptions: #required\r\n\t\t\t- ${2:ClientAuthenticationRequest}\r\n\t\tClientCidrBlock: ${3:String} #required\r\n\t\tClientConnectOptions:\r\n\t\t\t${4:ClientConnectOptions}\r\n\t\tConnectionLogOptions: #required\r\n\t\t\t${5:ConnectionLogOptions}\r\n\t\tDescription: ${6:String}\r\n\t\tDnsServers:\r\n\t\t\t- ${7:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${8:String}\r\n\t\tSelfServicePortal: ${9:String}\r\n\t\tServerCertificateArn: ${10:String} #required\r\n\t\tSplitTunnel: ${11:Boolean}\r\n\t\tTagSpecifications:\r\n\t\t\t- ${12:TagSpecification}\r\n\t\tTransportProtocol: ${13:String}\r\n\t\tVpcId: ${14:String}\r\n\t\tVpnPort: ${15:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html",
        "prefix": "ec2-clientvpnendpoint",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::ClientVpnRoute": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnRoute\"\r\n\tProperties:\r\n\t\tClientVpnEndpointId: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tDestinationCidrBlock: ${4:String} #required\r\n\t\tTargetVpcSubnetId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html",
        "prefix": "ec2-clientvpnroute",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::ClientVpnTargetNetworkAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnTargetNetworkAssociation\"\r\n\tProperties:\r\n\t\tClientVpnEndpointId: ${2:String} #required\r\n\t\tSubnetId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html",
        "prefix": "ec2-clientvpntargetnetworkassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::CustomerGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CustomerGateway\"\r\n\tProperties:\r\n\t\tBgpAsn: ${2:Integer} #required\r\n\t\tIpAddress: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n\t\tType: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
        "prefix": "ec2-customergateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::DHCPOptions": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::DHCPOptions\"\r\n\tProperties:\r\n\t\tDomainName: ${2:String}\r\n\t\tDomainNameServers:\r\n\t\t\t- ${3:String}\r\n\t\tNetbiosNameServers:\r\n\t\t\t- ${4:String}\r\n\t\tNetbiosNodeType: ${5:Integer}\r\n\t\tNtpServers:\r\n\t\t\t- ${6:String}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html",
        "prefix": "ec2-dhcpoptions",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::EC2Fleet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EC2Fleet\"\r\n\tProperties:\r\n\t\tExcessCapacityTerminationPolicy: ${2:String}\r\n\t\tLaunchTemplateConfigs: #required\r\n\t\t\t- ${3:FleetLaunchTemplateConfigRequest}\r\n\t\tOnDemandOptions:\r\n\t\t\t${4:OnDemandOptionsRequest}\r\n\t\tReplaceUnhealthyInstances: ${5:Boolean}\r\n\t\tSpotOptions:\r\n\t\t\t${6:SpotOptionsRequest}\r\n\t\tTagSpecifications:\r\n\t\t\t- ${7:TagSpecification}\r\n\t\tTargetCapacitySpecification: #required\r\n\t\t\t${8:TargetCapacitySpecificationRequest}\r\n\t\tTerminateInstancesWithExpiration: ${9:Boolean}\r\n\t\tType: ${10:String}\r\n\t\tValidFrom: ${11:String}\r\n\t\tValidUntil: ${12:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html",
        "prefix": "ec2-ec2fleet",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::EIP": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EIP\"\r\n\tProperties:\r\n\t\tDomain: ${2:String}\r\n\t\tInstanceId: ${3:String}\r\n\t\tPublicIpv4Pool: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html\r\n\nAttributes: \r\n  AllocationId\r\n",
        "prefix": "ec2-eip",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::EIPAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EIPAssociation\"\r\n\tProperties:\r\n\t\tAllocationId: ${2:String}\r\n\t\tEIP: ${3:String}\r\n\t\tInstanceId: ${4:String}\r\n\t\tNetworkInterfaceId: ${5:String}\r\n\t\tPrivateIpAddress: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html",
        "prefix": "ec2-eipassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::EgressOnlyInternetGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EgressOnlyInternetGateway\"\r\n\tProperties:\r\n\t\tVpcId: ${2:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html",
        "prefix": "ec2-egressonlyinternetgateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::FlowLog": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::FlowLog\"\r\n\tProperties:\r\n\t\tDeliverLogsPermissionArn: ${2:String}\r\n\t\tLogDestination: ${3:String}\r\n\t\tLogDestinationType: ${4:String}\r\n\t\tLogFormat: ${5:String}\r\n\t\tLogGroupName: ${6:String}\r\n\t\tMaxAggregationInterval: ${7:Integer}\r\n\t\tResourceId: ${8:String} #required\r\n\t\tResourceType: ${9:String} #required\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n\t\tTrafficType: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html\r\n\nAttributes: \r\n  Id\r\n",
        "prefix": "ec2-flowlog",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::GatewayRouteTableAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::GatewayRouteTableAssociation\"\r\n\tProperties:\r\n\t\tGatewayId: ${2:String} #required\r\n\t\tRouteTableId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html\r\n\nAttributes: \r\n  AssociationId\r\n",
        "prefix": "ec2-gatewayroutetableassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::Host": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Host\"\r\n\tProperties:\r\n\t\tAutoPlacement: ${2:String}\r\n\t\tAvailabilityZone: ${3:String} #required\r\n\t\tHostRecovery: ${4:String}\r\n\t\tInstanceType: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html",
        "prefix": "ec2-host",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::Instance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Instance\"\r\n\tProperties:\r\n\t\tAdditionalInfo: ${2:String}\r\n\t\tAffinity: ${3:String}\r\n\t\tAvailabilityZone: ${4:String}\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- ${5:BlockDeviceMapping}\r\n\t\tCpuOptions:\r\n\t\t\t${6:CpuOptions}\r\n\t\tCreditSpecification:\r\n\t\t\t${7:CreditSpecification}\r\n\t\tDisableApiTermination: ${8:Boolean}\r\n\t\tEbsOptimized: ${9:Boolean}\r\n\t\tElasticGpuSpecifications:\r\n\t\t\t- ${10:ElasticGpuSpecification}\r\n\t\tElasticInferenceAccelerators:\r\n\t\t\t- ${11:ElasticInferenceAccelerator}\r\n\t\tHibernationOptions:\r\n\t\t\t${12:HibernationOptions}\r\n\t\tHostId: ${13:String}\r\n\t\tHostResourceGroupArn: ${14:String}\r\n\t\tIamInstanceProfile: ${15:String}\r\n\t\tImageId: ${16:String}\r\n\t\tInstanceInitiatedShutdownBehavior: ${17:String}\r\n\t\tInstanceType: ${18:String}\r\n\t\tIpv6AddressCount: ${19:Integer}\r\n\t\tIpv6Addresses:\r\n\t\t\t- ${20:InstanceIpv6Address}\r\n\t\tKernelId: ${21:String}\r\n\t\tKeyName: ${22:String}\r\n\t\tLaunchTemplate:\r\n\t\t\t${23:LaunchTemplateSpecification}\r\n\t\tLicenseSpecifications:\r\n\t\t\t- ${24:LicenseSpecification}\r\n\t\tMonitoring: ${25:Boolean}\r\n\t\tNetworkInterfaces:\r\n\t\t\t- ${26:NetworkInterface}\r\n\t\tPlacementGroupName: ${27:String}\r\n\t\tPrivateIpAddress: ${28:String}\r\n\t\tRamdiskId: ${29:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${30:String}\r\n\t\tSecurityGroups:\r\n\t\t\t- ${31:String}\r\n\t\tSourceDestCheck: ${32:Boolean}\r\n\t\tSsmAssociations:\r\n\t\t\t- ${33:SsmAssociation}\r\n\t\tSubnetId: ${34:String}\r\n\t\tTags:\r\n\t\t\t- ${35:Tag}\r\n\t\tTenancy: ${36:String}\r\n\t\tUserData: ${37:String}\r\n\t\tVolumes:\r\n\t\t\t- ${38:Volume}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\r\n\nAttributes: \r\n  AvailabilityZone\r\n  PrivateDnsName\r\n  PrivateIp\r\n  PublicDnsName\r\n  PublicIp\r\n",
        "prefix": "ec2-instance",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::InternetGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::InternetGateway\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- ${2:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html",
        "prefix": "ec2-internetgateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::LaunchTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LaunchTemplate\"\r\n\tProperties:\r\n\t\tLaunchTemplateData:\r\n\t\t\t${2:LaunchTemplateData}\r\n\t\tLaunchTemplateName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html\r\n\nAttributes: \r\n  LatestVersionNumber\r\n  DefaultVersionNumber\r\n",
        "prefix": "ec2-launchtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::LocalGatewayRoute": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LocalGatewayRoute\"\r\n\tProperties:\r\n\t\tDestinationCidrBlock: ${2:String} #required\r\n\t\tLocalGatewayRouteTableId: ${3:String} #required\r\n\t\tLocalGatewayVirtualInterfaceGroupId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html\r\n\nAttributes: \r\n  State\r\n  Type\r\n",
        "prefix": "ec2-localgatewayroute",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\"\r\n\tProperties:\r\n\t\tLocalGatewayRouteTableId: ${2:String} #required\r\n\t\tTags:\r\n\t\t\t${3:Tags}\r\n\t\tVpcId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html\r\n\nAttributes: \r\n  LocalGatewayId\r\n  LocalGatewayRouteTableVpcAssociationId\r\n  State\r\n",
        "prefix": "ec2-localgatewayroutetablevpcassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NatGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NatGateway\"\r\n\tProperties:\r\n\t\tAllocationId: ${2:String} #required\r\n\t\tSubnetId: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
        "prefix": "ec2-natgateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NetworkAcl": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkAcl\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- ${2:Tag}\r\n\t\tVpcId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html",
        "prefix": "ec2-networkacl",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NetworkAclEntry": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkAclEntry\"\r\n\tProperties:\r\n\t\tCidrBlock: ${2:String}\r\n\t\tEgress: ${3:Boolean}\r\n\t\tIcmp:\r\n\t\t\t${4:Icmp}\r\n\t\tIpv6CidrBlock: ${5:String}\r\n\t\tNetworkAclId: ${6:String} #required\r\n\t\tPortRange:\r\n\t\t\t${7:PortRange}\r\n\t\tProtocol: ${8:Integer} #required\r\n\t\tRuleAction: ${9:String} #required\r\n\t\tRuleNumber: ${10:Integer} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html",
        "prefix": "ec2-networkaclentry",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NetworkInterface": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterface\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGroupSet:\r\n\t\t\t- ${3:String}\r\n\t\tInterfaceType: ${4:String}\r\n\t\tIpv6AddressCount: ${5:Integer}\r\n\t\tIpv6Addresses:\r\n\t\t\t- ${6:InstanceIpv6Address}\r\n\t\tPrivateIpAddress: ${7:String}\r\n\t\tPrivateIpAddresses:\r\n\t\t\t- ${8:PrivateIpAddressSpecification}\r\n\t\tSecondaryPrivateIpAddressCount: ${9:Integer}\r\n\t\tSourceDestCheck: ${10:Boolean}\r\n\t\tSubnetId: ${11:String} #required\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html\r\n\nAttributes: \r\n  PrimaryPrivateIpAddress\r\n  SecondaryPrivateIpAddresses\r\n",
        "prefix": "ec2-networkinterface",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NetworkInterfaceAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterfaceAttachment\"\r\n\tProperties:\r\n\t\tDeleteOnTermination: ${2:Boolean}\r\n\t\tDeviceIndex: ${3:String} #required\r\n\t\tInstanceId: ${4:String} #required\r\n\t\tNetworkInterfaceId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html",
        "prefix": "ec2-networkinterfaceattachment",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::NetworkInterfacePermission": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterfacePermission\"\r\n\tProperties:\r\n\t\tAwsAccountId: ${2:String} #required\r\n\t\tNetworkInterfaceId: ${3:String} #required\r\n\t\tPermission: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html",
        "prefix": "ec2-networkinterfacepermission",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::PlacementGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::PlacementGroup\"\r\n\tProperties:\r\n\t\tStrategy: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html",
        "prefix": "ec2-placementgroup",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::PrefixList": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::PrefixList\"\r\n\tProperties:\r\n\t\tAddressFamily: ${2:String} #required\r\n\t\tEntries:\r\n\t\t\t- ${3:Entry}\r\n\t\tMaxEntries: ${4:Integer} #required\r\n\t\tPrefixListName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html\r\n\nAttributes: \r\n  PrefixListId\r\n  OwnerId\r\n  Version\r\n  Arn\r\n",
        "prefix": "ec2-prefixlist",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::Route": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Route\"\r\n\tProperties:\r\n\t\tCarrierGatewayId: ${2:String}\r\n\t\tDestinationCidrBlock: ${3:String}\r\n\t\tDestinationIpv6CidrBlock: ${4:String}\r\n\t\tEgressOnlyInternetGatewayId: ${5:String}\r\n\t\tGatewayId: ${6:String}\r\n\t\tInstanceId: ${7:String}\r\n\t\tLocalGatewayId: ${8:String}\r\n\t\tNatGatewayId: ${9:String}\r\n\t\tNetworkInterfaceId: ${10:String}\r\n\t\tRouteTableId: ${11:String} #required\r\n\t\tTransitGatewayId: ${12:String}\r\n\t\tVpcEndpointId: ${13:String}\r\n\t\tVpcPeeringConnectionId: ${14:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html",
        "prefix": "ec2-route",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::RouteTable": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::RouteTable\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- ${2:Tag}\r\n\t\tVpcId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html",
        "prefix": "ec2-routetable",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SecurityGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroup\"\r\n\tProperties:\r\n\t\tGroupDescription: ${2:String} #required\r\n\t\tGroupName: ${3:String}\r\n\t\tSecurityGroupEgress:\r\n\t\t\t- ${4:Egress}\r\n\t\tSecurityGroupIngress:\r\n\t\t\t- ${5:Ingress}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tVpcId: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\r\n\nAttributes: \r\n  GroupId\r\n  VpcId\r\n",
        "prefix": "ec2-securitygroup",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SecurityGroupEgress": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroupEgress\"\r\n\tProperties:\r\n\t\tCidrIp: ${2:String}\r\n\t\tCidrIpv6: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tDestinationPrefixListId: ${5:String}\r\n\t\tDestinationSecurityGroupId: ${6:String}\r\n\t\tFromPort: ${7:Integer}\r\n\t\tGroupId: ${8:String} #required\r\n\t\tIpProtocol: ${9:String} #required\r\n\t\tToPort: ${10:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html",
        "prefix": "ec2-securitygroupegress",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SecurityGroupIngress": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCidrIp: ${2:String}\r\n\t\tCidrIpv6: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tFromPort: ${5:Integer}\r\n\t\tGroupId: ${6:String}\r\n\t\tGroupName: ${7:String}\r\n\t\tIpProtocol: ${8:String} #required\r\n\t\tSourcePrefixListId: ${9:String}\r\n\t\tSourceSecurityGroupId: ${10:String}\r\n\t\tSourceSecurityGroupName: ${11:String}\r\n\t\tSourceSecurityGroupOwnerId: ${12:String}\r\n\t\tToPort: ${13:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html",
        "prefix": "ec2-securitygroupingress",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SpotFleet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SpotFleet\"\r\n\tProperties:\r\n\t\tSpotFleetRequestConfigData: #required\r\n\t\t\t${2:SpotFleetRequestConfigData}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html",
        "prefix": "ec2-spotfleet",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::Subnet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Subnet\"\r\n\tProperties:\r\n\t\tAssignIpv6AddressOnCreation: ${2:Boolean}\r\n\t\tAvailabilityZone: ${3:String}\r\n\t\tCidrBlock: ${4:String} #required\r\n\t\tIpv6CidrBlock: ${5:String}\r\n\t\tMapPublicIpOnLaunch: ${6:Boolean}\r\n\t\tOutpostArn: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n\t\tVpcId: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html\r\n\nAttributes: \r\n  AvailabilityZone\r\n  Ipv6CidrBlocks\r\n  NetworkAclAssociationId\r\n  OutpostArn\r\n  VpcId\r\n",
        "prefix": "ec2-subnet",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SubnetCidrBlock": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetCidrBlock\"\r\n\tProperties:\r\n\t\tIpv6CidrBlock: ${2:String} #required\r\n\t\tSubnetId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html",
        "prefix": "ec2-subnetcidrblock",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SubnetNetworkAclAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetNetworkAclAssociation\"\r\n\tProperties:\r\n\t\tNetworkAclId: ${2:String} #required\r\n\t\tSubnetId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html\r\n\nAttributes: \r\n  AssociationId\r\n",
        "prefix": "ec2-subnetnetworkaclassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::SubnetRouteTableAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetRouteTableAssociation\"\r\n\tProperties:\r\n\t\tRouteTableId: ${2:String} #required\r\n\t\tSubnetId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html",
        "prefix": "ec2-subnetroutetableassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TrafficMirrorFilter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorFilter\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tNetworkServices:\r\n\t\t\t- ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html",
        "prefix": "ec2-trafficmirrorfilter",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TrafficMirrorFilterRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorFilterRule\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDestinationCidrBlock: ${3:String} #required\r\n\t\tDestinationPortRange:\r\n\t\t\t${4:TrafficMirrorPortRange}\r\n\t\tProtocol: ${5:Integer}\r\n\t\tRuleAction: ${6:String} #required\r\n\t\tRuleNumber: ${7:Integer} #required\r\n\t\tSourceCidrBlock: ${8:String} #required\r\n\t\tSourcePortRange:\r\n\t\t\t${9:TrafficMirrorPortRange}\r\n\t\tTrafficDirection: ${10:String} #required\r\n\t\tTrafficMirrorFilterId: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html",
        "prefix": "ec2-trafficmirrorfilterrule",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TrafficMirrorSession": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorSession\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tNetworkInterfaceId: ${3:String} #required\r\n\t\tPacketLength: ${4:Integer}\r\n\t\tSessionNumber: ${5:Integer} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tTrafficMirrorFilterId: ${7:String} #required\r\n\t\tTrafficMirrorTargetId: ${8:String} #required\r\n\t\tVirtualNetworkId: ${9:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html",
        "prefix": "ec2-trafficmirrorsession",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TrafficMirrorTarget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorTarget\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tNetworkInterfaceId: ${3:String}\r\n\t\tNetworkLoadBalancerArn: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html",
        "prefix": "ec2-trafficmirrortarget",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGateway\"\r\n\tProperties:\r\n\t\tAmazonSideAsn: ${2:Integer}\r\n\t\tAutoAcceptSharedAttachments: ${3:String}\r\n\t\tDefaultRouteTableAssociation: ${4:String}\r\n\t\tDefaultRouteTablePropagation: ${5:String}\r\n\t\tDescription: ${6:String}\r\n\t\tDnsSupport: ${7:String}\r\n\t\tMulticastSupport: ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n\t\tVpnEcmpSupport: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
        "prefix": "ec2-transitgateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGatewayAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayAttachment\"\r\n\tProperties:\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${2:String}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n\t\tTransitGatewayId: ${4:String} #required\r\n\t\tVpcId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
        "prefix": "ec2-transitgatewayattachment",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGatewayRoute": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRoute\"\r\n\tProperties:\r\n\t\tBlackhole: ${2:Boolean}\r\n\t\tDestinationCidrBlock: ${3:String}\r\n\t\tTransitGatewayAttachmentId: ${4:String}\r\n\t\tTransitGatewayRouteTableId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html",
        "prefix": "ec2-transitgatewayroute",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGatewayRouteTable": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTable\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- ${2:Tag}\r\n\t\tTransitGatewayId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html",
        "prefix": "ec2-transitgatewayroutetable",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGatewayRouteTableAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTableAssociation\"\r\n\tProperties:\r\n\t\tTransitGatewayAttachmentId: ${2:String} #required\r\n\t\tTransitGatewayRouteTableId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html",
        "prefix": "ec2-transitgatewayroutetableassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::TransitGatewayRouteTablePropagation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTablePropagation\"\r\n\tProperties:\r\n\t\tTransitGatewayAttachmentId: ${2:String} #required\r\n\t\tTransitGatewayRouteTableId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html",
        "prefix": "ec2-transitgatewayroutetablepropagation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPC": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPC\"\r\n\tProperties:\r\n\t\tCidrBlock: ${2:String} #required\r\n\t\tEnableDnsHostnames: ${3:Boolean}\r\n\t\tEnableDnsSupport: ${4:Boolean}\r\n\t\tInstanceTenancy: ${5:String}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html\r\n\nAttributes: \r\n  CidrBlock\r\n  CidrBlockAssociations\r\n  DefaultNetworkAcl\r\n  DefaultSecurityGroup\r\n  Ipv6CidrBlocks\r\n",
        "prefix": "ec2-vpc",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCCidrBlock": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCCidrBlock\"\r\n\tProperties:\r\n\t\tAmazonProvidedIpv6CidrBlock: ${2:Boolean}\r\n\t\tCidrBlock: ${3:String}\r\n\t\tVpcId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html",
        "prefix": "ec2-vpccidrblock",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCDHCPOptionsAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCDHCPOptionsAssociation\"\r\n\tProperties:\r\n\t\tDhcpOptionsId: ${2:String} #required\r\n\t\tVpcId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html",
        "prefix": "ec2-vpcdhcpoptionsassociation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCEndpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpoint\"\r\n\tProperties:\r\n\t\tPolicyDocument: ${2:Json}\r\n\t\tPrivateDnsEnabled: ${3:Boolean}\r\n\t\tRouteTableIds:\r\n\t\t\t- ${4:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${5:String}\r\n\t\tServiceName: ${6:String} #required\r\n\t\tSubnetIds:\r\n\t\t\t- ${7:String}\r\n\t\tVpcEndpointType: ${8:String}\r\n\t\tVpcId: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html\r\n\nAttributes: \r\n  CreationTimestamp\r\n  DnsEntries\r\n  NetworkInterfaceIds\r\n",
        "prefix": "ec2-vpcendpoint",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCEndpointConnectionNotification": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointConnectionNotification\"\r\n\tProperties:\r\n\t\tConnectionEvents: #required\r\n\t\t\t- ${2:String}\r\n\t\tConnectionNotificationArn: ${3:String} #required\r\n\t\tServiceId: ${4:String}\r\n\t\tVPCEndpointId: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html",
        "prefix": "ec2-vpcendpointconnectionnotification",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCEndpointService": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointService\"\r\n\tProperties:\r\n\t\tAcceptanceRequired: ${2:Boolean}\r\n\t\tGatewayLoadBalancerArns:\r\n\t\t\t- ${3:String}\r\n\t\tNetworkLoadBalancerArns:\r\n\t\t\t- ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html",
        "prefix": "ec2-vpcendpointservice",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCEndpointServicePermissions": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointServicePermissions\"\r\n\tProperties:\r\n\t\tAllowedPrincipals:\r\n\t\t\t- ${2:String}\r\n\t\tServiceId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html",
        "prefix": "ec2-vpcendpointservicepermissions",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCGatewayAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCGatewayAttachment\"\r\n\tProperties:\r\n\t\tInternetGatewayId: ${2:String}\r\n\t\tVpcId: ${3:String} #required\r\n\t\tVpnGatewayId: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html",
        "prefix": "ec2-vpcgatewayattachment",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPCPeeringConnection": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCPeeringConnection\"\r\n\tProperties:\r\n\t\tPeerOwnerId: ${2:String}\r\n\t\tPeerRegion: ${3:String}\r\n\t\tPeerRoleArn: ${4:String}\r\n\t\tPeerVpcId: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tVpcId: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html",
        "prefix": "ec2-vpcpeeringconnection",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPNConnection": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNConnection\"\r\n\tProperties:\r\n\t\tCustomerGatewayId: ${2:String} #required\r\n\t\tStaticRoutesOnly: ${3:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n\t\tTransitGatewayId: ${5:String}\r\n\t\tType: ${6:String} #required\r\n\t\tVpnGatewayId: ${7:String}\r\n\t\tVpnTunnelOptionsSpecifications:\r\n\t\t\t- ${8:VpnTunnelOptionsSpecification}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
        "prefix": "ec2-vpnconnection",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPNConnectionRoute": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNConnectionRoute\"\r\n\tProperties:\r\n\t\tDestinationCidrBlock: ${2:String} #required\r\n\t\tVpnConnectionId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html",
        "prefix": "ec2-vpnconnectionroute",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPNGateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNGateway\"\r\n\tProperties:\r\n\t\tAmazonSideAsn: ${2:Long}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n\t\tType: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
        "prefix": "ec2-vpngateway",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VPNGatewayRoutePropagation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNGatewayRoutePropagation\"\r\n\tProperties:\r\n\t\tRouteTableIds: #required\r\n\t\t\t- ${2:String}\r\n\t\tVpnGatewayId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html",
        "prefix": "ec2-vpngatewayroutepropagation",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::Volume": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Volume\"\r\n\tProperties:\r\n\t\tAutoEnableIO: ${2:Boolean}\r\n\t\tAvailabilityZone: ${3:String} #required\r\n\t\tEncrypted: ${4:Boolean}\r\n\t\tIops: ${5:Integer}\r\n\t\tKmsKeyId: ${6:String}\r\n\t\tMultiAttachEnabled: ${7:Boolean}\r\n\t\tOutpostArn: ${8:String}\r\n\t\tSize: ${9:Integer}\r\n\t\tSnapshotId: ${10:String}\r\n\t\tTags:\r\n\t\t\t- ${11:Tag}\r\n\t\tVolumeType: ${12:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
        "prefix": "ec2-volume",
        "scope": "source.cloudformation"
    },
    "AWS::EC2::VolumeAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VolumeAttachment\"\r\n\tProperties:\r\n\t\tDevice: ${2:String} #required\r\n\t\tInstanceId: ${3:String} #required\r\n\t\tVolumeId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html",
        "prefix": "ec2-volumeattachment",
        "scope": "source.cloudformation"
    },
    "AWS::ECR::Repository": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECR::Repository\"\r\n\tProperties:\r\n\t\tImageScanningConfiguration: ${2:Json}\r\n\t\tImageTagMutability: ${3:String}\r\n\t\tLifecyclePolicy:\r\n\t\t\t${4:LifecyclePolicy}\r\n\t\tRepositoryName: ${5:String}\r\n\t\tRepositoryPolicyText: ${6:}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "ecr-repository",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::CapacityProvider": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::CapacityProvider\"\r\n\tProperties:\r\n\t\tAutoScalingGroupProvider: #required\r\n\t\t\t${2:AutoScalingGroupProvider}\r\n\t\tName: ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html",
        "prefix": "ecs-capacityprovider",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::Cluster\"\r\n\tProperties:\r\n\t\tCapacityProviders:\r\n\t\t\t- ${2:String}\r\n\t\tClusterName: ${3:String}\r\n\t\tClusterSettings:\r\n\t\t\t- ${4:ClusterSettings}\r\n\t\tDefaultCapacityProviderStrategy:\r\n\t\t\t- ${5:CapacityProviderStrategyItem}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "ecs-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::PrimaryTaskSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::PrimaryTaskSet\"\r\n\tProperties:\r\n\t\tCluster: ${2:String} #required\r\n\t\tService: ${3:String} #required\r\n\t\tTaskSetId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html",
        "prefix": "ecs-primarytaskset",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::Service": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::Service\"\r\n\tProperties:\r\n\t\tCapacityProviderStrategy:\r\n\t\t\t- ${2:CapacityProviderStrategyItem}\r\n\t\tCluster: ${3:String}\r\n\t\tDeploymentConfiguration:\r\n\t\t\t${4:DeploymentConfiguration}\r\n\t\tDeploymentController:\r\n\t\t\t${5:DeploymentController}\r\n\t\tDesiredCount: ${6:Integer}\r\n\t\tEnableECSManagedTags: ${7:Boolean}\r\n\t\tHealthCheckGracePeriodSeconds: ${8:Integer}\r\n\t\tLaunchType: ${9:String}\r\n\t\tLoadBalancers:\r\n\t\t\t- ${10:LoadBalancer}\r\n\t\tNetworkConfiguration:\r\n\t\t\t${11:NetworkConfiguration}\r\n\t\tPlacementConstraints:\r\n\t\t\t- ${12:PlacementConstraint}\r\n\t\tPlacementStrategies:\r\n\t\t\t- ${13:PlacementStrategy}\r\n\t\tPlatformVersion: ${14:String}\r\n\t\tPropagateTags: ${15:String}\r\n\t\tRole: ${16:String}\r\n\t\tSchedulingStrategy: ${17:String}\r\n\t\tServiceArn: ${18:String}\r\n\t\tServiceName: ${19:String}\r\n\t\tServiceRegistries:\r\n\t\t\t- ${20:ServiceRegistry}\r\n\t\tTags:\r\n\t\t\t- ${21:Tag}\r\n\t\tTaskDefinition: ${22:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html\r\n\nAttributes: \r\n  Name\r\n",
        "prefix": "ecs-service",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::TaskDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::TaskDefinition\"\r\n\tProperties:\r\n\t\tContainerDefinitions:\r\n\t\t\t- ${2:ContainerDefinition}\r\n\t\tCpu: ${3:String}\r\n\t\tExecutionRoleArn: ${4:String}\r\n\t\tFamily: ${5:String}\r\n\t\tInferenceAccelerators:\r\n\t\t\t- ${6:InferenceAccelerator}\r\n\t\tIpcMode: ${7:String}\r\n\t\tMemory: ${8:String}\r\n\t\tNetworkMode: ${9:String}\r\n\t\tPidMode: ${10:String}\r\n\t\tPlacementConstraints:\r\n\t\t\t- ${11:TaskDefinitionPlacementConstraint}\r\n\t\tProxyConfiguration:\r\n\t\t\t${12:ProxyConfiguration}\r\n\t\tRequiresCompatibilities:\r\n\t\t\t- ${13:String}\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n\t\tTaskRoleArn: ${15:String}\r\n\t\tVolumes:\r\n\t\t\t- ${16:Volume}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html\r\n\nAttributes: \r\n  TaskDefinitionArn\r\n",
        "prefix": "ecs-taskdefinition",
        "scope": "source.cloudformation"
    },
    "AWS::ECS::TaskSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::TaskSet\"\r\n\tProperties:\r\n\t\tCluster: ${2:String} #required\r\n\t\tExternalId: ${3:String}\r\n\t\tLaunchType: ${4:String}\r\n\t\tLoadBalancers:\r\n\t\t\t- ${5:LoadBalancer}\r\n\t\tNetworkConfiguration:\r\n\t\t\t${6:NetworkConfiguration}\r\n\t\tPlatformVersion: ${7:String}\r\n\t\tScale:\r\n\t\t\t${8:Scale}\r\n\t\tService: ${9:String} #required\r\n\t\tServiceRegistries:\r\n\t\t\t- ${10:ServiceRegistry}\r\n\t\tTaskDefinition: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html\r\n\nAttributes: \r\n  Id\r\n",
        "prefix": "ecs-taskset",
        "scope": "source.cloudformation"
    },
    "AWS::EFS::AccessPoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::AccessPoint\"\r\n\tProperties:\r\n\t\tAccessPointTags:\r\n\t\t\t- ${2:AccessPointTag}\r\n\t\tClientToken: ${3:String}\r\n\t\tFileSystemId: ${4:String} #required\r\n\t\tPosixUser:\r\n\t\t\t${5:PosixUser}\r\n\t\tRootDirectory:\r\n\t\t\t${6:RootDirectory}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html\r\n\nAttributes: \r\n  AccessPointId\r\n  Arn\r\n",
        "prefix": "efs-accesspoint",
        "scope": "source.cloudformation"
    },
    "AWS::EFS::FileSystem": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::FileSystem\"\r\n\tProperties:\r\n\t\tBackupPolicy:\r\n\t\t\t${2:BackupPolicy}\r\n\t\tEncrypted: ${3:Boolean}\r\n\t\tFileSystemPolicy: ${4:Json}\r\n\t\tFileSystemTags:\r\n\t\t\t- ${5:ElasticFileSystemTag}\r\n\t\tKmsKeyId: ${6:String}\r\n\t\tLifecyclePolicies:\r\n\t\t\t- ${7:LifecyclePolicy}\r\n\t\tPerformanceMode: ${8:String}\r\n\t\tProvisionedThroughputInMibps: ${9:Double}\r\n\t\tThroughputMode: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html\r\n\nAttributes: \r\n  FileSystemId\r\n  Arn\r\n",
        "prefix": "efs-filesystem",
        "scope": "source.cloudformation"
    },
    "AWS::EFS::MountTarget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::MountTarget\"\r\n\tProperties:\r\n\t\tFileSystemId: ${2:String} #required\r\n\t\tIpAddress: ${3:String}\r\n\t\tSecurityGroups: #required\r\n\t\t\t- ${4:String}\r\n\t\tSubnetId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html\r\n\nAttributes: \r\n  IpAddress\r\n",
        "prefix": "efs-mounttarget",
        "scope": "source.cloudformation"
    },
    "AWS::EKS::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::Cluster\"\r\n\tProperties:\r\n\t\tEncryptionConfig:\r\n\t\t\t- ${2:EncryptionConfig}\r\n\t\tKubernetesNetworkConfig:\r\n\t\t\t${3:KubernetesNetworkConfig}\r\n\t\tName: ${4:String}\r\n\t\tResourcesVpcConfig: #required\r\n\t\t\t${5:ResourcesVpcConfig}\r\n\t\tRoleArn: ${6:String} #required\r\n\t\tVersion: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html\r\n\nAttributes: \r\n  Endpoint\r\n  ClusterSecurityGroupId\r\n  EncryptionConfigKeyArn\r\n  Arn\r\n  CertificateAuthorityData\r\n",
        "prefix": "eks-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::EKS::FargateProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::FargateProfile\"\r\n\tProperties:\r\n\t\tClusterName: ${2:String} #required\r\n\t\tFargateProfileName: ${3:String}\r\n\t\tPodExecutionRoleArn: ${4:String} #required\r\n\t\tSelectors: #required\r\n\t\t\t- ${5:Selector}\r\n\t\tSubnets:\r\n\t\t\t- ${6:String}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "eks-fargateprofile",
        "scope": "source.cloudformation"
    },
    "AWS::EKS::Nodegroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::Nodegroup\"\r\n\tProperties:\r\n\t\tAmiType: ${2:String}\r\n\t\tClusterName: ${3:String} #required\r\n\t\tDiskSize: ${4:Double}\r\n\t\tForceUpdateEnabled: ${5:Boolean}\r\n\t\tInstanceTypes:\r\n\t\t\t- ${6:String}\r\n\t\tLabels: ${7:Json}\r\n\t\tLaunchTemplate:\r\n\t\t\t${8:LaunchTemplateSpecification}\r\n\t\tNodeRole: ${9:String} #required\r\n\t\tNodegroupName: ${10:String}\r\n\t\tReleaseVersion: ${11:String}\r\n\t\tRemoteAccess:\r\n\t\t\t${12:RemoteAccess}\r\n\t\tScalingConfig:\r\n\t\t\t${13:ScalingConfig}\r\n\t\tSubnets: #required\r\n\t\t\t- ${14:String}\r\n\t\tTags: ${15:Json}\r\n\t\tVersion: ${16:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html\r\n\nAttributes: \r\n  NodegroupName\r\n  ClusterName\r\n  Arn\r\n",
        "prefix": "eks-nodegroup",
        "scope": "source.cloudformation"
    },
    "AWS::EMR::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::Cluster\"\r\n\tProperties:\r\n\t\tAdditionalInfo: ${2:Json}\r\n\t\tApplications:\r\n\t\t\t- ${3:Application}\r\n\t\tAutoScalingRole: ${4:String}\r\n\t\tBootstrapActions:\r\n\t\t\t- ${5:BootstrapActionConfig}\r\n\t\tConfigurations:\r\n\t\t\t- ${6:Configuration}\r\n\t\tCustomAmiId: ${7:String}\r\n\t\tEbsRootVolumeSize: ${8:Integer}\r\n\t\tInstances: #required\r\n\t\t\t${9:JobFlowInstancesConfig}\r\n\t\tJobFlowRole: ${10:String} #required\r\n\t\tKerberosAttributes:\r\n\t\t\t${11:KerberosAttributes}\r\n\t\tLogEncryptionKmsKeyId: ${12:String}\r\n\t\tLogUri: ${13:String}\r\n\t\tManagedScalingPolicy:\r\n\t\t\t${14:ManagedScalingPolicy}\r\n\t\tName: ${15:String} #required\r\n\t\tReleaseLabel: ${16:String}\r\n\t\tScaleDownBehavior: ${17:String}\r\n\t\tSecurityConfiguration: ${18:String}\r\n\t\tServiceRole: ${19:String} #required\r\n\t\tStepConcurrencyLevel: ${20:Integer}\r\n\t\tSteps:\r\n\t\t\t- ${21:StepConfig}\r\n\t\tTags:\r\n\t\t\t- ${22:Tag}\r\n\t\tVisibleToAllUsers: ${23:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html\r\n\nAttributes: \r\n  MasterPublicDNS\r\n",
        "prefix": "emr-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::EMR::InstanceFleetConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::InstanceFleetConfig\"\r\n\tProperties:\r\n\t\tClusterId: ${2:String} #required\r\n\t\tInstanceFleetType: ${3:String} #required\r\n\t\tInstanceTypeConfigs:\r\n\t\t\t- ${4:InstanceTypeConfig}\r\n\t\tLaunchSpecifications:\r\n\t\t\t${5:InstanceFleetProvisioningSpecifications}\r\n\t\tName: ${6:String}\r\n\t\tTargetOnDemandCapacity: ${7:Integer}\r\n\t\tTargetSpotCapacity: ${8:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html",
        "prefix": "emr-instancefleetconfig",
        "scope": "source.cloudformation"
    },
    "AWS::EMR::InstanceGroupConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::InstanceGroupConfig\"\r\n\tProperties:\r\n\t\tAutoScalingPolicy:\r\n\t\t\t${2:AutoScalingPolicy}\r\n\t\tBidPrice: ${3:String}\r\n\t\tConfigurations:\r\n\t\t\t- ${4:Configuration}\r\n\t\tEbsConfiguration:\r\n\t\t\t${5:EbsConfiguration}\r\n\t\tInstanceCount: ${6:Integer} #required\r\n\t\tInstanceRole: ${7:String} #required\r\n\t\tInstanceType: ${8:String} #required\r\n\t\tJobFlowId: ${9:String} #required\r\n\t\tMarket: ${10:String}\r\n\t\tName: ${11:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html",
        "prefix": "emr-instancegroupconfig",
        "scope": "source.cloudformation"
    },
    "AWS::EMR::SecurityConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::SecurityConfiguration\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tSecurityConfiguration: ${3:Json} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html",
        "prefix": "emr-securityconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::EMR::Step": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::Step\"\r\n\tProperties:\r\n\t\tActionOnFailure: ${2:String} #required\r\n\t\tHadoopJarStep: #required\r\n\t\t\t${3:HadoopJarStepConfig}\r\n\t\tJobFlowId: ${4:String} #required\r\n\t\tName: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html",
        "prefix": "emr-step",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::CacheCluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::CacheCluster\"\r\n\tProperties:\r\n\t\tAZMode: ${2:String}\r\n\t\tAutoMinorVersionUpgrade: ${3:Boolean}\r\n\t\tCacheNodeType: ${4:String} #required\r\n\t\tCacheParameterGroupName: ${5:String}\r\n\t\tCacheSecurityGroupNames:\r\n\t\t\t- ${6:String}\r\n\t\tCacheSubnetGroupName: ${7:String}\r\n\t\tClusterName: ${8:String}\r\n\t\tEngine: ${9:String} #required\r\n\t\tEngineVersion: ${10:String}\r\n\t\tNotificationTopicArn: ${11:String}\r\n\t\tNumCacheNodes: ${12:Integer} #required\r\n\t\tPort: ${13:Integer}\r\n\t\tPreferredAvailabilityZone: ${14:String}\r\n\t\tPreferredAvailabilityZones:\r\n\t\t\t- ${15:String}\r\n\t\tPreferredMaintenanceWindow: ${16:String}\r\n\t\tSnapshotArns:\r\n\t\t\t- ${17:String}\r\n\t\tSnapshotName: ${18:String}\r\n\t\tSnapshotRetentionLimit: ${19:Integer}\r\n\t\tSnapshotWindow: ${20:String}\r\n\t\tTags:\r\n\t\t\t- ${21:Tag}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${22:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html\r\n\nAttributes: \r\n  ConfigurationEndpoint.Address\r\n  ConfigurationEndpoint.Port\r\n  RedisEndpoint.Address\r\n  RedisEndpoint.Port\r\n",
        "prefix": "elasticache-cachecluster",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::ParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::ParameterGroup\"\r\n\tProperties:\r\n\t\tCacheParameterGroupFamily: ${2:String} #required\r\n\t\tDescription: ${3:String} #required\r\n\t\tProperties:\r\n\t\t\t${4:Map}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html",
        "prefix": "elasticache-parametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::ReplicationGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::ReplicationGroup\"\r\n\tProperties:\r\n\t\tAtRestEncryptionEnabled: ${2:Boolean}\r\n\t\tAuthToken: ${3:String}\r\n\t\tAutoMinorVersionUpgrade: ${4:Boolean}\r\n\t\tAutomaticFailoverEnabled: ${5:Boolean}\r\n\t\tCacheNodeType: ${6:String}\r\n\t\tCacheParameterGroupName: ${7:String}\r\n\t\tCacheSecurityGroupNames:\r\n\t\t\t- ${8:String}\r\n\t\tCacheSubnetGroupName: ${9:String}\r\n\t\tEngine: ${10:String}\r\n\t\tEngineVersion: ${11:String}\r\n\t\tGlobalReplicationGroupId: ${12:String}\r\n\t\tKmsKeyId: ${13:String}\r\n\t\tMultiAZEnabled: ${14:Boolean}\r\n\t\tNodeGroupConfiguration:\r\n\t\t\t- ${15:NodeGroupConfiguration}\r\n\t\tNotificationTopicArn: ${16:String}\r\n\t\tNumCacheClusters: ${17:Integer}\r\n\t\tNumNodeGroups: ${18:Integer}\r\n\t\tPort: ${19:Integer}\r\n\t\tPreferredCacheClusterAZs:\r\n\t\t\t- ${20:String}\r\n\t\tPreferredMaintenanceWindow: ${21:String}\r\n\t\tPrimaryClusterId: ${22:String}\r\n\t\tReplicasPerNodeGroup: ${23:Integer}\r\n\t\tReplicationGroupDescription: ${24:String} #required\r\n\t\tReplicationGroupId: ${25:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${26:String}\r\n\t\tSnapshotArns:\r\n\t\t\t- ${27:String}\r\n\t\tSnapshotName: ${28:String}\r\n\t\tSnapshotRetentionLimit: ${29:Integer}\r\n\t\tSnapshotWindow: ${30:String}\r\n\t\tSnapshottingClusterId: ${31:String}\r\n\t\tTags:\r\n\t\t\t- ${32:Tag}\r\n\t\tTransitEncryptionEnabled: ${33:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html\r\n\nAttributes: \r\n  ConfigurationEndPoint.Address\r\n  ConfigurationEndPoint.Port\r\n  PrimaryEndPoint.Address\r\n  PrimaryEndPoint.Port\r\n  ReadEndPoint.Addresses\r\n  ReadEndPoint.Addresses.List\r\n  ReadEndPoint.Ports\r\n  ReadEndPoint.Ports.List\r\n  ReaderEndPoint.Address\r\n  ReaderEndPoint.Port\r\n",
        "prefix": "elasticache-replicationgroup",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::SecurityGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SecurityGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html",
        "prefix": "elasticache-securitygroup",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::SecurityGroupIngress": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCacheSecurityGroupName: ${2:String} #required\r\n\t\tEC2SecurityGroupName: ${3:String} #required\r\n\t\tEC2SecurityGroupOwnerId: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html",
        "prefix": "elasticache-securitygroupingress",
        "scope": "source.cloudformation"
    },
    "AWS::ElastiCache::SubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SubnetGroup\"\r\n\tProperties:\r\n\t\tCacheSubnetGroupName: ${2:String}\r\n\t\tDescription: ${3:String} #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html",
        "prefix": "elasticache-subnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticBeanstalk::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::Application\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tResourceLifecycleConfig:\r\n\t\t\t${4:ApplicationResourceLifecycleConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk.html",
        "prefix": "elasticbeanstalk-application",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticBeanstalk::ApplicationVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::ApplicationVersion\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tSourceBundle: #required\r\n\t\t\t${4:SourceBundle}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-version.html",
        "prefix": "elasticbeanstalk-applicationversion",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::ConfigurationTemplate\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tEnvironmentId: ${4:String}\r\n\t\tOptionSettings:\r\n\t\t\t- ${5:ConfigurationOptionSetting}\r\n\t\tPlatformArn: ${6:String}\r\n\t\tSolutionStackName: ${7:String}\r\n\t\tSourceConfiguration:\r\n\t\t\t${8:SourceConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html",
        "prefix": "elasticbeanstalk-configurationtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticBeanstalk::Environment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::Environment\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tCNAMEPrefix: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tEnvironmentName: ${5:String}\r\n\t\tOptionSettings:\r\n\t\t\t- ${6:OptionSetting}\r\n\t\tPlatformArn: ${7:String}\r\n\t\tSolutionStackName: ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n\t\tTemplateName: ${10:String}\r\n\t\tTier:\r\n\t\t\t${11:Tier}\r\n\t\tVersionLabel: ${12:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html\r\n\nAttributes: \r\n  EndpointURL\r\n",
        "prefix": "elasticbeanstalk-environment",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancing::LoadBalancer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancing::LoadBalancer\"\r\n\tProperties:\r\n\t\tAccessLoggingPolicy:\r\n\t\t\t${2:AccessLoggingPolicy}\r\n\t\tAppCookieStickinessPolicy:\r\n\t\t\t- ${3:AppCookieStickinessPolicy}\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${4:String}\r\n\t\tConnectionDrainingPolicy:\r\n\t\t\t${5:ConnectionDrainingPolicy}\r\n\t\tConnectionSettings:\r\n\t\t\t${6:ConnectionSettings}\r\n\t\tCrossZone: ${7:Boolean}\r\n\t\tHealthCheck:\r\n\t\t\t${8:HealthCheck}\r\n\t\tInstances:\r\n\t\t\t- ${9:String}\r\n\t\tLBCookieStickinessPolicy:\r\n\t\t\t- ${10:LBCookieStickinessPolicy}\r\n\t\tListeners: #required\r\n\t\t\t- ${11:Listeners}\r\n\t\tLoadBalancerName: ${12:String}\r\n\t\tPolicies:\r\n\t\t\t- ${13:Policies}\r\n\t\tScheme: ${14:String}\r\n\t\tSecurityGroups:\r\n\t\t\t- ${15:String}\r\n\t\tSubnets:\r\n\t\t\t- ${16:String}\r\n\t\tTags:\r\n\t\t\t- ${17:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html\r\n\nAttributes: \r\n  CanonicalHostedZoneName\r\n  CanonicalHostedZoneNameID\r\n  DNSName\r\n  SourceSecurityGroup.GroupName\r\n  SourceSecurityGroup.OwnerAlias\r\n",
        "prefix": "elasticloadbalancing-loadbalancer",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancingV2::Listener": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::Listener\"\r\n\tProperties:\r\n\t\tAlpnPolicy:\r\n\t\t\t- ${2:String}\r\n\t\tCertificates:\r\n\t\t\t- ${3:Certificate}\r\n\t\tDefaultActions: #required\r\n\t\t\t- ${4:Action}\r\n\t\tLoadBalancerArn: ${5:String} #required\r\n\t\tPort: ${6:Integer}\r\n\t\tProtocol: ${7:String}\r\n\t\tSslPolicy: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html\r\n\nAttributes: \r\n  ListenerArn\r\n",
        "prefix": "elasticloadbalancingv2-listener",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::ListenerCertificate\"\r\n\tProperties:\r\n\t\tCertificates: #required\r\n\t\t\t- ${2:Certificate}\r\n\t\tListenerArn: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html",
        "prefix": "elasticloadbalancingv2-listenercertificate",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::ListenerRule\"\r\n\tProperties:\r\n\t\tActions: #required\r\n\t\t\t- ${2:Action}\r\n\t\tConditions: #required\r\n\t\t\t- ${3:RuleCondition}\r\n\t\tListenerArn: ${4:String} #required\r\n\t\tPriority: ${5:Integer} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html",
        "prefix": "elasticloadbalancingv2-listenerrule",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::LoadBalancer\"\r\n\tProperties:\r\n\t\tIpAddressType: ${2:String}\r\n\t\tLoadBalancerAttributes:\r\n\t\t\t- ${3:LoadBalancerAttribute}\r\n\t\tName: ${4:String}\r\n\t\tScheme: ${5:String}\r\n\t\tSecurityGroups:\r\n\t\t\t- ${6:String}\r\n\t\tSubnetMappings:\r\n\t\t\t- ${7:SubnetMapping}\r\n\t\tSubnets:\r\n\t\t\t- ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n\t\tType: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html\r\n\nAttributes: \r\n  CanonicalHostedZoneID\r\n  DNSName\r\n  LoadBalancerFullName\r\n  LoadBalancerName\r\n  SecurityGroups\r\n",
        "prefix": "elasticloadbalancingv2-loadbalancer",
        "scope": "source.cloudformation"
    },
    "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::TargetGroup\"\r\n\tProperties:\r\n\t\tHealthCheckEnabled: ${2:Boolean}\r\n\t\tHealthCheckIntervalSeconds: ${3:Integer}\r\n\t\tHealthCheckPath: ${4:String}\r\n\t\tHealthCheckPort: ${5:String}\r\n\t\tHealthCheckProtocol: ${6:String}\r\n\t\tHealthCheckTimeoutSeconds: ${7:Integer}\r\n\t\tHealthyThresholdCount: ${8:Integer}\r\n\t\tMatcher:\r\n\t\t\t${9:Matcher}\r\n\t\tName: ${10:String}\r\n\t\tPort: ${11:Integer}\r\n\t\tProtocol: ${12:String}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tTargetGroupAttributes:\r\n\t\t\t- ${14:TargetGroupAttribute}\r\n\t\tTargetType: ${15:String}\r\n\t\tTargets:\r\n\t\t\t- ${16:TargetDescription}\r\n\t\tUnhealthyThresholdCount: ${17:Integer}\r\n\t\tVpcId: ${18:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html\r\n\nAttributes: \r\n  LoadBalancerArns\r\n  TargetGroupFullName\r\n  TargetGroupName\r\n",
        "prefix": "elasticloadbalancingv2-targetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::Elasticsearch::Domain": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Elasticsearch::Domain\"\r\n\tProperties:\r\n\t\tAccessPolicies: ${2:Json}\r\n\t\tAdvancedOptions:\r\n\t\t\t${3:Map}\r\n\t\tAdvancedSecurityOptions:\r\n\t\t\t${4:AdvancedSecurityOptionsInput}\r\n\t\tCognitoOptions:\r\n\t\t\t${5:CognitoOptions}\r\n\t\tDomainEndpointOptions:\r\n\t\t\t${6:DomainEndpointOptions}\r\n\t\tDomainName: ${7:String}\r\n\t\tEBSOptions:\r\n\t\t\t${8:EBSOptions}\r\n\t\tElasticsearchClusterConfig:\r\n\t\t\t${9:ElasticsearchClusterConfig}\r\n\t\tElasticsearchVersion: ${10:String}\r\n\t\tEncryptionAtRestOptions:\r\n\t\t\t${11:EncryptionAtRestOptions}\r\n\t\tLogPublishingOptions:\r\n\t\t\t${12:Map}\r\n\t\tNodeToNodeEncryptionOptions:\r\n\t\t\t${13:NodeToNodeEncryptionOptions}\r\n\t\tSnapshotOptions:\r\n\t\t\t${14:SnapshotOptions}\r\n\t\tTags:\r\n\t\t\t- ${15:Tag}\r\n\t\tVPCOptions:\r\n\t\t\t${16:VPCOptions}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html\r\n\nAttributes: \r\n  Arn\r\n  DomainArn\r\n  DomainEndpoint\r\n",
        "prefix": "elasticsearch-domain",
        "scope": "source.cloudformation"
    },
    "AWS::EventSchemas::Discoverer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Discoverer\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tSourceArn: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:TagsEntry}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html\r\n\nAttributes: \r\n  DiscovererArn\r\n  DiscovererId\r\n",
        "prefix": "eventschemas-discoverer",
        "scope": "source.cloudformation"
    },
    "AWS::EventSchemas::Registry": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Registry\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tRegistryName: ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:TagsEntry}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html\r\n\nAttributes: \r\n  RegistryName\r\n  RegistryArn\r\n",
        "prefix": "eventschemas-registry",
        "scope": "source.cloudformation"
    },
    "AWS::EventSchemas::RegistryPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::RegistryPolicy\"\r\n\tProperties:\r\n\t\tPolicy: ${2:Json} #required\r\n\t\tRegistryName: ${3:String} #required\r\n\t\tRevisionId: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html\r\n\nAttributes: \r\n  Id\r\n",
        "prefix": "eventschemas-registrypolicy",
        "scope": "source.cloudformation"
    },
    "AWS::EventSchemas::Schema": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Schema\"\r\n\tProperties:\r\n\t\tContent: ${2:String} #required\r\n\t\tDescription: ${3:String}\r\n\t\tRegistryName: ${4:String} #required\r\n\t\tSchemaName: ${5:String}\r\n\t\tTags:\r\n\t\t\t- ${6:TagsEntry}\r\n\t\tType: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html\r\n\nAttributes: \r\n  SchemaVersion\r\n  SchemaArn\r\n  SchemaName\r\n",
        "prefix": "eventschemas-schema",
        "scope": "source.cloudformation"
    },
    "AWS::Events::Archive": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::Archive\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tEventPattern: ${3:Json}\r\n\t\tRetentionDays: ${4:Integer}\r\n\t\tSourceArn: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html\r\n\nAttributes: \r\n  ArchiveName\r\n  Arn\r\n",
        "prefix": "events-archive",
        "scope": "source.cloudformation"
    },
    "AWS::Events::EventBus": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::EventBus\"\r\n\tProperties:\r\n\t\tEventSourceName: ${2:String}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html\r\n\nAttributes: \r\n  Policy\r\n  Arn\r\n  Name\r\n",
        "prefix": "events-eventbus",
        "scope": "source.cloudformation"
    },
    "AWS::Events::EventBusPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::EventBusPolicy\"\r\n\tProperties:\r\n\t\tAction: ${2:String}\r\n\t\tCondition:\r\n\t\t\t${3:Condition}\r\n\t\tEventBusName: ${4:String}\r\n\t\tPrincipal: ${5:String}\r\n\t\tStatement: ${6:Json}\r\n\t\tStatementId: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html",
        "prefix": "events-eventbuspolicy",
        "scope": "source.cloudformation"
    },
    "AWS::Events::Rule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::Rule\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tEventBusName: ${3:String}\r\n\t\tEventPattern: ${4:Json}\r\n\t\tName: ${5:String}\r\n\t\tRoleArn: ${6:String}\r\n\t\tScheduleExpression: ${7:String}\r\n\t\tState: ${8:String}\r\n\t\tTargets:\r\n\t\t\t- ${9:Target}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "events-rule",
        "scope": "source.cloudformation"
    },
    "AWS::FMS::NotificationChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FMS::NotificationChannel\"\r\n\tProperties:\r\n\t\tSnsRoleName: ${2:String} #required\r\n\t\tSnsTopicArn: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html",
        "prefix": "fms-notificationchannel",
        "scope": "source.cloudformation"
    },
    "AWS::FMS::Policy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FMS::Policy\"\r\n\tProperties:\r\n\t\tDeleteAllPolicyResources: ${2:Boolean}\r\n\t\tExcludeMap:\r\n\t\t\t${3:IEMap}\r\n\t\tExcludeResourceTags: ${4:Boolean} #required\r\n\t\tIncludeMap:\r\n\t\t\t${5:IEMap}\r\n\t\tPolicyName: ${6:String} #required\r\n\t\tRemediationEnabled: ${7:Boolean} #required\r\n\t\tResourceTags:\r\n\t\t\t- ${8:ResourceTag}\r\n\t\tResourceType: ${9:String} #required\r\n\t\tResourceTypeList:\r\n\t\t\t- ${10:String}\r\n\t\tSecurityServicePolicyData: ${11:Json} #required\r\n\t\tTags:\r\n\t\t\t- ${12:PolicyTag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "fms-policy",
        "scope": "source.cloudformation"
    },
    "AWS::FSx::FileSystem": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FSx::FileSystem\"\r\n\tProperties:\r\n\t\tBackupId: ${2:String}\r\n\t\tFileSystemType: ${3:String} #required\r\n\t\tKmsKeyId: ${4:String}\r\n\t\tLustreConfiguration:\r\n\t\t\t${5:LustreConfiguration}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${6:String}\r\n\t\tStorageCapacity: ${7:Integer}\r\n\t\tStorageType: ${8:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${9:String}\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n\t\tWindowsConfiguration:\r\n\t\t\t${11:WindowsConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html\r\n\nAttributes: \r\n  LustreMountName\r\n",
        "prefix": "fsx-filesystem",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::Alias": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Alias\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tRoutingStrategy: #required\r\n\t\t\t${4:RoutingStrategy}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html\r\n\nAttributes: \r\n  AliasId\r\n",
        "prefix": "gamelift-alias",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::Build": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Build\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tOperatingSystem: ${3:String}\r\n\t\tStorageLocation:\r\n\t\t\t${4:S3Location}\r\n\t\tVersion: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html",
        "prefix": "gamelift-build",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::Fleet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Fleet\"\r\n\tProperties:\r\n\t\tBuildId: ${2:String}\r\n\t\tCertificateConfiguration:\r\n\t\t\t${3:CertificateConfiguration}\r\n\t\tDescription: ${4:String}\r\n\t\tDesiredEC2Instances: ${5:Integer}\r\n\t\tEC2InboundPermissions:\r\n\t\t\t- ${6:IpPermission}\r\n\t\tEC2InstanceType: ${7:String} #required\r\n\t\tFleetType: ${8:String}\r\n\t\tInstanceRoleARN: ${9:String}\r\n\t\tLogPaths:\r\n\t\t\t- ${10:String}\r\n\t\tMaxSize: ${11:Integer}\r\n\t\tMetricGroups:\r\n\t\t\t- ${12:String}\r\n\t\tMinSize: ${13:Integer}\r\n\t\tName: ${14:String} #required\r\n\t\tNewGameSessionProtectionPolicy: ${15:String}\r\n\t\tPeerVpcAwsAccountId: ${16:String}\r\n\t\tPeerVpcId: ${17:String}\r\n\t\tResourceCreationLimitPolicy:\r\n\t\t\t${18:ResourceCreationLimitPolicy}\r\n\t\tRuntimeConfiguration:\r\n\t\t\t${19:RuntimeConfiguration}\r\n\t\tScriptId: ${20:String}\r\n\t\tServerLaunchParameters: ${21:String}\r\n\t\tServerLaunchPath: ${22:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html",
        "prefix": "gamelift-fleet",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::GameServerGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::GameServerGroup\"\r\n\tProperties:\r\n\t\tAutoScalingPolicy:\r\n\t\t\t${2:AutoScalingPolicy}\r\n\t\tBalancingStrategy: ${3:String}\r\n\t\tDeleteOption: ${4:String}\r\n\t\tGameServerGroupName: ${5:String} #required\r\n\t\tGameServerProtectionPolicy: ${6:String}\r\n\t\tInstanceDefinitions: #required\r\n\t\t\t${7:InstanceDefinitions}\r\n\t\tLaunchTemplate: #required\r\n\t\t\t${8:LaunchTemplate}\r\n\t\tMaxSize: ${9:Double}\r\n\t\tMinSize: ${10:Double}\r\n\t\tRoleArn: ${11:String} #required\r\n\t\tTags:\r\n\t\t\t${12:Tags}\r\n\t\tVpcSubnets:\r\n\t\t\t${13:VpcSubnets}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html\r\n\nAttributes: \r\n  AutoScalingGroupArn\r\n  GameServerGroupArn\r\n",
        "prefix": "gamelift-gameservergroup",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::GameSessionQueue": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::GameSessionQueue\"\r\n\tProperties:\r\n\t\tDestinations:\r\n\t\t\t- ${2:Destination}\r\n\t\tName: ${3:String} #required\r\n\t\tPlayerLatencyPolicies:\r\n\t\t\t- ${4:PlayerLatencyPolicy}\r\n\t\tTimeoutInSeconds: ${5:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "gamelift-gamesessionqueue",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::MatchmakingConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::MatchmakingConfiguration\"\r\n\tProperties:\r\n\t\tAcceptanceRequired: ${2:Boolean} #required\r\n\t\tAcceptanceTimeoutSeconds: ${3:Integer}\r\n\t\tAdditionalPlayerCount: ${4:Integer}\r\n\t\tBackfillMode: ${5:String}\r\n\t\tCustomEventData: ${6:String}\r\n\t\tDescription: ${7:String}\r\n\t\tFlexMatchMode: ${8:String}\r\n\t\tGameProperties:\r\n\t\t\t- ${9:GameProperty}\r\n\t\tGameSessionData: ${10:String}\r\n\t\tGameSessionQueueArns:\r\n\t\t\t- ${11:String}\r\n\t\tName: ${12:String} #required\r\n\t\tNotificationTarget: ${13:String}\r\n\t\tRequestTimeoutSeconds: ${14:Integer} #required\r\n\t\tRuleSetName: ${15:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "gamelift-matchmakingconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::MatchmakingRuleSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::MatchmakingRuleSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tRuleSetBody: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "gamelift-matchmakingruleset",
        "scope": "source.cloudformation"
    },
    "AWS::GameLift::Script": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Script\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tStorageLocation: #required\r\n\t\t\t${3:S3Location}\r\n\t\tVersion: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "gamelift-script",
        "scope": "source.cloudformation"
    },
    "AWS::GlobalAccelerator::Accelerator": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::Accelerator\"\r\n\tProperties:\r\n\t\tEnabled: ${2:Boolean}\r\n\t\tIpAddressType: ${3:String}\r\n\t\tIpAddresses:\r\n\t\t\t- ${4:String}\r\n\t\tName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html\r\n\nAttributes: \r\n  DnsName\r\n  AcceleratorArn\r\n",
        "prefix": "globalaccelerator-accelerator",
        "scope": "source.cloudformation"
    },
    "AWS::GlobalAccelerator::EndpointGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::EndpointGroup\"\r\n\tProperties:\r\n\t\tEndpointConfigurations:\r\n\t\t\t- ${2:EndpointConfiguration}\r\n\t\tEndpointGroupRegion: ${3:String} #required\r\n\t\tHealthCheckIntervalSeconds: ${4:Integer}\r\n\t\tHealthCheckPath: ${5:String}\r\n\t\tHealthCheckPort: ${6:Integer}\r\n\t\tHealthCheckProtocol: ${7:String}\r\n\t\tListenerArn: ${8:String} #required\r\n\t\tPortOverrides:\r\n\t\t\t- ${9:PortOverride}\r\n\t\tThresholdCount: ${10:Integer}\r\n\t\tTrafficDialPercentage: ${11:Double}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html\r\n\nAttributes: \r\n  EndpointGroupArn\r\n",
        "prefix": "globalaccelerator-endpointgroup",
        "scope": "source.cloudformation"
    },
    "AWS::GlobalAccelerator::Listener": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::Listener\"\r\n\tProperties:\r\n\t\tAcceleratorArn: ${2:String} #required\r\n\t\tClientAffinity: ${3:String}\r\n\t\tPortRanges: #required\r\n\t\t\t- ${4:PortRange}\r\n\t\tProtocol: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html\r\n\nAttributes: \r\n  ListenerArn\r\n",
        "prefix": "globalaccelerator-listener",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Classifier": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Classifier\"\r\n\tProperties:\r\n\t\tCsvClassifier:\r\n\t\t\t${2:CsvClassifier}\r\n\t\tGrokClassifier:\r\n\t\t\t${3:GrokClassifier}\r\n\t\tJsonClassifier:\r\n\t\t\t${4:JsonClassifier}\r\n\t\tXMLClassifier:\r\n\t\t\t${5:XMLClassifier}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html",
        "prefix": "glue-classifier",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Connection": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Connection\"\r\n\tProperties:\r\n\t\tCatalogId: ${2:String} #required\r\n\t\tConnectionInput: #required\r\n\t\t\t${3:ConnectionInput}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html",
        "prefix": "glue-connection",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Crawler": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Crawler\"\r\n\tProperties:\r\n\t\tClassifiers:\r\n\t\t\t- ${2:String}\r\n\t\tConfiguration: ${3:String}\r\n\t\tCrawlerSecurityConfiguration: ${4:String}\r\n\t\tDatabaseName: ${5:String}\r\n\t\tDescription: ${6:String}\r\n\t\tName: ${7:String}\r\n\t\tRole: ${8:String} #required\r\n\t\tSchedule:\r\n\t\t\t${9:Schedule}\r\n\t\tSchemaChangePolicy:\r\n\t\t\t${10:SchemaChangePolicy}\r\n\t\tTablePrefix: ${11:String}\r\n\t\tTags: ${12:Json}\r\n\t\tTargets: #required\r\n\t\t\t${13:Targets}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html",
        "prefix": "glue-crawler",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::DataCatalogEncryptionSettings": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::DataCatalogEncryptionSettings\"\r\n\tProperties:\r\n\t\tCatalogId: ${2:String} #required\r\n\t\tDataCatalogEncryptionSettings: #required\r\n\t\t\t${3:DataCatalogEncryptionSettings}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html",
        "prefix": "glue-datacatalogencryptionsettings",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Database": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Database\"\r\n\tProperties:\r\n\t\tCatalogId: ${2:String} #required\r\n\t\tDatabaseInput: #required\r\n\t\t\t${3:DatabaseInput}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html",
        "prefix": "glue-database",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::DevEndpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::DevEndpoint\"\r\n\tProperties:\r\n\t\tArguments: ${2:Json}\r\n\t\tEndpointName: ${3:String}\r\n\t\tExtraJarsS3Path: ${4:String}\r\n\t\tExtraPythonLibsS3Path: ${5:String}\r\n\t\tGlueVersion: ${6:String}\r\n\t\tNumberOfNodes: ${7:Integer}\r\n\t\tNumberOfWorkers: ${8:Integer}\r\n\t\tPublicKey: ${9:String}\r\n\t\tPublicKeys:\r\n\t\t\t- ${10:String}\r\n\t\tRoleArn: ${11:String} #required\r\n\t\tSecurityConfiguration: ${12:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${13:String}\r\n\t\tSubnetId: ${14:String}\r\n\t\tTags: ${15:Json}\r\n\t\tWorkerType: ${16:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html",
        "prefix": "glue-devendpoint",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Job": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Job\"\r\n\tProperties:\r\n\t\tAllocatedCapacity: ${2:Double}\r\n\t\tCommand: #required\r\n\t\t\t${3:JobCommand}\r\n\t\tConnections:\r\n\t\t\t${4:ConnectionsList}\r\n\t\tDefaultArguments: ${5:Json}\r\n\t\tDescription: ${6:String}\r\n\t\tExecutionProperty:\r\n\t\t\t${7:ExecutionProperty}\r\n\t\tGlueVersion: ${8:String}\r\n\t\tLogUri: ${9:String}\r\n\t\tMaxCapacity: ${10:Double}\r\n\t\tMaxRetries: ${11:Double}\r\n\t\tName: ${12:String}\r\n\t\tNotificationProperty:\r\n\t\t\t${13:NotificationProperty}\r\n\t\tNumberOfWorkers: ${14:Integer}\r\n\t\tRole: ${15:String} #required\r\n\t\tSecurityConfiguration: ${16:String}\r\n\t\tTags: ${17:Json}\r\n\t\tTimeout: ${18:Integer}\r\n\t\tWorkerType: ${19:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html",
        "prefix": "glue-job",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::MLTransform": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::MLTransform\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGlueVersion: ${3:String}\r\n\t\tInputRecordTables: #required\r\n\t\t\t${4:InputRecordTables}\r\n\t\tMaxCapacity: ${5:Double}\r\n\t\tMaxRetries: ${6:Integer}\r\n\t\tName: ${7:String}\r\n\t\tNumberOfWorkers: ${8:Integer}\r\n\t\tRole: ${9:String} #required\r\n\t\tTags: ${10:Json}\r\n\t\tTimeout: ${11:Integer}\r\n\t\tTransformEncryption:\r\n\t\t\t${12:TransformEncryption}\r\n\t\tTransformParameters: #required\r\n\t\t\t${13:TransformParameters}\r\n\t\tWorkerType: ${14:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html",
        "prefix": "glue-mltransform",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Partition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Partition\"\r\n\tProperties:\r\n\t\tCatalogId: ${2:String} #required\r\n\t\tDatabaseName: ${3:String} #required\r\n\t\tPartitionInput: #required\r\n\t\t\t${4:PartitionInput}\r\n\t\tTableName: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html",
        "prefix": "glue-partition",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Registry": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Registry\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "glue-registry",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Schema": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Schema\"\r\n\tProperties:\r\n\t\tCheckpointVersion:\r\n\t\t\t${2:SchemaVersion}\r\n\t\tCompatibility: ${3:String} #required\r\n\t\tDataFormat: ${4:String} #required\r\n\t\tDescription: ${5:String}\r\n\t\tName: ${6:String} #required\r\n\t\tRegistry:\r\n\t\t\t${7:Registry}\r\n\t\tSchemaDefinition: ${8:String} #required\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html\r\n\nAttributes: \r\n  Arn\r\n  InitialSchemaVersionId\r\n",
        "prefix": "glue-schema",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::SchemaVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SchemaVersion\"\r\n\tProperties:\r\n\t\tSchema: #required\r\n\t\t\t${2:Schema}\r\n\t\tSchemaDefinition: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html\r\n\nAttributes: \r\n  VersionId\r\n",
        "prefix": "glue-schemaversion",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::SchemaVersionMetadata": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SchemaVersionMetadata\"\r\n\tProperties:\r\n\t\tKey: ${2:String} #required\r\n\t\tSchemaVersionId: ${3:String} #required\r\n\t\tValue: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html",
        "prefix": "glue-schemaversionmetadata",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::SecurityConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SecurityConfiguration\"\r\n\tProperties:\r\n\t\tEncryptionConfiguration: #required\r\n\t\t\t${2:EncryptionConfiguration}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html",
        "prefix": "glue-securityconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Table": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Table\"\r\n\tProperties:\r\n\t\tCatalogId: ${2:String} #required\r\n\t\tDatabaseName: ${3:String} #required\r\n\t\tTableInput: #required\r\n\t\t\t${4:TableInput}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html",
        "prefix": "glue-table",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Trigger": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Trigger\"\r\n\tProperties:\r\n\t\tActions: #required\r\n\t\t\t- ${2:Action}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tPredicate:\r\n\t\t\t${5:Predicate}\r\n\t\tSchedule: ${6:String}\r\n\t\tStartOnCreation: ${7:Boolean}\r\n\t\tTags: ${8:Json}\r\n\t\tType: ${9:String} #required\r\n\t\tWorkflowName: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html",
        "prefix": "glue-trigger",
        "scope": "source.cloudformation"
    },
    "AWS::Glue::Workflow": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Workflow\"\r\n\tProperties:\r\n\t\tDefaultRunProperties: ${2:Json}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tTags: ${5:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html",
        "prefix": "glue-workflow",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::ConnectorDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ConnectorDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:ConnectorDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-connectordefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::ConnectorDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ConnectorDefinitionVersion\"\r\n\tProperties:\r\n\t\tConnectorDefinitionId: ${2:String} #required\r\n\t\tConnectors: #required\r\n\t\t\t- ${3:Connector}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html",
        "prefix": "greengrass-connectordefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::CoreDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::CoreDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:CoreDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-coredefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::CoreDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::CoreDefinitionVersion\"\r\n\tProperties:\r\n\t\tCoreDefinitionId: ${2:String} #required\r\n\t\tCores: #required\r\n\t\t\t- ${3:Core}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html",
        "prefix": "greengrass-coredefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::DeviceDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::DeviceDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:DeviceDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-devicedefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::DeviceDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::DeviceDefinitionVersion\"\r\n\tProperties:\r\n\t\tDeviceDefinitionId: ${2:String} #required\r\n\t\tDevices: #required\r\n\t\t\t- ${3:Device}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html",
        "prefix": "greengrass-devicedefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::FunctionDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::FunctionDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:FunctionDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-functiondefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::FunctionDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::FunctionDefinitionVersion\"\r\n\tProperties:\r\n\t\tDefaultConfig:\r\n\t\t\t${2:DefaultConfig}\r\n\t\tFunctionDefinitionId: ${3:String} #required\r\n\t\tFunctions: #required\r\n\t\t\t- ${4:Function}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html",
        "prefix": "greengrass-functiondefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::Group": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::Group\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:GroupVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tRoleArn: ${4:String}\r\n\t\tTags: ${5:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html\r\n\nAttributes: \r\n  RoleAttachedAt\r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  RoleArn\r\n  Name\r\n",
        "prefix": "greengrass-group",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::GroupVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::GroupVersion\"\r\n\tProperties:\r\n\t\tConnectorDefinitionVersionArn: ${2:String}\r\n\t\tCoreDefinitionVersionArn: ${3:String}\r\n\t\tDeviceDefinitionVersionArn: ${4:String}\r\n\t\tFunctionDefinitionVersionArn: ${5:String}\r\n\t\tGroupId: ${6:String} #required\r\n\t\tLoggerDefinitionVersionArn: ${7:String}\r\n\t\tResourceDefinitionVersionArn: ${8:String}\r\n\t\tSubscriptionDefinitionVersionArn: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html",
        "prefix": "greengrass-groupversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::LoggerDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::LoggerDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:LoggerDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-loggerdefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::LoggerDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::LoggerDefinitionVersion\"\r\n\tProperties:\r\n\t\tLoggerDefinitionId: ${2:String} #required\r\n\t\tLoggers: #required\r\n\t\t\t- ${3:Logger}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html",
        "prefix": "greengrass-loggerdefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::ResourceDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ResourceDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:ResourceDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-resourcedefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::ResourceDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ResourceDefinitionVersion\"\r\n\tProperties:\r\n\t\tResourceDefinitionId: ${2:String} #required\r\n\t\tResources: #required\r\n\t\t\t- ${3:ResourceInstance}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html",
        "prefix": "greengrass-resourcedefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::SubscriptionDefinition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::SubscriptionDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\t${2:SubscriptionDefinitionVersion}\r\n\t\tName: ${3:String} #required\r\n\t\tTags: ${4:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html\r\n\nAttributes: \r\n  LatestVersionArn\r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "greengrass-subscriptiondefinition",
        "scope": "source.cloudformation"
    },
    "AWS::Greengrass::SubscriptionDefinitionVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::SubscriptionDefinitionVersion\"\r\n\tProperties:\r\n\t\tSubscriptionDefinitionId: ${2:String} #required\r\n\t\tSubscriptions: #required\r\n\t\t\t- ${3:Subscription}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html",
        "prefix": "greengrass-subscriptiondefinitionversion",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::Detector": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Detector\"\r\n\tProperties:\r\n\t\tDataSources:\r\n\t\t\t${2:CFNDataSourceConfigurations}\r\n\t\tEnable: ${3:Boolean} #required\r\n\t\tFindingPublishingFrequency: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html",
        "prefix": "guardduty-detector",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::Filter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Filter\"\r\n\tProperties:\r\n\t\tAction: ${2:String} #required\r\n\t\tDescription: ${3:String} #required\r\n\t\tDetectorId: ${4:String} #required\r\n\t\tFindingCriteria: #required\r\n\t\t\t${5:FindingCriteria}\r\n\t\tName: ${6:String} #required\r\n\t\tRank: ${7:Integer} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html",
        "prefix": "guardduty-filter",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::IPSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::IPSet\"\r\n\tProperties:\r\n\t\tActivate: ${2:Boolean} #required\r\n\t\tDetectorId: ${3:String} #required\r\n\t\tFormat: ${4:String} #required\r\n\t\tLocation: ${5:String} #required\r\n\t\tName: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html",
        "prefix": "guardduty-ipset",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::Master": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Master\"\r\n\tProperties:\r\n\t\tDetectorId: ${2:String} #required\r\n\t\tInvitationId: ${3:String}\r\n\t\tMasterId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html",
        "prefix": "guardduty-master",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::Member": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Member\"\r\n\tProperties:\r\n\t\tDetectorId: ${2:String} #required\r\n\t\tDisableEmailNotification: ${3:Boolean}\r\n\t\tEmail: ${4:String} #required\r\n\t\tMemberId: ${5:String} #required\r\n\t\tMessage: ${6:String}\r\n\t\tStatus: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html",
        "prefix": "guardduty-member",
        "scope": "source.cloudformation"
    },
    "AWS::GuardDuty::ThreatIntelSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::ThreatIntelSet\"\r\n\tProperties:\r\n\t\tActivate: ${2:Boolean} #required\r\n\t\tDetectorId: ${3:String} #required\r\n\t\tFormat: ${4:String} #required\r\n\t\tLocation: ${5:String} #required\r\n\t\tName: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html",
        "prefix": "guardduty-threatintelset",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::AccessKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::AccessKey\"\r\n\tProperties:\r\n\t\tSerial: ${2:Integer}\r\n\t\tStatus: ${3:String}\r\n\t\tUserName: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html\r\n\nAttributes: \r\n  SecretAccessKey\r\n",
        "prefix": "iam-accesskey",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::Group": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Group\"\r\n\tProperties:\r\n\t\tGroupName: ${2:String}\r\n\t\tManagedPolicyArns:\r\n\t\t\t- ${3:String}\r\n\t\tPath: ${4:String}\r\n\t\tPolicies:\r\n\t\t\t- ${5:Policy}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iam-group",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::InstanceProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::InstanceProfile\"\r\n\tProperties:\r\n\t\tInstanceProfileName: ${2:String}\r\n\t\tPath: ${3:String}\r\n\t\tRoles: #required\r\n\t\t\t- ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iam-instanceprofile",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::ManagedPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::ManagedPolicy\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGroups:\r\n\t\t\t- ${3:String}\r\n\t\tManagedPolicyName: ${4:String}\r\n\t\tPath: ${5:String}\r\n\t\tPolicyDocument: ${6:Json} #required\r\n\t\tRoles:\r\n\t\t\t- ${7:String}\r\n\t\tUsers:\r\n\t\t\t- ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html",
        "prefix": "iam-managedpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::Policy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Policy\"\r\n\tProperties:\r\n\t\tGroups:\r\n\t\t\t- ${2:String}\r\n\t\tPolicyDocument: ${3:Json} #required\r\n\t\tPolicyName: ${4:String} #required\r\n\t\tRoles:\r\n\t\t\t- ${5:String}\r\n\t\tUsers:\r\n\t\t\t- ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
        "prefix": "iam-policy",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::Role": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Role\"\r\n\tProperties:\r\n\t\tAssumeRolePolicyDocument: ${2:Json} #required\r\n\t\tDescription: ${3:String}\r\n\t\tManagedPolicyArns:\r\n\t\t\t- ${4:String}\r\n\t\tMaxSessionDuration: ${5:Integer}\r\n\t\tPath: ${6:String}\r\n\t\tPermissionsBoundary: ${7:String}\r\n\t\tPolicies:\r\n\t\t\t- ${8:Policy}\r\n\t\tRoleName: ${9:String}\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html\r\n\nAttributes: \r\n  Arn\r\n  RoleId\r\n",
        "prefix": "iam-role",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::ServiceLinkedRole": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::ServiceLinkedRole\"\r\n\tProperties:\r\n\t\tAWSServiceName: ${2:String} #required\r\n\t\tCustomSuffix: ${3:String}\r\n\t\tDescription: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html",
        "prefix": "iam-servicelinkedrole",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::User": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::User\"\r\n\tProperties:\r\n\t\tGroups:\r\n\t\t\t- ${2:String}\r\n\t\tLoginProfile:\r\n\t\t\t${3:LoginProfile}\r\n\t\tManagedPolicyArns:\r\n\t\t\t- ${4:String}\r\n\t\tPath: ${5:String}\r\n\t\tPermissionsBoundary: ${6:String}\r\n\t\tPolicies:\r\n\t\t\t- ${7:Policy}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n\t\tUserName: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iam-user",
        "scope": "source.cloudformation"
    },
    "AWS::IAM::UserToGroupAddition": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::UserToGroupAddition\"\r\n\tProperties:\r\n\t\tGroupName: ${2:String} #required\r\n\t\tUsers: #required\r\n\t\t\t- ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html",
        "prefix": "iam-usertogroupaddition",
        "scope": "source.cloudformation"
    },
    "AWS::IVS::Channel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IVS::Channel\"\r\n\tProperties:\r\n\t\tAuthorized: ${2:Boolean}\r\n\t\tLatencyMode: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tType: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html\r\n\nAttributes: \r\n  Arn\r\n  PlaybackUrl\r\n  IngestEndpoint\r\n",
        "prefix": "ivs-channel",
        "scope": "source.cloudformation"
    },
    "AWS::IVS::PlaybackKeyPair": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IVS::PlaybackKeyPair\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tPublicKeyMaterial: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html\r\n\nAttributes: \r\n  Fingerprint\r\n  Arn\r\n",
        "prefix": "ivs-playbackkeypair",
        "scope": "source.cloudformation"
    },
    "AWS::IVS::StreamKey": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IVS::StreamKey\"\r\n\tProperties:\r\n\t\tChannelArn: ${2:String} #required\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html\r\n\nAttributes: \r\n  Arn\r\n  Value\r\n",
        "prefix": "ivs-streamkey",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::Component": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::Component\"\r\n\tProperties:\r\n\t\tChangeDescription: ${2:String}\r\n\t\tData: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tKmsKeyId: ${5:String}\r\n\t\tName: ${6:String} #required\r\n\t\tPlatform: ${7:String} #required\r\n\t\tSupportedOsVersions:\r\n\t\t\t- ${8:String}\r\n\t\tTags:\r\n\t\t\t${9:Map}\r\n\t\tUri: ${10:String}\r\n\t\tVersion: ${11:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html\r\n\nAttributes: \r\n  Arn\r\n  Type\r\n  Encrypted\r\n",
        "prefix": "imagebuilder-component",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::DistributionConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::DistributionConfiguration\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDistributions: #required\r\n\t\t\t- ${3:Distribution}\r\n\t\tName: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t${5:Map}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "imagebuilder-distributionconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::Image": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::Image\"\r\n\tProperties:\r\n\t\tDistributionConfigurationArn: ${2:String}\r\n\t\tEnhancedImageMetadataEnabled: ${3:Boolean}\r\n\t\tImageRecipeArn: ${4:String} #required\r\n\t\tImageTestsConfiguration:\r\n\t\t\t${5:ImageTestsConfiguration}\r\n\t\tInfrastructureConfigurationArn: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t${7:Map}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n  ImageId\r\n",
        "prefix": "imagebuilder-image",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::ImagePipeline": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::ImagePipeline\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDistributionConfigurationArn: ${3:String}\r\n\t\tEnhancedImageMetadataEnabled: ${4:Boolean}\r\n\t\tImageRecipeArn: ${5:String} #required\r\n\t\tImageTestsConfiguration:\r\n\t\t\t${6:ImageTestsConfiguration}\r\n\t\tInfrastructureConfigurationArn: ${7:String} #required\r\n\t\tName: ${8:String} #required\r\n\t\tSchedule:\r\n\t\t\t${9:Schedule}\r\n\t\tStatus: ${10:String}\r\n\t\tTags:\r\n\t\t\t${11:Map}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "imagebuilder-imagepipeline",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::ImageRecipe": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::ImageRecipe\"\r\n\tProperties:\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- ${2:InstanceBlockDeviceMapping}\r\n\t\tComponents: #required\r\n\t\t\t- ${3:ComponentConfiguration}\r\n\t\tDescription: ${4:String}\r\n\t\tName: ${5:String} #required\r\n\t\tParentImage: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t${7:Map}\r\n\t\tVersion: ${8:String} #required\r\n\t\tWorkingDirectory: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "imagebuilder-imagerecipe",
        "scope": "source.cloudformation"
    },
    "AWS::ImageBuilder::InfrastructureConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::InfrastructureConfiguration\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tInstanceProfileName: ${3:String} #required\r\n\t\tInstanceTypes:\r\n\t\t\t- ${4:String}\r\n\t\tKeyPair: ${5:String}\r\n\t\tLogging:\r\n\t\t\t${6:Logging}\r\n\t\tName: ${7:String} #required\r\n\t\tResourceTags:\r\n\t\t\t${8:Map}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${9:String}\r\n\t\tSnsTopicArn: ${10:String}\r\n\t\tSubnetId: ${11:String}\r\n\t\tTags:\r\n\t\t\t${12:Map}\r\n\t\tTerminateInstanceOnFailure: ${13:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "imagebuilder-infrastructureconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::Inspector::AssessmentTarget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::AssessmentTarget\"\r\n\tProperties:\r\n\t\tAssessmentTargetName: ${2:String}\r\n\t\tResourceGroupArn: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "inspector-assessmenttarget",
        "scope": "source.cloudformation"
    },
    "AWS::Inspector::AssessmentTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::AssessmentTemplate\"\r\n\tProperties:\r\n\t\tAssessmentTargetArn: ${2:String} #required\r\n\t\tAssessmentTemplateName: ${3:String}\r\n\t\tDurationInSeconds: ${4:Integer} #required\r\n\t\tRulesPackageArns: #required\r\n\t\t\t- ${5:String}\r\n\t\tUserAttributesForFindings:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "inspector-assessmenttemplate",
        "scope": "source.cloudformation"
    },
    "AWS::Inspector::ResourceGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::ResourceGroup\"\r\n\tProperties:\r\n\t\tResourceGroupTags: #required\r\n\t\t\t- ${2:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "inspector-resourcegroup",
        "scope": "source.cloudformation"
    },
    "AWS::IoT1Click::Device": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT1Click::Device\"\r\n\tProperties:\r\n\t\tDeviceId: ${2:String} #required\r\n\t\tEnabled: ${3:Boolean} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-device.html\r\n\nAttributes: \r\n  DeviceId\r\n  Enabled\r\n  Arn\r\n",
        "prefix": "iot1click-device",
        "scope": "source.cloudformation"
    },
    "AWS::IoT1Click::Placement": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT1Click::Placement\"\r\n\tProperties:\r\n\t\tAssociatedDevices: ${2:Json}\r\n\t\tAttributes: ${3:Json}\r\n\t\tPlacementName: ${4:String}\r\n\t\tProjectName: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-placement.html\r\n\nAttributes: \r\n  PlacementName\r\n  ProjectName\r\n",
        "prefix": "iot1click-placement",
        "scope": "source.cloudformation"
    },
    "AWS::IoT1Click::Project": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT1Click::Project\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tPlacementTemplate: #required\r\n\t\t\t${3:PlacementTemplate}\r\n\t\tProjectName: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot1click-project.html\r\n\nAttributes: \r\n  ProjectName\r\n  Arn\r\n",
        "prefix": "iot1click-project",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::Authorizer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Authorizer\"\r\n\tProperties:\r\n\t\tAuthorizerFunctionArn: ${2:String} #required\r\n\t\tAuthorizerName: ${3:String}\r\n\t\tSigningDisabled: ${4:Boolean}\r\n\t\tStatus: ${5:String}\r\n\t\tTags:\r\n\t\t\t${6:Tags}\r\n\t\tTokenKeyName: ${7:String}\r\n\t\tTokenSigningPublicKeys:\r\n\t\t\t${8:TokenSigningPublicKeys}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iot-authorizer",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::Certificate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Certificate\"\r\n\tProperties:\r\n\t\tCACertificatePem: ${2:String}\r\n\t\tCertificateMode: ${3:String}\r\n\t\tCertificatePem: ${4:String}\r\n\t\tCertificateSigningRequest: ${5:String}\r\n\t\tStatus: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "iot-certificate",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::DomainConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::DomainConfiguration\"\r\n\tProperties:\r\n\t\tAuthorizerConfig:\r\n\t\t\t${2:AuthorizerConfig}\r\n\t\tDomainConfigurationName: ${3:String}\r\n\t\tDomainConfigurationStatus: ${4:String}\r\n\t\tDomainName: ${5:String}\r\n\t\tServerCertificateArns:\r\n\t\t\t- ${6:String}\r\n\t\tServiceType: ${7:String}\r\n\t\tTags:\r\n\t\t\t${8:Tags}\r\n\t\tValidationCertificateArn: ${9:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n  DomainType\r\n  ServerCertificates\r\n",
        "prefix": "iot-domainconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::Policy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Policy\"\r\n\tProperties:\r\n\t\tPolicyDocument: ${2:Json} #required\r\n\t\tPolicyName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iot-policy",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::PolicyPrincipalAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::PolicyPrincipalAttachment\"\r\n\tProperties:\r\n\t\tPolicyName: ${2:String} #required\r\n\t\tPrincipal: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html",
        "prefix": "iot-policyprincipalattachment",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::ProvisioningTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ProvisioningTemplate\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tEnabled: ${3:Boolean}\r\n\t\tPreProvisioningHook:\r\n\t\t\t${4:ProvisioningHook}\r\n\t\tProvisioningRoleArn: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t${6:Tags}\r\n\t\tTemplateBody: ${7:String} #required\r\n\t\tTemplateName: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html\r\n\nAttributes: \r\n  TemplateArn\r\n",
        "prefix": "iot-provisioningtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::Thing": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Thing\"\r\n\tProperties:\r\n\t\tAttributePayload:\r\n\t\t\t${2:AttributePayload}\r\n\t\tThingName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html",
        "prefix": "iot-thing",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::ThingPrincipalAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ThingPrincipalAttachment\"\r\n\tProperties:\r\n\t\tPrincipal: ${2:String} #required\r\n\t\tThingName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html",
        "prefix": "iot-thingprincipalattachment",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::TopicRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::TopicRule\"\r\n\tProperties:\r\n\t\tRuleName: ${2:String}\r\n\t\tTopicRulePayload: #required\r\n\t\t\t${3:TopicRulePayload}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "iot-topicrule",
        "scope": "source.cloudformation"
    },
    "AWS::IoT::TopicRuleDestination": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::TopicRuleDestination\"\r\n\tProperties:\r\n\t\tHttpUrlProperties:\r\n\t\t\t${2:HttpUrlDestinationSummary}\r\n\t\tStatus: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html\r\n\nAttributes: \r\n  Arn\r\n  StatusReason\r\n",
        "prefix": "iot-topicruledestination",
        "scope": "source.cloudformation"
    },
    "AWS::IoTAnalytics::Channel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Channel\"\r\n\tProperties:\r\n\t\tChannelName: ${2:String}\r\n\t\tChannelStorage:\r\n\t\t\t${3:ChannelStorage}\r\n\t\tRetentionPeriod:\r\n\t\t\t${4:RetentionPeriod}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html",
        "prefix": "iotanalytics-channel",
        "scope": "source.cloudformation"
    },
    "AWS::IoTAnalytics::Dataset": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Dataset\"\r\n\tProperties:\r\n\t\tActions: #required\r\n\t\t\t- ${2:Action}\r\n\t\tContentDeliveryRules:\r\n\t\t\t- ${3:DatasetContentDeliveryRule}\r\n\t\tDatasetName: ${4:String}\r\n\t\tRetentionPeriod:\r\n\t\t\t${5:RetentionPeriod}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tTriggers:\r\n\t\t\t- ${7:Trigger}\r\n\t\tVersioningConfiguration:\r\n\t\t\t${8:VersioningConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html",
        "prefix": "iotanalytics-dataset",
        "scope": "source.cloudformation"
    },
    "AWS::IoTAnalytics::Datastore": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Datastore\"\r\n\tProperties:\r\n\t\tDatastoreName: ${2:String}\r\n\t\tDatastoreStorage:\r\n\t\t\t${3:DatastoreStorage}\r\n\t\tRetentionPeriod:\r\n\t\t\t${4:RetentionPeriod}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html",
        "prefix": "iotanalytics-datastore",
        "scope": "source.cloudformation"
    },
    "AWS::IoTAnalytics::Pipeline": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Pipeline\"\r\n\tProperties:\r\n\t\tPipelineActivities: #required\r\n\t\t\t- ${2:Activity}\r\n\t\tPipelineName: ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html",
        "prefix": "iotanalytics-pipeline",
        "scope": "source.cloudformation"
    },
    "AWS::IoTEvents::DetectorModel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTEvents::DetectorModel\"\r\n\tProperties:\r\n\t\tDetectorModelDefinition:\r\n\t\t\t${2:DetectorModelDefinition}\r\n\t\tDetectorModelDescription: ${3:String}\r\n\t\tDetectorModelName: ${4:String}\r\n\t\tEvaluationMethod: ${5:String}\r\n\t\tKey: ${6:String}\r\n\t\tRoleArn: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html",
        "prefix": "iotevents-detectormodel",
        "scope": "source.cloudformation"
    },
    "AWS::IoTEvents::Input": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTEvents::Input\"\r\n\tProperties:\r\n\t\tInputDefinition:\r\n\t\t\t${2:InputDefinition}\r\n\t\tInputDescription: ${3:String}\r\n\t\tInputName: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html",
        "prefix": "iotevents-input",
        "scope": "source.cloudformation"
    },
    "AWS::IoTSiteWise::Asset": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Asset\"\r\n\tProperties:\r\n\t\tAssetHierarchies:\r\n\t\t\t- ${2:AssetHierarchy}\r\n\t\tAssetModelId: ${3:String} #required\r\n\t\tAssetName: ${4:String} #required\r\n\t\tAssetProperties:\r\n\t\t\t- ${5:AssetProperty}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html\r\n\nAttributes: \r\n  AssetId\r\n  AssetArn\r\n",
        "prefix": "iotsitewise-asset",
        "scope": "source.cloudformation"
    },
    "AWS::IoTSiteWise::AssetModel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::AssetModel\"\r\n\tProperties:\r\n\t\tAssetModelDescription: ${2:String}\r\n\t\tAssetModelHierarchies:\r\n\t\t\t- ${3:AssetModelHierarchy}\r\n\t\tAssetModelName: ${4:String} #required\r\n\t\tAssetModelProperties:\r\n\t\t\t- ${5:AssetModelProperty}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html\r\n\nAttributes: \r\n  AssetModelId\r\n  AssetModelArn\r\n",
        "prefix": "iotsitewise-assetmodel",
        "scope": "source.cloudformation"
    },
    "AWS::IoTSiteWise::Gateway": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Gateway\"\r\n\tProperties:\r\n\t\tGatewayCapabilitySummaries:\r\n\t\t\t- ${2:GatewayCapabilitySummary}\r\n\t\tGatewayName: ${3:String} #required\r\n\t\tGatewayPlatform: #required\r\n\t\t\t${4:GatewayPlatform}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html\r\n\nAttributes: \r\n  GatewayId\r\n",
        "prefix": "iotsitewise-gateway",
        "scope": "source.cloudformation"
    },
    "AWS::IoTThingsGraph::FlowTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTThingsGraph::FlowTemplate\"\r\n\tProperties:\r\n\t\tCompatibleNamespaceVersion: ${2:Double}\r\n\t\tDefinition: #required\r\n\t\t\t${3:DefinitionDocument}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html",
        "prefix": "iotthingsgraph-flowtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::KMS::Alias": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KMS::Alias\"\r\n\tProperties:\r\n\t\tAliasName: ${2:String} #required\r\n\t\tTargetKeyId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html",
        "prefix": "kms-alias",
        "scope": "source.cloudformation"
    },
    "AWS::KMS::Key": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KMS::Key\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tEnableKeyRotation: ${3:Boolean}\r\n\t\tEnabled: ${4:Boolean}\r\n\t\tKeyPolicy: ${5:} #required\r\n\t\tKeySpec: ${6:String}\r\n\t\tKeyUsage: ${7:String}\r\n\t\tPendingWindowInDays: ${8:Integer}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html\r\n\nAttributes: \r\n  Arn\r\n  KeyId\r\n",
        "prefix": "kms-key",
        "scope": "source.cloudformation"
    },
    "AWS::Kendra::DataSource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::DataSource\"\r\n\tProperties:\r\n\t\tDataSourceConfiguration:\r\n\t\t\t${2:DataSourceConfiguration}\r\n\t\tDescription: ${3:String}\r\n\t\tIndexId: ${4:String} #required\r\n\t\tName: ${5:String} #required\r\n\t\tRoleArn: ${6:String}\r\n\t\tSchedule: ${7:String}\r\n\t\tTags:\r\n\t\t\t${8:TagList}\r\n\t\tType: ${9:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "kendra-datasource",
        "scope": "source.cloudformation"
    },
    "AWS::Kendra::Faq": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::Faq\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tFileFormat: ${3:String}\r\n\t\tIndexId: ${4:String} #required\r\n\t\tName: ${5:String} #required\r\n\t\tRoleArn: ${6:String} #required\r\n\t\tS3Path: #required\r\n\t\t\t${7:S3Path}\r\n\t\tTags:\r\n\t\t\t${8:TagList}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "kendra-faq",
        "scope": "source.cloudformation"
    },
    "AWS::Kendra::Index": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::Index\"\r\n\tProperties:\r\n\t\tCapacityUnits:\r\n\t\t\t${2:CapacityUnitsConfiguration}\r\n\t\tDescription: ${3:String}\r\n\t\tDocumentMetadataConfigurations:\r\n\t\t\t${4:DocumentMetadataConfigurationList}\r\n\t\tEdition: ${5:String} #required\r\n\t\tName: ${6:String} #required\r\n\t\tRoleArn: ${7:String} #required\r\n\t\tServerSideEncryptionConfiguration:\r\n\t\t\t${8:ServerSideEncryptionConfiguration}\r\n\t\tTags:\r\n\t\t\t${9:TagList}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "kendra-index",
        "scope": "source.cloudformation"
    },
    "AWS::Kinesis::Stream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kinesis::Stream\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tRetentionPeriodHours: ${3:Integer}\r\n\t\tShardCount: ${4:Integer} #required\r\n\t\tStreamEncryption:\r\n\t\t\t${5:StreamEncryption}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "kinesis-stream",
        "scope": "source.cloudformation"
    },
    "AWS::Kinesis::StreamConsumer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kinesis::StreamConsumer\"\r\n\tProperties:\r\n\t\tConsumerName: ${2:String} #required\r\n\t\tStreamARN: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html\r\n\nAttributes: \r\n  ConsumerCreationTimestamp\r\n  ConsumerName\r\n  ConsumerARN\r\n  ConsumerStatus\r\n  StreamARN\r\n",
        "prefix": "kinesis-streamconsumer",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalytics::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::Application\"\r\n\tProperties:\r\n\t\tApplicationCode: ${2:String}\r\n\t\tApplicationDescription: ${3:String}\r\n\t\tApplicationName: ${4:String}\r\n\t\tInputs: #required\r\n\t\t\t- ${5:Input}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html",
        "prefix": "kinesisanalytics-application",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalytics::ApplicationOutput": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::ApplicationOutput\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tOutput: #required\r\n\t\t\t${3:Output}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html",
        "prefix": "kinesisanalytics-applicationoutput",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::ApplicationReferenceDataSource\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tReferenceDataSource: #required\r\n\t\t\t${3:ReferenceDataSource}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html",
        "prefix": "kinesisanalytics-applicationreferencedatasource",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalyticsV2::Application": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::Application\"\r\n\tProperties:\r\n\t\tApplicationConfiguration:\r\n\t\t\t${2:ApplicationConfiguration}\r\n\t\tApplicationDescription: ${3:String}\r\n\t\tApplicationName: ${4:String}\r\n\t\tRuntimeEnvironment: ${5:String} #required\r\n\t\tServiceExecutionRole: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html",
        "prefix": "kinesisanalyticsv2-application",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tCloudWatchLoggingOption: #required\r\n\t\t\t${3:CloudWatchLoggingOption}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html",
        "prefix": "kinesisanalyticsv2-applicationcloudwatchloggingoption",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalyticsV2::ApplicationOutput": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationOutput\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tOutput: #required\r\n\t\t\t${3:Output}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html",
        "prefix": "kinesisanalyticsv2-applicationoutput",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\"\r\n\tProperties:\r\n\t\tApplicationName: ${2:String} #required\r\n\t\tReferenceDataSource: #required\r\n\t\t\t${3:ReferenceDataSource}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html",
        "prefix": "kinesisanalyticsv2-applicationreferencedatasource",
        "scope": "source.cloudformation"
    },
    "AWS::KinesisFirehose::DeliveryStream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisFirehose::DeliveryStream\"\r\n\tProperties:\r\n\t\tDeliveryStreamEncryptionConfigurationInput:\r\n\t\t\t${2:DeliveryStreamEncryptionConfigurationInput}\r\n\t\tDeliveryStreamName: ${3:String}\r\n\t\tDeliveryStreamType: ${4:String}\r\n\t\tElasticsearchDestinationConfiguration:\r\n\t\t\t${5:ElasticsearchDestinationConfiguration}\r\n\t\tExtendedS3DestinationConfiguration:\r\n\t\t\t${6:ExtendedS3DestinationConfiguration}\r\n\t\tHttpEndpointDestinationConfiguration:\r\n\t\t\t${7:HttpEndpointDestinationConfiguration}\r\n\t\tKinesisStreamSourceConfiguration:\r\n\t\t\t${8:KinesisStreamSourceConfiguration}\r\n\t\tRedshiftDestinationConfiguration:\r\n\t\t\t${9:RedshiftDestinationConfiguration}\r\n\t\tS3DestinationConfiguration:\r\n\t\t\t${10:S3DestinationConfiguration}\r\n\t\tSplunkDestinationConfiguration:\r\n\t\t\t${11:SplunkDestinationConfiguration}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "kinesisfirehose-deliverystream",
        "scope": "source.cloudformation"
    },
    "AWS::LakeFormation::DataLakeSettings": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::DataLakeSettings\"\r\n\tProperties:\r\n\t\tAdmins:\r\n\t\t\t${2:Admins}\r\n\t\tTrustedResourceOwners:\r\n\t\t\t- ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html",
        "prefix": "lakeformation-datalakesettings",
        "scope": "source.cloudformation"
    },
    "AWS::LakeFormation::Permissions": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::Permissions\"\r\n\tProperties:\r\n\t\tDataLakePrincipal: #required\r\n\t\t\t${2:DataLakePrincipal}\r\n\t\tPermissions:\r\n\t\t\t- ${3:String}\r\n\t\tPermissionsWithGrantOption:\r\n\t\t\t- ${4:String}\r\n\t\tResource: #required\r\n\t\t\t${5:Resource}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html",
        "prefix": "lakeformation-permissions",
        "scope": "source.cloudformation"
    },
    "AWS::LakeFormation::Resource": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::Resource\"\r\n\tProperties:\r\n\t\tResourceArn: ${2:String} #required\r\n\t\tRoleArn: ${3:String}\r\n\t\tUseServiceLinkedRole: ${4:Boolean} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html",
        "prefix": "lakeformation-resource",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::Alias": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Alias\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tFunctionName: ${3:String} #required\r\n\t\tFunctionVersion: ${4:String} #required\r\n\t\tName: ${5:String} #required\r\n\t\tProvisionedConcurrencyConfig:\r\n\t\t\t${6:ProvisionedConcurrencyConfiguration}\r\n\t\tRoutingConfig:\r\n\t\t\t${7:AliasRoutingConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html",
        "prefix": "lambda-alias",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::CodeSigningConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::CodeSigningConfig\"\r\n\tProperties:\r\n\t\tAllowedPublishers: #required\r\n\t\t\t${2:AllowedPublishers}\r\n\t\tCodeSigningPolicies:\r\n\t\t\t${3:CodeSigningPolicies}\r\n\t\tDescription: ${4:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html\r\n\nAttributes: \r\n  CodeSigningConfigId\r\n  CodeSigningConfigArn\r\n",
        "prefix": "lambda-codesigningconfig",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::EventInvokeConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::EventInvokeConfig\"\r\n\tProperties:\r\n\t\tDestinationConfig:\r\n\t\t\t${2:DestinationConfig}\r\n\t\tFunctionName: ${3:String} #required\r\n\t\tMaximumEventAgeInSeconds: ${4:Integer}\r\n\t\tMaximumRetryAttempts: ${5:Integer}\r\n\t\tQualifier: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html",
        "prefix": "lambda-eventinvokeconfig",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::EventSourceMapping": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::EventSourceMapping\"\r\n\tProperties:\r\n\t\tBatchSize: ${2:Integer}\r\n\t\tBisectBatchOnFunctionError: ${3:Boolean}\r\n\t\tDestinationConfig:\r\n\t\t\t${4:DestinationConfig}\r\n\t\tEnabled: ${5:Boolean}\r\n\t\tEventSourceArn: ${6:String} #required\r\n\t\tFunctionName: ${7:String} #required\r\n\t\tMaximumBatchingWindowInSeconds: ${8:Integer}\r\n\t\tMaximumRecordAgeInSeconds: ${9:Integer}\r\n\t\tMaximumRetryAttempts: ${10:Integer}\r\n\t\tParallelizationFactor: ${11:Integer}\r\n\t\tPartialBatchResponse: ${12:Boolean}\r\n\t\tQueues:\r\n\t\t\t- ${13:String}\r\n\t\tSourceAccessConfigurations:\r\n\t\t\t- ${14:SourceAccessConfiguration}\r\n\t\tStartingPosition: ${15:String}\r\n\t\tTopics:\r\n\t\t\t- ${16:String}\r\n\t\tTumblingWindowInSeconds: ${17:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html\r\n\nAttributes: \r\n  Id\r\n",
        "prefix": "lambda-eventsourcemapping",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::Function": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Function\"\r\n\tProperties:\r\n\t\tCode: #required\r\n\t\t\t${2:Code}\r\n\t\tCodeSigningConfigArn: ${3:String}\r\n\t\tDeadLetterConfig:\r\n\t\t\t${4:DeadLetterConfig}\r\n\t\tDescription: ${5:String}\r\n\t\tEnvironment:\r\n\t\t\t${6:Environment}\r\n\t\tFileSystemConfigs:\r\n\t\t\t- ${7:FileSystemConfig}\r\n\t\tFunctionName: ${8:String}\r\n\t\tHandler: ${9:String} #required\r\n\t\tKmsKeyArn: ${10:String}\r\n\t\tLayers:\r\n\t\t\t- ${11:String}\r\n\t\tMemorySize: ${12:Integer}\r\n\t\tReservedConcurrentExecutions: ${13:Integer}\r\n\t\tRole: ${14:String} #required\r\n\t\tRuntime: ${15:String} #required\r\n\t\tTags:\r\n\t\t\t- ${16:Tag}\r\n\t\tTimeout: ${17:Integer}\r\n\t\tTracingConfig:\r\n\t\t\t${18:TracingConfig}\r\n\t\tVpcConfig:\r\n\t\t\t${19:VpcConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "lambda-function",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::LayerVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::LayerVersion\"\r\n\tProperties:\r\n\t\tCompatibleRuntimes:\r\n\t\t\t- ${2:String}\r\n\t\tContent: #required\r\n\t\t\t${3:Content}\r\n\t\tDescription: ${4:String}\r\n\t\tLayerName: ${5:String}\r\n\t\tLicenseInfo: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html",
        "prefix": "lambda-layerversion",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::LayerVersionPermission": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::LayerVersionPermission\"\r\n\tProperties:\r\n\t\tAction: ${2:String} #required\r\n\t\tLayerVersionArn: ${3:String} #required\r\n\t\tOrganizationId: ${4:String}\r\n\t\tPrincipal: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html",
        "prefix": "lambda-layerversionpermission",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::Permission": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Permission\"\r\n\tProperties:\r\n\t\tAction: ${2:String} #required\r\n\t\tEventSourceToken: ${3:String}\r\n\t\tFunctionName: ${4:String} #required\r\n\t\tPrincipal: ${5:String} #required\r\n\t\tSourceAccount: ${6:String}\r\n\t\tSourceArn: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html",
        "prefix": "lambda-permission",
        "scope": "source.cloudformation"
    },
    "AWS::Lambda::Version": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Version\"\r\n\tProperties:\r\n\t\tCodeSha256: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tFunctionName: ${4:String} #required\r\n\t\tProvisionedConcurrencyConfig:\r\n\t\t\t${5:ProvisionedConcurrencyConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html\r\n\nAttributes: \r\n  Version\r\n",
        "prefix": "lambda-version",
        "scope": "source.cloudformation"
    },
    "AWS::Logs::Destination": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::Destination\"\r\n\tProperties:\r\n\t\tDestinationName: ${2:String} #required\r\n\t\tDestinationPolicy: ${3:String} #required\r\n\t\tRoleArn: ${4:String} #required\r\n\t\tTargetArn: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "logs-destination",
        "scope": "source.cloudformation"
    },
    "AWS::Logs::LogGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::LogGroup\"\r\n\tProperties:\r\n\t\tKmsKeyId: ${2:String}\r\n\t\tLogGroupName: ${3:String}\r\n\t\tRetentionInDays: ${4:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "logs-loggroup",
        "scope": "source.cloudformation"
    },
    "AWS::Logs::LogStream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::LogStream\"\r\n\tProperties:\r\n\t\tLogGroupName: ${2:String} #required\r\n\t\tLogStreamName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html",
        "prefix": "logs-logstream",
        "scope": "source.cloudformation"
    },
    "AWS::Logs::MetricFilter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::MetricFilter\"\r\n\tProperties:\r\n\t\tFilterPattern: ${2:String} #required\r\n\t\tLogGroupName: ${3:String} #required\r\n\t\tMetricTransformations: #required\r\n\t\t\t- ${4:MetricTransformation}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html",
        "prefix": "logs-metricfilter",
        "scope": "source.cloudformation"
    },
    "AWS::Logs::SubscriptionFilter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::SubscriptionFilter\"\r\n\tProperties:\r\n\t\tDestinationArn: ${2:String} #required\r\n\t\tFilterPattern: ${3:String} #required\r\n\t\tLogGroupName: ${4:String} #required\r\n\t\tRoleArn: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html",
        "prefix": "logs-subscriptionfilter",
        "scope": "source.cloudformation"
    },
    "AWS::MSK::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MSK::Cluster\"\r\n\tProperties:\r\n\t\tBrokerNodeGroupInfo: #required\r\n\t\t\t${2:BrokerNodeGroupInfo}\r\n\t\tClientAuthentication:\r\n\t\t\t${3:ClientAuthentication}\r\n\t\tClusterName: ${4:String} #required\r\n\t\tConfigurationInfo:\r\n\t\t\t${5:ConfigurationInfo}\r\n\t\tEncryptionInfo:\r\n\t\t\t${6:EncryptionInfo}\r\n\t\tEnhancedMonitoring: ${7:String}\r\n\t\tKafkaVersion: ${8:String} #required\r\n\t\tLoggingInfo:\r\n\t\t\t${9:LoggingInfo}\r\n\t\tNumberOfBrokerNodes: ${10:Integer} #required\r\n\t\tOpenMonitoring:\r\n\t\t\t${11:OpenMonitoring}\r\n\t\tTags: ${12:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
        "prefix": "msk-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::Macie::CustomDataIdentifier": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::CustomDataIdentifier\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tIgnoreWords:\r\n\t\t\t- ${3:String}\r\n\t\tKeywords:\r\n\t\t\t- ${4:String}\r\n\t\tMaximumMatchDistance: ${5:Integer}\r\n\t\tName: ${6:String} #required\r\n\t\tRegex: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n  CreatedAt\r\n  Deleted\r\n",
        "prefix": "macie-customdataidentifier",
        "scope": "source.cloudformation"
    },
    "AWS::Macie::FindingsFilter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::FindingsFilter\"\r\n\tProperties:\r\n\t\tAction: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tFindingCriteria: #required\r\n\t\t\t${4:FindingCriteria}\r\n\t\tName: ${5:String} #required\r\n\t\tPosition: ${6:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n  FindingsFilterListItems\r\n",
        "prefix": "macie-findingsfilter",
        "scope": "source.cloudformation"
    },
    "AWS::Macie::Session": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::Session\"\r\n\tProperties:\r\n\t\tFindingPublishingFrequency: ${2:String}\r\n\t\tStatus: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html\r\n\nAttributes: \r\n  AwsAccountId\r\n  ServiceRole\r\n",
        "prefix": "macie-session",
        "scope": "source.cloudformation"
    },
    "AWS::ManagedBlockchain::Member": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ManagedBlockchain::Member\"\r\n\tProperties:\r\n\t\tInvitationId: ${2:String}\r\n\t\tMemberConfiguration: #required\r\n\t\t\t${3:MemberConfiguration}\r\n\t\tNetworkConfiguration:\r\n\t\t\t${4:NetworkConfiguration}\r\n\t\tNetworkId: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html\r\n\nAttributes: \r\n  MemberId\r\n  NetworkId\r\n",
        "prefix": "managedblockchain-member",
        "scope": "source.cloudformation"
    },
    "AWS::ManagedBlockchain::Node": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ManagedBlockchain::Node\"\r\n\tProperties:\r\n\t\tMemberId: ${2:String} #required\r\n\t\tNetworkId: ${3:String} #required\r\n\t\tNodeConfiguration: #required\r\n\t\t\t${4:NodeConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html\r\n\nAttributes: \r\n  MemberId\r\n  NodeId\r\n  Arn\r\n  NetworkId\r\n",
        "prefix": "managedblockchain-node",
        "scope": "source.cloudformation"
    },
    "AWS::MediaConvert::JobTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::JobTemplate\"\r\n\tProperties:\r\n\t\tAccelerationSettings:\r\n\t\t\t${2:AccelerationSettings}\r\n\t\tCategory: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tHopDestinations:\r\n\t\t\t- ${5:HopDestination}\r\n\t\tName: ${6:String}\r\n\t\tPriority: ${7:Integer}\r\n\t\tQueue: ${8:String}\r\n\t\tSettingsJson: ${9:Json} #required\r\n\t\tStatusUpdateInterval: ${10:String}\r\n\t\tTags: ${11:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "mediaconvert-jobtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::MediaConvert::Preset": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::Preset\"\r\n\tProperties:\r\n\t\tCategory: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tSettingsJson: ${5:Json} #required\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "mediaconvert-preset",
        "scope": "source.cloudformation"
    },
    "AWS::MediaConvert::Queue": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::Queue\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String}\r\n\t\tPricingPlan: ${4:String}\r\n\t\tStatus: ${5:String}\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "mediaconvert-queue",
        "scope": "source.cloudformation"
    },
    "AWS::MediaLive::Channel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::Channel\"\r\n\tProperties:\r\n\t\tChannelClass: ${2:String}\r\n\t\tDestinations:\r\n\t\t\t- ${3:OutputDestination}\r\n\t\tEncoderSettings:\r\n\t\t\t${4:EncoderSettings}\r\n\t\tInputAttachments:\r\n\t\t\t- ${5:InputAttachment}\r\n\t\tInputSpecification:\r\n\t\t\t${6:InputSpecification}\r\n\t\tLogLevel: ${7:String}\r\n\t\tName: ${8:String}\r\n\t\tRoleArn: ${9:String}\r\n\t\tTags: ${10:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html\r\n\nAttributes: \r\n  Arn\r\n  Inputs\r\n",
        "prefix": "medialive-channel",
        "scope": "source.cloudformation"
    },
    "AWS::MediaLive::Input": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::Input\"\r\n\tProperties:\r\n\t\tDestinations:\r\n\t\t\t- ${2:InputDestinationRequest}\r\n\t\tInputDevices:\r\n\t\t\t- ${3:InputDeviceSettings}\r\n\t\tInputSecurityGroups:\r\n\t\t\t- ${4:String}\r\n\t\tMediaConnectFlows:\r\n\t\t\t- ${5:MediaConnectFlowRequest}\r\n\t\tName: ${6:String}\r\n\t\tRoleArn: ${7:String}\r\n\t\tSources:\r\n\t\t\t- ${8:InputSourceRequest}\r\n\t\tTags: ${9:Json}\r\n\t\tType: ${10:String}\r\n\t\tVpc:\r\n\t\t\t${11:InputVpcRequest}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html\r\n\nAttributes: \r\n  Destinations\r\n  Arn\r\n  Sources\r\n",
        "prefix": "medialive-input",
        "scope": "source.cloudformation"
    },
    "AWS::MediaLive::InputSecurityGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::InputSecurityGroup\"\r\n\tProperties:\r\n\t\tTags: ${2:Json}\r\n\t\tWhitelistRules:\r\n\t\t\t- ${3:InputWhitelistRuleCidr}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "medialive-inputsecuritygroup",
        "scope": "source.cloudformation"
    },
    "AWS::MediaPackage::Asset": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::Asset\"\r\n\tProperties:\r\n\t\tEgressEndpoints:\r\n\t\t\t- ${2:EgressEndpoint}\r\n\t\tId: ${3:String} #required\r\n\t\tPackagingGroupId: ${4:String} #required\r\n\t\tResourceId: ${5:String}\r\n\t\tSourceArn: ${6:String} #required\r\n\t\tSourceRoleArn: ${7:String} #required\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html\r\n\nAttributes: \r\n  Arn\r\n  CreatedAt\r\n",
        "prefix": "mediapackage-asset",
        "scope": "source.cloudformation"
    },
    "AWS::MediaPackage::Channel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::Channel\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tId: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html\r\n\nAttributes: \r\n  Arn\r\n  HlsIngest\r\n",
        "prefix": "mediapackage-channel",
        "scope": "source.cloudformation"
    },
    "AWS::MediaPackage::OriginEndpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::OriginEndpoint\"\r\n\tProperties:\r\n\t\tAuthorization:\r\n\t\t\t${2:Authorization}\r\n\t\tChannelId: ${3:String} #required\r\n\t\tCmafPackage:\r\n\t\t\t${4:CmafPackage}\r\n\t\tDashPackage:\r\n\t\t\t${5:DashPackage}\r\n\t\tDescription: ${6:String}\r\n\t\tHlsPackage:\r\n\t\t\t${7:HlsPackage}\r\n\t\tId: ${8:String} #required\r\n\t\tManifestName: ${9:String}\r\n\t\tMssPackage:\r\n\t\t\t${10:MssPackage}\r\n\t\tOrigination: ${11:String}\r\n\t\tStartoverWindowSeconds: ${12:Integer}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n\t\tTimeDelaySeconds: ${14:Integer}\r\n\t\tWhitelist:\r\n\t\t\t- ${15:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html\r\n\nAttributes: \r\n  Arn\r\n  Url\r\n",
        "prefix": "mediapackage-originendpoint",
        "scope": "source.cloudformation"
    },
    "AWS::MediaPackage::PackagingConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::PackagingConfiguration\"\r\n\tProperties:\r\n\t\tCmafPackage:\r\n\t\t\t${2:CmafPackage}\r\n\t\tDashPackage:\r\n\t\t\t${3:DashPackage}\r\n\t\tHlsPackage:\r\n\t\t\t${4:HlsPackage}\r\n\t\tId: ${5:String} #required\r\n\t\tMssPackage:\r\n\t\t\t${6:MssPackage}\r\n\t\tPackagingGroupId: ${7:String} #required\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "mediapackage-packagingconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::MediaPackage::PackagingGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::PackagingGroup\"\r\n\tProperties:\r\n\t\tAuthorization:\r\n\t\t\t${2:Authorization}\r\n\t\tId: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html\r\n\nAttributes: \r\n  Arn\r\n  DomainName\r\n",
        "prefix": "mediapackage-packaginggroup",
        "scope": "source.cloudformation"
    },
    "AWS::MediaStore::Container": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaStore::Container\"\r\n\tProperties:\r\n\t\tAccessLoggingEnabled: ${2:Boolean}\r\n\t\tContainerName: ${3:String} #required\r\n\t\tCorsPolicy:\r\n\t\t\t- ${4:CorsRule}\r\n\t\tLifecyclePolicy: ${5:String}\r\n\t\tMetricPolicy:\r\n\t\t\t${6:MetricPolicy}\r\n\t\tPolicy: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html\r\n\nAttributes: \r\n  Endpoint\r\n",
        "prefix": "mediastore-container",
        "scope": "source.cloudformation"
    },
    "AWS::Neptune::DBCluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBCluster\"\r\n\tProperties:\r\n\t\tAssociatedRoles:\r\n\t\t\t- ${2:DBClusterRole}\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${3:String}\r\n\t\tBackupRetentionPeriod: ${4:Integer}\r\n\t\tDBClusterIdentifier: ${5:String}\r\n\t\tDBClusterParameterGroupName: ${6:String}\r\n\t\tDBSubnetGroupName: ${7:String}\r\n\t\tDeletionProtection: ${8:Boolean}\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- ${9:String}\r\n\t\tEngineVersion: ${10:String}\r\n\t\tIamAuthEnabled: ${11:Boolean}\r\n\t\tKmsKeyId: ${12:String}\r\n\t\tPort: ${13:Integer}\r\n\t\tPreferredBackupWindow: ${14:String}\r\n\t\tPreferredMaintenanceWindow: ${15:String}\r\n\t\tRestoreToTime: ${16:String}\r\n\t\tRestoreType: ${17:String}\r\n\t\tSnapshotIdentifier: ${18:String}\r\n\t\tSourceDBClusterIdentifier: ${19:String}\r\n\t\tStorageEncrypted: ${20:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${21:Tag}\r\n\t\tUseLatestRestorableTime: ${22:Boolean}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${23:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html\r\n\nAttributes: \r\n  ClusterResourceId\r\n  Endpoint\r\n  Port\r\n  ReadEndpoint\r\n",
        "prefix": "neptune-dbcluster",
        "scope": "source.cloudformation"
    },
    "AWS::Neptune::DBClusterParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tFamily: ${3:String} #required\r\n\t\tName: ${4:String}\r\n\t\tParameters: ${5:Json} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html",
        "prefix": "neptune-dbclusterparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::Neptune::DBInstance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBInstance\"\r\n\tProperties:\r\n\t\tAllowMajorVersionUpgrade: ${2:Boolean}\r\n\t\tAutoMinorVersionUpgrade: ${3:Boolean}\r\n\t\tAvailabilityZone: ${4:String}\r\n\t\tDBClusterIdentifier: ${5:String}\r\n\t\tDBInstanceClass: ${6:String} #required\r\n\t\tDBInstanceIdentifier: ${7:String}\r\n\t\tDBParameterGroupName: ${8:String}\r\n\t\tDBSnapshotIdentifier: ${9:String}\r\n\t\tDBSubnetGroupName: ${10:String}\r\n\t\tPreferredMaintenanceWindow: ${11:String}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html\r\n\nAttributes: \r\n  Endpoint\r\n  Port\r\n",
        "prefix": "neptune-dbinstance",
        "scope": "source.cloudformation"
    },
    "AWS::Neptune::DBParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tFamily: ${3:String} #required\r\n\t\tName: ${4:String}\r\n\t\tParameters: ${5:Json} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html",
        "prefix": "neptune-dbparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::Neptune::DBSubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupDescription: ${2:String} #required\r\n\t\tDBSubnetGroupName: ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html",
        "prefix": "neptune-dbsubnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkFirewall::Firewall": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::Firewall\"\r\n\tProperties:\r\n\t\tDeleteProtection: ${2:Boolean}\r\n\t\tDescription: ${3:String}\r\n\t\tFirewallName: ${4:String} #required\r\n\t\tFirewallPolicyArn: ${5:String} #required\r\n\t\tFirewallPolicyChangeProtection: ${6:Boolean}\r\n\t\tSubnetChangeProtection: ${7:Boolean}\r\n\t\tSubnetMappings: #required\r\n\t\t\t- ${8:SubnetMapping}\r\n\t\tTags:\r\n\t\t\t${9:Tags}\r\n\t\tVpcId: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html\r\n\nAttributes: \r\n  FirewallArn\r\n  FirewallId\r\n  EndpointIds\r\n",
        "prefix": "networkfirewall-firewall",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkFirewall::FirewallPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::FirewallPolicy\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tFirewallPolicy: #required\r\n\t\t\t${3:FirewallPolicy}\r\n\t\tFirewallPolicyName: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t${5:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html\r\n\nAttributes: \r\n  FirewallPolicyArn\r\n  FirewallPolicyId\r\n",
        "prefix": "networkfirewall-firewallpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkFirewall::LoggingConfiguration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::LoggingConfiguration\"\r\n\tProperties:\r\n\t\tLoggingConfiguration: #required\r\n\t\t\t${2:LoggingConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html\r\n\nAttributes: \r\n  FirewallName\r\n  FirewallArn\r\n",
        "prefix": "networkfirewall-loggingconfiguration",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkFirewall::RuleGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::RuleGroup\"\r\n\tProperties:\r\n\t\tCapacity: ${2:Integer} #required\r\n\t\tDescription: ${3:String}\r\n\t\tRuleGroup:\r\n\t\t\t${4:RuleGroup}\r\n\t\tRuleGroupId: ${5:String}\r\n\t\tRuleGroupName: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t${7:Tags}\r\n\t\tType: ${8:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html\r\n\nAttributes: \r\n  RuleGroupArn\r\n",
        "prefix": "networkfirewall-rulegroup",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::CustomerGatewayAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::CustomerGatewayAssociation\"\r\n\tProperties:\r\n\t\tCustomerGatewayArn: ${2:String} #required\r\n\t\tDeviceId: ${3:String} #required\r\n\t\tGlobalNetworkId: ${4:String} #required\r\n\t\tLinkId: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html",
        "prefix": "networkmanager-customergatewayassociation",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::Device": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Device\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGlobalNetworkId: ${3:String} #required\r\n\t\tLocation:\r\n\t\t\t${4:Location}\r\n\t\tModel: ${5:String}\r\n\t\tSerialNumber: ${6:String}\r\n\t\tSiteId: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n\t\tType: ${9:String}\r\n\t\tVendor: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html\r\n\nAttributes: \r\n  DeviceArn\r\n  DeviceId\r\n",
        "prefix": "networkmanager-device",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::GlobalNetwork": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::GlobalNetwork\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html\r\n\nAttributes: \r\n  Arn\r\n  Id\r\n",
        "prefix": "networkmanager-globalnetwork",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::Link": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Link\"\r\n\tProperties:\r\n\t\tBandwidth: #required\r\n\t\t\t${2:Bandwidth}\r\n\t\tDescription: ${3:String}\r\n\t\tGlobalNetworkId: ${4:String} #required\r\n\t\tProvider: ${5:String}\r\n\t\tSiteId: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tType: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html\r\n\nAttributes: \r\n  LinkArn\r\n  LinkId\r\n",
        "prefix": "networkmanager-link",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::LinkAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::LinkAssociation\"\r\n\tProperties:\r\n\t\tDeviceId: ${2:String} #required\r\n\t\tGlobalNetworkId: ${3:String} #required\r\n\t\tLinkId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html",
        "prefix": "networkmanager-linkassociation",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::Site": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Site\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGlobalNetworkId: ${3:String} #required\r\n\t\tLocation:\r\n\t\t\t${4:Location}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html\r\n\nAttributes: \r\n  SiteArn\r\n  SiteId\r\n",
        "prefix": "networkmanager-site",
        "scope": "source.cloudformation"
    },
    "AWS::NetworkManager::TransitGatewayRegistration": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::TransitGatewayRegistration\"\r\n\tProperties:\r\n\t\tGlobalNetworkId: ${2:String} #required\r\n\t\tTransitGatewayArn: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html",
        "prefix": "networkmanager-transitgatewayregistration",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::App": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::App\"\r\n\tProperties:\r\n\t\tAppSource:\r\n\t\t\t${2:Source}\r\n\t\tAttributes:\r\n\t\t\t${3:Map}\r\n\t\tDataSources:\r\n\t\t\t- ${4:DataSource}\r\n\t\tDescription: ${5:String}\r\n\t\tDomains:\r\n\t\t\t- ${6:String}\r\n\t\tEnableSsl: ${7:Boolean}\r\n\t\tEnvironment:\r\n\t\t\t- ${8:EnvironmentVariable}\r\n\t\tName: ${9:String} #required\r\n\t\tShortname: ${10:String}\r\n\t\tSslConfiguration:\r\n\t\t\t${11:SslConfiguration}\r\n\t\tStackId: ${12:String} #required\r\n\t\tType: ${13:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html",
        "prefix": "opsworks-app",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::ElasticLoadBalancerAttachment\"\r\n\tProperties:\r\n\t\tElasticLoadBalancerName: ${2:String} #required\r\n\t\tLayerId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html",
        "prefix": "opsworks-elasticloadbalancerattachment",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::Instance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Instance\"\r\n\tProperties:\r\n\t\tAgentVersion: ${2:String}\r\n\t\tAmiId: ${3:String}\r\n\t\tArchitecture: ${4:String}\r\n\t\tAutoScalingType: ${5:String}\r\n\t\tAvailabilityZone: ${6:String}\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- ${7:BlockDeviceMapping}\r\n\t\tEbsOptimized: ${8:Boolean}\r\n\t\tElasticIps:\r\n\t\t\t- ${9:String}\r\n\t\tHostname: ${10:String}\r\n\t\tInstallUpdatesOnBoot: ${11:Boolean}\r\n\t\tInstanceType: ${12:String} #required\r\n\t\tLayerIds: #required\r\n\t\t\t- ${13:String}\r\n\t\tOs: ${14:String}\r\n\t\tRootDeviceType: ${15:String}\r\n\t\tSshKeyName: ${16:String}\r\n\t\tStackId: ${17:String} #required\r\n\t\tSubnetId: ${18:String}\r\n\t\tTenancy: ${19:String}\r\n\t\tTimeBasedAutoScaling:\r\n\t\t\t${20:TimeBasedAutoScaling}\r\n\t\tVirtualizationType: ${21:String}\r\n\t\tVolumes:\r\n\t\t\t- ${22:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html\r\n\nAttributes: \r\n  AvailabilityZone\r\n  PrivateDnsName\r\n  PrivateIp\r\n  PublicDnsName\r\n  PublicIp\r\n",
        "prefix": "opsworks-instance",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::Layer": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Layer\"\r\n\tProperties:\r\n\t\tAttributes:\r\n\t\t\t${2:Map}\r\n\t\tAutoAssignElasticIps: ${3:Boolean} #required\r\n\t\tAutoAssignPublicIps: ${4:Boolean} #required\r\n\t\tCustomInstanceProfileArn: ${5:String}\r\n\t\tCustomJson: ${6:Json}\r\n\t\tCustomRecipes:\r\n\t\t\t${7:Recipes}\r\n\t\tCustomSecurityGroupIds:\r\n\t\t\t- ${8:String}\r\n\t\tEnableAutoHealing: ${9:Boolean} #required\r\n\t\tInstallUpdatesOnBoot: ${10:Boolean}\r\n\t\tLifecycleEventConfiguration:\r\n\t\t\t${11:LifecycleEventConfiguration}\r\n\t\tLoadBasedAutoScaling:\r\n\t\t\t${12:LoadBasedAutoScaling}\r\n\t\tName: ${13:String} #required\r\n\t\tPackages:\r\n\t\t\t- ${14:String}\r\n\t\tShortname: ${15:String} #required\r\n\t\tStackId: ${16:String} #required\r\n\t\tTags:\r\n\t\t\t- ${17:Tag}\r\n\t\tType: ${18:String} #required\r\n\t\tUseEbsOptimizedInstances: ${19:Boolean}\r\n\t\tVolumeConfigurations:\r\n\t\t\t- ${20:VolumeConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html",
        "prefix": "opsworks-layer",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::Stack": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Stack\"\r\n\tProperties:\r\n\t\tAgentVersion: ${2:String}\r\n\t\tAttributes:\r\n\t\t\t${3:Map}\r\n\t\tChefConfiguration:\r\n\t\t\t${4:ChefConfiguration}\r\n\t\tCloneAppIds:\r\n\t\t\t- ${5:String}\r\n\t\tClonePermissions: ${6:Boolean}\r\n\t\tConfigurationManager:\r\n\t\t\t${7:StackConfigurationManager}\r\n\t\tCustomCookbooksSource:\r\n\t\t\t${8:Source}\r\n\t\tCustomJson: ${9:Json}\r\n\t\tDefaultAvailabilityZone: ${10:String}\r\n\t\tDefaultInstanceProfileArn: ${11:String} #required\r\n\t\tDefaultOs: ${12:String}\r\n\t\tDefaultRootDeviceType: ${13:String}\r\n\t\tDefaultSshKeyName: ${14:String}\r\n\t\tDefaultSubnetId: ${15:String}\r\n\t\tEcsClusterArn: ${16:String}\r\n\t\tElasticIps:\r\n\t\t\t- ${17:ElasticIp}\r\n\t\tHostnameTheme: ${18:String}\r\n\t\tName: ${19:String} #required\r\n\t\tRdsDbInstances:\r\n\t\t\t- ${20:RdsDbInstance}\r\n\t\tServiceRoleArn: ${21:String} #required\r\n\t\tSourceStackId: ${22:String}\r\n\t\tTags:\r\n\t\t\t- ${23:Tag}\r\n\t\tUseCustomCookbooks: ${24:Boolean}\r\n\t\tUseOpsworksSecurityGroups: ${25:Boolean}\r\n\t\tVpcId: ${26:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html",
        "prefix": "opsworks-stack",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::UserProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::UserProfile\"\r\n\tProperties:\r\n\t\tAllowSelfManagement: ${2:Boolean}\r\n\t\tIamUserArn: ${3:String} #required\r\n\t\tSshPublicKey: ${4:String}\r\n\t\tSshUsername: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html\r\n\nAttributes: \r\n  SshUsername\r\n",
        "prefix": "opsworks-userprofile",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorks::Volume": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Volume\"\r\n\tProperties:\r\n\t\tEc2VolumeId: ${2:String} #required\r\n\t\tMountPoint: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tStackId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html",
        "prefix": "opsworks-volume",
        "scope": "source.cloudformation"
    },
    "AWS::OpsWorksCM::Server": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorksCM::Server\"\r\n\tProperties:\r\n\t\tAssociatePublicIpAddress: ${2:Boolean}\r\n\t\tBackupId: ${3:String}\r\n\t\tBackupRetentionCount: ${4:Integer}\r\n\t\tCustomCertificate: ${5:String}\r\n\t\tCustomDomain: ${6:String}\r\n\t\tCustomPrivateKey: ${7:String}\r\n\t\tDisableAutomatedBackup: ${8:Boolean}\r\n\t\tEngine: ${9:String}\r\n\t\tEngineAttributes:\r\n\t\t\t- ${10:EngineAttribute}\r\n\t\tEngineModel: ${11:String}\r\n\t\tEngineVersion: ${12:String}\r\n\t\tInstanceProfileArn: ${13:String} #required\r\n\t\tInstanceType: ${14:String} #required\r\n\t\tKeyPair: ${15:String}\r\n\t\tPreferredBackupWindow: ${16:String}\r\n\t\tPreferredMaintenanceWindow: ${17:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${18:String}\r\n\t\tServerName: ${19:String}\r\n\t\tServiceRoleArn: ${20:String} #required\r\n\t\tSubnetIds:\r\n\t\t\t- ${21:String}\r\n\t\tTags:\r\n\t\t\t- ${22:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html\r\n\nAttributes: \r\n  Endpoint\r\n  Id\r\n  Arn\r\n",
        "prefix": "opsworkscm-server",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::ADMChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::ADMChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tClientId: ${3:String} #required\r\n\t\tClientSecret: ${4:String} #required\r\n\t\tEnabled: ${5:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html",
        "prefix": "pinpoint-admchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::APNSChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tBundleId: ${3:String}\r\n\t\tCertificate: ${4:String}\r\n\t\tDefaultAuthenticationMethod: ${5:String}\r\n\t\tEnabled: ${6:Boolean}\r\n\t\tPrivateKey: ${7:String}\r\n\t\tTeamId: ${8:String}\r\n\t\tTokenKey: ${9:String}\r\n\t\tTokenKeyId: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html",
        "prefix": "pinpoint-apnschannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::APNSSandboxChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSSandboxChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tBundleId: ${3:String}\r\n\t\tCertificate: ${4:String}\r\n\t\tDefaultAuthenticationMethod: ${5:String}\r\n\t\tEnabled: ${6:Boolean}\r\n\t\tPrivateKey: ${7:String}\r\n\t\tTeamId: ${8:String}\r\n\t\tTokenKey: ${9:String}\r\n\t\tTokenKeyId: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html",
        "prefix": "pinpoint-apnssandboxchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::APNSVoipChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSVoipChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tBundleId: ${3:String}\r\n\t\tCertificate: ${4:String}\r\n\t\tDefaultAuthenticationMethod: ${5:String}\r\n\t\tEnabled: ${6:Boolean}\r\n\t\tPrivateKey: ${7:String}\r\n\t\tTeamId: ${8:String}\r\n\t\tTokenKey: ${9:String}\r\n\t\tTokenKeyId: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html",
        "prefix": "pinpoint-apnsvoipchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::APNSVoipSandboxChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSVoipSandboxChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tBundleId: ${3:String}\r\n\t\tCertificate: ${4:String}\r\n\t\tDefaultAuthenticationMethod: ${5:String}\r\n\t\tEnabled: ${6:Boolean}\r\n\t\tPrivateKey: ${7:String}\r\n\t\tTeamId: ${8:String}\r\n\t\tTokenKey: ${9:String}\r\n\t\tTokenKeyId: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html",
        "prefix": "pinpoint-apnsvoipsandboxchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::App": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::App\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tTags: ${3:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "pinpoint-app",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::ApplicationSettings": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::ApplicationSettings\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tCampaignHook:\r\n\t\t\t${3:CampaignHook}\r\n\t\tCloudWatchMetricsEnabled: ${4:Boolean}\r\n\t\tLimits:\r\n\t\t\t${5:Limits}\r\n\t\tQuietTime:\r\n\t\t\t${6:QuietTime}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html",
        "prefix": "pinpoint-applicationsettings",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::BaiduChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::BaiduChannel\"\r\n\tProperties:\r\n\t\tApiKey: ${2:String} #required\r\n\t\tApplicationId: ${3:String} #required\r\n\t\tEnabled: ${4:Boolean}\r\n\t\tSecretKey: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html",
        "prefix": "pinpoint-baiduchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::Campaign": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::Campaign\"\r\n\tProperties:\r\n\t\tAdditionalTreatments:\r\n\t\t\t- ${2:WriteTreatmentResource}\r\n\t\tApplicationId: ${3:String} #required\r\n\t\tCampaignHook:\r\n\t\t\t${4:CampaignHook}\r\n\t\tDescription: ${5:String}\r\n\t\tHoldoutPercent: ${6:Integer}\r\n\t\tIsPaused: ${7:Boolean}\r\n\t\tLimits:\r\n\t\t\t${8:Limits}\r\n\t\tMessageConfiguration: #required\r\n\t\t\t${9:MessageConfiguration}\r\n\t\tName: ${10:String} #required\r\n\t\tSchedule: #required\r\n\t\t\t${11:Schedule}\r\n\t\tSegmentId: ${12:String} #required\r\n\t\tSegmentVersion: ${13:Integer}\r\n\t\tTags: ${14:Json}\r\n\t\tTreatmentDescription: ${15:String}\r\n\t\tTreatmentName: ${16:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html\r\n\nAttributes: \r\n  CampaignId\r\n  Arn\r\n",
        "prefix": "pinpoint-campaign",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::EmailChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EmailChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tConfigurationSet: ${3:String}\r\n\t\tEnabled: ${4:Boolean}\r\n\t\tFromAddress: ${5:String} #required\r\n\t\tIdentity: ${6:String} #required\r\n\t\tRoleArn: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html",
        "prefix": "pinpoint-emailchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::EmailTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EmailTemplate\"\r\n\tProperties:\r\n\t\tDefaultSubstitutions: ${2:String}\r\n\t\tHtmlPart: ${3:String}\r\n\t\tSubject: ${4:String} #required\r\n\t\tTags: ${5:Json}\r\n\t\tTemplateDescription: ${6:String}\r\n\t\tTemplateName: ${7:String} #required\r\n\t\tTextPart: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "pinpoint-emailtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::EventStream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EventStream\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tDestinationStreamArn: ${3:String} #required\r\n\t\tRoleArn: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html",
        "prefix": "pinpoint-eventstream",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::GCMChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::GCMChannel\"\r\n\tProperties:\r\n\t\tApiKey: ${2:String} #required\r\n\t\tApplicationId: ${3:String} #required\r\n\t\tEnabled: ${4:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html",
        "prefix": "pinpoint-gcmchannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::PushTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::PushTemplate\"\r\n\tProperties:\r\n\t\tADM:\r\n\t\t\t${2:AndroidPushNotificationTemplate}\r\n\t\tAPNS:\r\n\t\t\t${3:APNSPushNotificationTemplate}\r\n\t\tBaidu:\r\n\t\t\t${4:AndroidPushNotificationTemplate}\r\n\t\tDefault:\r\n\t\t\t${5:DefaultPushNotificationTemplate}\r\n\t\tDefaultSubstitutions: ${6:String}\r\n\t\tGCM:\r\n\t\t\t${7:AndroidPushNotificationTemplate}\r\n\t\tTags: ${8:Json}\r\n\t\tTemplateDescription: ${9:String}\r\n\t\tTemplateName: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "pinpoint-pushtemplate",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::SMSChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::SMSChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tEnabled: ${3:Boolean}\r\n\t\tSenderId: ${4:String}\r\n\t\tShortCode: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html",
        "prefix": "pinpoint-smschannel",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::Segment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::Segment\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tDimensions:\r\n\t\t\t${3:SegmentDimensions}\r\n\t\tName: ${4:String} #required\r\n\t\tSegmentGroups:\r\n\t\t\t${5:SegmentGroups}\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html\r\n\nAttributes: \r\n  SegmentId\r\n  Arn\r\n",
        "prefix": "pinpoint-segment",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::SmsTemplate": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::SmsTemplate\"\r\n\tProperties:\r\n\t\tBody: ${2:String} #required\r\n\t\tDefaultSubstitutions: ${3:String}\r\n\t\tTags: ${4:Json}\r\n\t\tTemplateDescription: ${5:String}\r\n\t\tTemplateName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "pinpoint-smstemplate",
        "scope": "source.cloudformation"
    },
    "AWS::Pinpoint::VoiceChannel": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::VoiceChannel\"\r\n\tProperties:\r\n\t\tApplicationId: ${2:String} #required\r\n\t\tEnabled: ${3:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html",
        "prefix": "pinpoint-voicechannel",
        "scope": "source.cloudformation"
    },
    "AWS::PinpointEmail::ConfigurationSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::ConfigurationSet\"\r\n\tProperties:\r\n\t\tDeliveryOptions:\r\n\t\t\t${2:DeliveryOptions}\r\n\t\tName: ${3:String} #required\r\n\t\tReputationOptions:\r\n\t\t\t${4:ReputationOptions}\r\n\t\tSendingOptions:\r\n\t\t\t${5:SendingOptions}\r\n\t\tTags:\r\n\t\t\t- ${6:Tags}\r\n\t\tTrackingOptions:\r\n\t\t\t${7:TrackingOptions}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html",
        "prefix": "pinpointemail-configurationset",
        "scope": "source.cloudformation"
    },
    "AWS::PinpointEmail::ConfigurationSetEventDestination": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::ConfigurationSetEventDestination\"\r\n\tProperties:\r\n\t\tConfigurationSetName: ${2:String} #required\r\n\t\tEventDestination:\r\n\t\t\t${3:EventDestination}\r\n\t\tEventDestinationName: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html",
        "prefix": "pinpointemail-configurationseteventdestination",
        "scope": "source.cloudformation"
    },
    "AWS::PinpointEmail::DedicatedIpPool": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::DedicatedIpPool\"\r\n\tProperties:\r\n\t\tPoolName: ${2:String}\r\n\t\tTags:\r\n\t\t\t- ${3:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html",
        "prefix": "pinpointemail-dedicatedippool",
        "scope": "source.cloudformation"
    },
    "AWS::PinpointEmail::Identity": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::Identity\"\r\n\tProperties:\r\n\t\tDkimSigningEnabled: ${2:Boolean}\r\n\t\tFeedbackForwardingEnabled: ${3:Boolean}\r\n\t\tMailFromAttributes:\r\n\t\t\t${4:MailFromAttributes}\r\n\t\tName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tags}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html\r\n\nAttributes: \r\n  IdentityDNSRecordName3\r\n  IdentityDNSRecordName1\r\n  IdentityDNSRecordName2\r\n  IdentityDNSRecordValue3\r\n  IdentityDNSRecordValue2\r\n  IdentityDNSRecordValue1\r\n",
        "prefix": "pinpointemail-identity",
        "scope": "source.cloudformation"
    },
    "AWS::QLDB::Ledger": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QLDB::Ledger\"\r\n\tProperties:\r\n\t\tDeletionProtection: ${2:Boolean}\r\n\t\tName: ${3:String}\r\n\t\tPermissionsMode: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html",
        "prefix": "qldb-ledger",
        "scope": "source.cloudformation"
    },
    "AWS::QLDB::Stream": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QLDB::Stream\"\r\n\tProperties:\r\n\t\tExclusiveEndTime: ${2:String}\r\n\t\tInclusiveStartTime: ${3:String} #required\r\n\t\tKinesisConfiguration: #required\r\n\t\t\t${4:KinesisConfiguration}\r\n\t\tLedgerName: ${5:String} #required\r\n\t\tRoleArn: ${6:String} #required\r\n\t\tStreamName: ${7:String} #required\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html\r\n\nAttributes: \r\n  Arn\r\n  Id\r\n",
        "prefix": "qldb-stream",
        "scope": "source.cloudformation"
    },
    "AWS::RAM::ResourceShare": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RAM::ResourceShare\"\r\n\tProperties:\r\n\t\tAllowExternalPrincipals: ${2:Boolean}\r\n\t\tName: ${3:String} #required\r\n\t\tPrincipals:\r\n\t\t\t- ${4:String}\r\n\t\tResourceArns:\r\n\t\t\t- ${5:String}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "ram-resourceshare",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBCluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBCluster\"\r\n\tProperties:\r\n\t\tAssociatedRoles:\r\n\t\t\t- ${2:DBClusterRole}\r\n\t\tAvailabilityZones:\r\n\t\t\t- ${3:String}\r\n\t\tBacktrackWindow: ${4:Long}\r\n\t\tBackupRetentionPeriod: ${5:Integer}\r\n\t\tDBClusterIdentifier: ${6:String}\r\n\t\tDBClusterParameterGroupName: ${7:String}\r\n\t\tDBSubnetGroupName: ${8:String}\r\n\t\tDatabaseName: ${9:String}\r\n\t\tDeletionProtection: ${10:Boolean}\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- ${11:String}\r\n\t\tEnableHttpEndpoint: ${12:Boolean}\r\n\t\tEnableIAMDatabaseAuthentication: ${13:Boolean}\r\n\t\tEngine: ${14:String} #required\r\n\t\tEngineMode: ${15:String}\r\n\t\tEngineVersion: ${16:String}\r\n\t\tGlobalClusterIdentifier: ${17:String}\r\n\t\tKmsKeyId: ${18:String}\r\n\t\tMasterUserPassword: ${19:String}\r\n\t\tMasterUsername: ${20:String}\r\n\t\tPort: ${21:Integer}\r\n\t\tPreferredBackupWindow: ${22:String}\r\n\t\tPreferredMaintenanceWindow: ${23:String}\r\n\t\tReplicationSourceIdentifier: ${24:String}\r\n\t\tRestoreType: ${25:String}\r\n\t\tScalingConfiguration:\r\n\t\t\t${26:ScalingConfiguration}\r\n\t\tSnapshotIdentifier: ${27:String}\r\n\t\tSourceDBClusterIdentifier: ${28:String}\r\n\t\tSourceRegion: ${29:String}\r\n\t\tStorageEncrypted: ${30:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${31:Tag}\r\n\t\tUseLatestRestorableTime: ${32:Boolean}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${33:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html\r\n\nAttributes: \r\n  Endpoint.Address\r\n  Endpoint.Port\r\n  ReadEndpoint.Address\r\n",
        "prefix": "rds-dbcluster",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBClusterParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tFamily: ${3:String} #required\r\n\t\tParameters: ${4:Json} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html",
        "prefix": "rds-dbclusterparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBInstance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBInstance\"\r\n\tProperties:\r\n\t\tAllocatedStorage: ${2:String}\r\n\t\tAllowMajorVersionUpgrade: ${3:Boolean}\r\n\t\tAssociatedRoles:\r\n\t\t\t- ${4:DBInstanceRole}\r\n\t\tAutoMinorVersionUpgrade: ${5:Boolean}\r\n\t\tAvailabilityZone: ${6:String}\r\n\t\tBackupRetentionPeriod: ${7:Integer}\r\n\t\tCACertificateIdentifier: ${8:String}\r\n\t\tCharacterSetName: ${9:String}\r\n\t\tCopyTagsToSnapshot: ${10:Boolean}\r\n\t\tDBClusterIdentifier: ${11:String}\r\n\t\tDBInstanceClass: ${12:String} #required\r\n\t\tDBInstanceIdentifier: ${13:String}\r\n\t\tDBName: ${14:String}\r\n\t\tDBParameterGroupName: ${15:String}\r\n\t\tDBSecurityGroups:\r\n\t\t\t- ${16:String}\r\n\t\tDBSnapshotIdentifier: ${17:String}\r\n\t\tDBSubnetGroupName: ${18:String}\r\n\t\tDeleteAutomatedBackups: ${19:Boolean}\r\n\t\tDeletionProtection: ${20:Boolean}\r\n\t\tDomain: ${21:String}\r\n\t\tDomainIAMRoleName: ${22:String}\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- ${23:String}\r\n\t\tEnableIAMDatabaseAuthentication: ${24:Boolean}\r\n\t\tEnablePerformanceInsights: ${25:Boolean}\r\n\t\tEngine: ${26:String}\r\n\t\tEngineVersion: ${27:String}\r\n\t\tIops: ${28:Integer}\r\n\t\tKmsKeyId: ${29:String}\r\n\t\tLicenseModel: ${30:String}\r\n\t\tMasterUserPassword: ${31:String}\r\n\t\tMasterUsername: ${32:String}\r\n\t\tMaxAllocatedStorage: ${33:Integer}\r\n\t\tMonitoringInterval: ${34:Integer}\r\n\t\tMonitoringRoleArn: ${35:String}\r\n\t\tMultiAZ: ${36:Boolean}\r\n\t\tOptionGroupName: ${37:String}\r\n\t\tPerformanceInsightsKMSKeyId: ${38:String}\r\n\t\tPerformanceInsightsRetentionPeriod: ${39:Integer}\r\n\t\tPort: ${40:String}\r\n\t\tPreferredBackupWindow: ${41:String}\r\n\t\tPreferredMaintenanceWindow: ${42:String}\r\n\t\tProcessorFeatures:\r\n\t\t\t- ${43:ProcessorFeature}\r\n\t\tPromotionTier: ${44:Integer}\r\n\t\tPubliclyAccessible: ${45:Boolean}\r\n\t\tSourceDBInstanceIdentifier: ${46:String}\r\n\t\tSourceRegion: ${47:String}\r\n\t\tStorageEncrypted: ${48:Boolean}\r\n\t\tStorageType: ${49:String}\r\n\t\tTags:\r\n\t\t\t- ${50:Tag}\r\n\t\tTimezone: ${51:String}\r\n\t\tUseDefaultProcessorFeatures: ${52:Boolean}\r\n\t\tVPCSecurityGroups:\r\n\t\t\t- ${53:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html\r\n\nAttributes: \r\n  Endpoint.Address\r\n  Endpoint.Port\r\n",
        "prefix": "rds-dbinstance",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tFamily: ${3:String} #required\r\n\t\tParameters:\r\n\t\t\t${4:Map}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html",
        "prefix": "rds-dbparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBProxy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBProxy\"\r\n\tProperties:\r\n\t\tAuth: #required\r\n\t\t\t- ${2:AuthFormat}\r\n\t\tDBProxyName: ${3:String} #required\r\n\t\tDebugLogging: ${4:Boolean}\r\n\t\tEngineFamily: ${5:String} #required\r\n\t\tIdleClientTimeout: ${6:Integer}\r\n\t\tRequireTLS: ${7:Boolean}\r\n\t\tRoleArn: ${8:String} #required\r\n\t\tTags:\r\n\t\t\t- ${9:TagFormat}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${10:String}\r\n\t\tVpcSubnetIds: #required\r\n\t\t\t- ${11:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html\r\n\nAttributes: \r\n  DBProxyArn\r\n  Endpoint\r\n",
        "prefix": "rds-dbproxy",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBProxyTargetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBProxyTargetGroup\"\r\n\tProperties:\r\n\t\tConnectionPoolConfigurationInfo:\r\n\t\t\t${2:ConnectionPoolConfigurationInfoFormat}\r\n\t\tDBClusterIdentifiers:\r\n\t\t\t- ${3:String}\r\n\t\tDBInstanceIdentifiers:\r\n\t\t\t- ${4:String}\r\n\t\tDBProxyName: ${5:String} #required\r\n\t\tTargetGroupName: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html\r\n\nAttributes: \r\n  TargetGroupArn\r\n",
        "prefix": "rds-dbproxytargetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBSecurityGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSecurityGroup\"\r\n\tProperties:\r\n\t\tDBSecurityGroupIngress: #required\r\n\t\t\t- ${2:Ingress}\r\n\t\tEC2VpcId: ${3:String}\r\n\t\tGroupDescription: ${4:String} #required\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html",
        "prefix": "rds-dbsecuritygroup",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBSecurityGroupIngress": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCIDRIP: ${2:String}\r\n\t\tDBSecurityGroupName: ${3:String} #required\r\n\t\tEC2SecurityGroupId: ${4:String}\r\n\t\tEC2SecurityGroupName: ${5:String}\r\n\t\tEC2SecurityGroupOwnerId: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html",
        "prefix": "rds-dbsecuritygroupingress",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::DBSubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupDescription: ${2:String} #required\r\n\t\tDBSubnetGroupName: ${3:String}\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html",
        "prefix": "rds-dbsubnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::EventSubscription": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::EventSubscription\"\r\n\tProperties:\r\n\t\tEnabled: ${2:Boolean}\r\n\t\tEventCategories:\r\n\t\t\t- ${3:String}\r\n\t\tSnsTopicArn: ${4:String} #required\r\n\t\tSourceIds:\r\n\t\t\t- ${5:String}\r\n\t\tSourceType: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html",
        "prefix": "rds-eventsubscription",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::GlobalCluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::GlobalCluster\"\r\n\tProperties:\r\n\t\tDeletionProtection: ${2:Boolean}\r\n\t\tEngine: ${3:String}\r\n\t\tEngineVersion: ${4:String}\r\n\t\tGlobalClusterIdentifier: ${5:String}\r\n\t\tSourceDBClusterIdentifier: ${6:String}\r\n\t\tStorageEncrypted: ${7:Boolean}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html",
        "prefix": "rds-globalcluster",
        "scope": "source.cloudformation"
    },
    "AWS::RDS::OptionGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::OptionGroup\"\r\n\tProperties:\r\n\t\tEngineName: ${2:String} #required\r\n\t\tMajorEngineVersion: ${3:String} #required\r\n\t\tOptionConfigurations: #required\r\n\t\t\t- ${4:OptionConfiguration}\r\n\t\tOptionGroupDescription: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html",
        "prefix": "rds-optiongroup",
        "scope": "source.cloudformation"
    },
    "AWS::Redshift::Cluster": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::Cluster\"\r\n\tProperties:\r\n\t\tAllowVersionUpgrade: ${2:Boolean}\r\n\t\tAutomatedSnapshotRetentionPeriod: ${3:Integer}\r\n\t\tAvailabilityZone: ${4:String}\r\n\t\tClusterIdentifier: ${5:String}\r\n\t\tClusterParameterGroupName: ${6:String}\r\n\t\tClusterSecurityGroups:\r\n\t\t\t- ${7:String}\r\n\t\tClusterSubnetGroupName: ${8:String}\r\n\t\tClusterType: ${9:String} #required\r\n\t\tClusterVersion: ${10:String}\r\n\t\tDBName: ${11:String} #required\r\n\t\tElasticIp: ${12:String}\r\n\t\tEncrypted: ${13:Boolean}\r\n\t\tHsmClientCertificateIdentifier: ${14:String}\r\n\t\tHsmConfigurationIdentifier: ${15:String}\r\n\t\tIamRoles:\r\n\t\t\t- ${16:String}\r\n\t\tKmsKeyId: ${17:String}\r\n\t\tLoggingProperties:\r\n\t\t\t${18:LoggingProperties}\r\n\t\tMasterUserPassword: ${19:String} #required\r\n\t\tMasterUsername: ${20:String} #required\r\n\t\tNodeType: ${21:String} #required\r\n\t\tNumberOfNodes: ${22:Integer}\r\n\t\tOwnerAccount: ${23:String}\r\n\t\tPort: ${24:Integer}\r\n\t\tPreferredMaintenanceWindow: ${25:String}\r\n\t\tPubliclyAccessible: ${26:Boolean}\r\n\t\tSnapshotClusterIdentifier: ${27:String}\r\n\t\tSnapshotIdentifier: ${28:String}\r\n\t\tTags:\r\n\t\t\t- ${29:Tag}\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- ${30:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html\r\n\nAttributes: \r\n  Endpoint.Address\r\n  Endpoint.Port\r\n",
        "prefix": "redshift-cluster",
        "scope": "source.cloudformation"
    },
    "AWS::Redshift::ClusterParameterGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tParameterGroupFamily: ${3:String} #required\r\n\t\tParameters:\r\n\t\t\t- ${4:Parameter}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
        "prefix": "redshift-clusterparametergroup",
        "scope": "source.cloudformation"
    },
    "AWS::Redshift::ClusterSecurityGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSecurityGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html",
        "prefix": "redshift-clustersecuritygroup",
        "scope": "source.cloudformation"
    },
    "AWS::Redshift::ClusterSecurityGroupIngress": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCIDRIP: ${2:String}\r\n\t\tClusterSecurityGroupName: ${3:String} #required\r\n\t\tEC2SecurityGroupName: ${4:String}\r\n\t\tEC2SecurityGroupOwnerId: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html",
        "prefix": "redshift-clustersecuritygroupingress",
        "scope": "source.cloudformation"
    },
    "AWS::Redshift::ClusterSubnetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSubnetGroup\"\r\n\tProperties:\r\n\t\tDescription: ${2:String} #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html",
        "prefix": "redshift-clustersubnetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::ResourceGroups::Group": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ResourceGroups::Group\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tResourceQuery:\r\n\t\t\t${4:ResourceQuery}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "resourcegroups-group",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::Fleet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::Fleet\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tTags: ${3:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "robomaker-fleet",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::Robot": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::Robot\"\r\n\tProperties:\r\n\t\tArchitecture: ${2:String} #required\r\n\t\tFleet: ${3:String}\r\n\t\tGreengrassGroupId: ${4:String} #required\r\n\t\tName: ${5:String}\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html",
        "prefix": "robomaker-robot",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::RobotApplication": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::RobotApplication\"\r\n\tProperties:\r\n\t\tCurrentRevisionId: ${2:String}\r\n\t\tName: ${3:String}\r\n\t\tRobotSoftwareSuite: #required\r\n\t\t\t${4:RobotSoftwareSuite}\r\n\t\tSources: #required\r\n\t\t\t- ${5:SourceConfig}\r\n\t\tTags: ${6:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html\r\n\nAttributes: \r\n  CurrentRevisionId\r\n  Arn\r\n",
        "prefix": "robomaker-robotapplication",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::RobotApplicationVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::RobotApplicationVersion\"\r\n\tProperties:\r\n\t\tApplication: ${2:String} #required\r\n\t\tCurrentRevisionId: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html",
        "prefix": "robomaker-robotapplicationversion",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::SimulationApplication": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::SimulationApplication\"\r\n\tProperties:\r\n\t\tCurrentRevisionId: ${2:String}\r\n\t\tName: ${3:String}\r\n\t\tRenderingEngine: #required\r\n\t\t\t${4:RenderingEngine}\r\n\t\tRobotSoftwareSuite: #required\r\n\t\t\t${5:RobotSoftwareSuite}\r\n\t\tSimulationSoftwareSuite: #required\r\n\t\t\t${6:SimulationSoftwareSuite}\r\n\t\tSources: #required\r\n\t\t\t- ${7:SourceConfig}\r\n\t\tTags: ${8:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html\r\n\nAttributes: \r\n  CurrentRevisionId\r\n  Arn\r\n",
        "prefix": "robomaker-simulationapplication",
        "scope": "source.cloudformation"
    },
    "AWS::RoboMaker::SimulationApplicationVersion": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::SimulationApplicationVersion\"\r\n\tProperties:\r\n\t\tApplication: ${2:String} #required\r\n\t\tCurrentRevisionId: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html",
        "prefix": "robomaker-simulationapplicationversion",
        "scope": "source.cloudformation"
    },
    "AWS::Route53::HealthCheck": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::HealthCheck\"\r\n\tProperties:\r\n\t\tHealthCheckConfig: ${2:Json} #required\r\n\t\tHealthCheckTags:\r\n\t\t\t- ${3:HealthCheckTag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html\r\n\nAttributes: \r\n  HealthCheckId\r\n",
        "prefix": "route53-healthcheck",
        "scope": "source.cloudformation"
    },
    "AWS::Route53::HostedZone": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::HostedZone\"\r\n\tProperties:\r\n\t\tHostedZoneConfig:\r\n\t\t\t${2:HostedZoneConfig}\r\n\t\tHostedZoneTags:\r\n\t\t\t- ${3:HostedZoneTag}\r\n\t\tName: ${4:String} #required\r\n\t\tQueryLoggingConfig:\r\n\t\t\t${5:QueryLoggingConfig}\r\n\t\tVPCs:\r\n\t\t\t- ${6:VPC}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html\r\n\nAttributes: \r\n  Id\r\n  NameServers\r\n",
        "prefix": "route53-hostedzone",
        "scope": "source.cloudformation"
    },
    "AWS::Route53::RecordSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::RecordSet\"\r\n\tProperties:\r\n\t\tAliasTarget:\r\n\t\t\t${2:AliasTarget}\r\n\t\tComment: ${3:String}\r\n\t\tFailover: ${4:String}\r\n\t\tGeoLocation:\r\n\t\t\t${5:GeoLocation}\r\n\t\tHealthCheckId: ${6:String}\r\n\t\tHostedZoneId: ${7:String}\r\n\t\tHostedZoneName: ${8:String}\r\n\t\tMultiValueAnswer: ${9:Boolean}\r\n\t\tName: ${10:String} #required\r\n\t\tRegion: ${11:String}\r\n\t\tResourceRecords:\r\n\t\t\t- ${12:String}\r\n\t\tSetIdentifier: ${13:String}\r\n\t\tTTL: ${14:String}\r\n\t\tType: ${15:String} #required\r\n\t\tWeight: ${16:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html",
        "prefix": "route53-recordset",
        "scope": "source.cloudformation"
    },
    "AWS::Route53::RecordSetGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::RecordSetGroup\"\r\n\tProperties:\r\n\t\tComment: ${2:String}\r\n\t\tHostedZoneId: ${3:String}\r\n\t\tHostedZoneName: ${4:String}\r\n\t\tRecordSets:\r\n\t\t\t- ${5:RecordSet}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html",
        "prefix": "route53-recordsetgroup",
        "scope": "source.cloudformation"
    },
    "AWS::Route53Resolver::ResolverEndpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverEndpoint\"\r\n\tProperties:\r\n\t\tDirection: ${2:String} #required\r\n\t\tIpAddresses: #required\r\n\t\t\t- ${3:IpAddressRequest}\r\n\t\tName: ${4:String}\r\n\t\tSecurityGroupIds: #required\r\n\t\t\t- ${5:String}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html\r\n\nAttributes: \r\n  ResolverEndpointId\r\n  IpAddressCount\r\n  Arn\r\n  Direction\r\n  HostVPCId\r\n  Name\r\n",
        "prefix": "route53resolver-resolverendpoint",
        "scope": "source.cloudformation"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverQueryLoggingConfig\"\r\n\tProperties:\r\n\t\tDestinationArn: ${2:String}\r\n\t\tName: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html\r\n\nAttributes: \r\n  Id\r\n  OwnerId\r\n  Status\r\n  ShareStatus\r\n  AssociationCount\r\n  Arn\r\n  CreatorRequestId\r\n  CreationTime\r\n",
        "prefix": "route53resolver-resolverqueryloggingconfig",
        "scope": "source.cloudformation"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\"\r\n\tProperties:\r\n\t\tResolverQueryLogConfigId: ${2:String}\r\n\t\tResourceId: ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html\r\n\nAttributes: \r\n  Id\r\n  Status\r\n  Error\r\n  ErrorMessage\r\n  CreationTime\r\n",
        "prefix": "route53resolver-resolverqueryloggingconfigassociation",
        "scope": "source.cloudformation"
    },
    "AWS::Route53Resolver::ResolverRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverRule\"\r\n\tProperties:\r\n\t\tDomainName: ${2:String} #required\r\n\t\tName: ${3:String}\r\n\t\tResolverEndpointId: ${4:String}\r\n\t\tRuleType: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n\t\tTargetIps:\r\n\t\t\t- ${7:TargetAddress}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html\r\n\nAttributes: \r\n  ResolverEndpointId\r\n  DomainName\r\n  ResolverRuleId\r\n  Arn\r\n  TargetIps\r\n  Name\r\n",
        "prefix": "route53resolver-resolverrule",
        "scope": "source.cloudformation"
    },
    "AWS::Route53Resolver::ResolverRuleAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverRuleAssociation\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n\t\tResolverRuleId: ${3:String} #required\r\n\t\tVPCId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html\r\n\nAttributes: \r\n  VPCId\r\n  ResolverRuleId\r\n  ResolverRuleAssociationId\r\n  Name\r\n",
        "prefix": "route53resolver-resolverruleassociation",
        "scope": "source.cloudformation"
    },
    "AWS::S3::AccessPoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::AccessPoint\"\r\n\tProperties:\r\n\t\tBucket: ${2:String} #required\r\n\t\tCreationDate: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tNetworkOrigin: ${5:String}\r\n\t\tPolicy: ${6:Json}\r\n\t\tPolicyStatus: ${7:Json}\r\n\t\tPublicAccessBlockConfiguration:\r\n\t\t\t${8:PublicAccessBlockConfiguration}\r\n\t\tVpcConfiguration:\r\n\t\t\t${9:VpcConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html",
        "prefix": "s3-accesspoint",
        "scope": "source.cloudformation"
    },
    "AWS::S3::Bucket": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::Bucket\"\r\n\tProperties:\r\n\t\tAccelerateConfiguration:\r\n\t\t\t${2:AccelerateConfiguration}\r\n\t\tAccessControl: ${3:String}\r\n\t\tAnalyticsConfigurations:\r\n\t\t\t- ${4:AnalyticsConfiguration}\r\n\t\tBucketEncryption:\r\n\t\t\t${5:BucketEncryption}\r\n\t\tBucketName: ${6:String}\r\n\t\tCorsConfiguration:\r\n\t\t\t${7:CorsConfiguration}\r\n\t\tIntelligentTieringConfigurations:\r\n\t\t\t- ${8:IntelligentTieringConfiguration}\r\n\t\tInventoryConfigurations:\r\n\t\t\t- ${9:InventoryConfiguration}\r\n\t\tLifecycleConfiguration:\r\n\t\t\t${10:LifecycleConfiguration}\r\n\t\tLoggingConfiguration:\r\n\t\t\t${11:LoggingConfiguration}\r\n\t\tMetricsConfigurations:\r\n\t\t\t- ${12:MetricsConfiguration}\r\n\t\tNotificationConfiguration:\r\n\t\t\t${13:NotificationConfiguration}\r\n\t\tObjectLockConfiguration:\r\n\t\t\t${14:ObjectLockConfiguration}\r\n\t\tObjectLockEnabled: ${15:Boolean}\r\n\t\tOwnershipControls:\r\n\t\t\t${16:OwnershipControls}\r\n\t\tPublicAccessBlockConfiguration:\r\n\t\t\t${17:PublicAccessBlockConfiguration}\r\n\t\tReplicationConfiguration:\r\n\t\t\t${18:ReplicationConfiguration}\r\n\t\tTags:\r\n\t\t\t- ${19:Tag}\r\n\t\tVersioningConfiguration:\r\n\t\t\t${20:VersioningConfiguration}\r\n\t\tWebsiteConfiguration:\r\n\t\t\t${21:WebsiteConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html\r\n\nAttributes: \r\n  Arn\r\n  DomainName\r\n  DualStackDomainName\r\n  RegionalDomainName\r\n  WebsiteURL\r\n",
        "prefix": "s3-bucket",
        "scope": "source.cloudformation"
    },
    "AWS::S3::BucketPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::BucketPolicy\"\r\n\tProperties:\r\n\t\tBucket: ${2:String} #required\r\n\t\tPolicyDocument: ${3:Json} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
        "prefix": "s3-bucketpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::S3::StorageLens": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::StorageLens\"\r\n\tProperties:\r\n\t\tStorageLensConfiguration: #required\r\n\t\t\t${2:StorageLensConfiguration}\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html\r\n\nAttributes: \r\n  StorageLensArn\r\n",
        "prefix": "s3-storagelens",
        "scope": "source.cloudformation"
    },
    "AWS::SDB::Domain": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SDB::Domain\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html",
        "prefix": "sdb-domain",
        "scope": "source.cloudformation"
    },
    "AWS::SES::ConfigurationSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ConfigurationSet\"\r\n\tProperties:\r\n\t\tName: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html",
        "prefix": "ses-configurationset",
        "scope": "source.cloudformation"
    },
    "AWS::SES::ConfigurationSetEventDestination": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ConfigurationSetEventDestination\"\r\n\tProperties:\r\n\t\tConfigurationSetName: ${2:String} #required\r\n\t\tEventDestination: #required\r\n\t\t\t${3:EventDestination}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html",
        "prefix": "ses-configurationseteventdestination",
        "scope": "source.cloudformation"
    },
    "AWS::SES::ReceiptFilter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ReceiptFilter\"\r\n\tProperties:\r\n\t\tFilter: #required\r\n\t\t\t${2:Filter}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptfilter.html",
        "prefix": "ses-receiptfilter",
        "scope": "source.cloudformation"
    },
    "AWS::SES::ReceiptRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ReceiptRule\"\r\n\tProperties:\r\n\t\tAfter: ${2:String}\r\n\t\tRule: #required\r\n\t\t\t${3:Rule}\r\n\t\tRuleSetName: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html",
        "prefix": "ses-receiptrule",
        "scope": "source.cloudformation"
    },
    "AWS::SES::ReceiptRuleSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ReceiptRuleSet\"\r\n\tProperties:\r\n\t\tRuleSetName: ${2:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptruleset.html",
        "prefix": "ses-receiptruleset",
        "scope": "source.cloudformation"
    },
    "AWS::SES::Template": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::Template\"\r\n\tProperties:\r\n\t\tTemplate:\r\n\t\t\t${2:Template}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-template.html",
        "prefix": "ses-template",
        "scope": "source.cloudformation"
    },
    "AWS::SNS::Subscription": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::Subscription\"\r\n\tProperties:\r\n\t\tDeliveryPolicy: ${2:Json}\r\n\t\tEndpoint: ${3:String}\r\n\t\tFilterPolicy: ${4:Json}\r\n\t\tProtocol: ${5:String} #required\r\n\t\tRawMessageDelivery: ${6:Boolean}\r\n\t\tRedrivePolicy: ${7:Json}\r\n\t\tRegion: ${8:String}\r\n\t\tSubscriptionRoleArn: ${9:String}\r\n\t\tTopicArn: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html",
        "prefix": "sns-subscription",
        "scope": "source.cloudformation"
    },
    "AWS::SNS::Topic": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::Topic\"\r\n\tProperties:\r\n\t\tContentBasedDeduplication: ${2:Boolean}\r\n\t\tDisplayName: ${3:String}\r\n\t\tFifoTopic: ${4:Boolean}\r\n\t\tKmsMasterKeyId: ${5:String}\r\n\t\tSubscription:\r\n\t\t\t- ${6:Subscription}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tTopicName: ${8:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html\r\n\nAttributes: \r\n  TopicName\r\n",
        "prefix": "sns-topic",
        "scope": "source.cloudformation"
    },
    "AWS::SNS::TopicPolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::TopicPolicy\"\r\n\tProperties:\r\n\t\tPolicyDocument: ${2:Json} #required\r\n\t\tTopics: #required\r\n\t\t\t- ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html",
        "prefix": "sns-topicpolicy",
        "scope": "source.cloudformation"
    },
    "AWS::SQS::Queue": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SQS::Queue\"\r\n\tProperties:\r\n\t\tContentBasedDeduplication: ${2:Boolean}\r\n\t\tDelaySeconds: ${3:Integer}\r\n\t\tFifoQueue: ${4:Boolean}\r\n\t\tKmsDataKeyReusePeriodSeconds: ${5:Integer}\r\n\t\tKmsMasterKeyId: ${6:String}\r\n\t\tMaximumMessageSize: ${7:Integer}\r\n\t\tMessageRetentionPeriod: ${8:Integer}\r\n\t\tQueueName: ${9:String}\r\n\t\tReceiveMessageWaitTimeSeconds: ${10:Integer}\r\n\t\tRedrivePolicy: ${11:Json}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n\t\tVisibilityTimeout: ${13:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html\r\n\nAttributes: \r\n  Arn\r\n  QueueName\r\n",
        "prefix": "sqs-queue",
        "scope": "source.cloudformation"
    },
    "AWS::SQS::QueuePolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SQS::QueuePolicy\"\r\n\tProperties:\r\n\t\tPolicyDocument: ${2:Json} #required\r\n\t\tQueues: #required\r\n\t\t\t- ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html",
        "prefix": "sqs-queuepolicy",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::Association": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Association\"\r\n\tProperties:\r\n\t\tApplyOnlyAtCronInterval: ${2:Boolean}\r\n\t\tAssociationName: ${3:String}\r\n\t\tAutomationTargetParameterName: ${4:String}\r\n\t\tComplianceSeverity: ${5:String}\r\n\t\tDocumentVersion: ${6:String}\r\n\t\tInstanceId: ${7:String}\r\n\t\tMaxConcurrency: ${8:String}\r\n\t\tMaxErrors: ${9:String}\r\n\t\tName: ${10:String} #required\r\n\t\tOutputLocation:\r\n\t\t\t${11:InstanceAssociationOutputLocation}\r\n\t\tParameters:\r\n\t\t\t${12:Map}\r\n\t\tScheduleExpression: ${13:String}\r\n\t\tSyncCompliance: ${14:String}\r\n\t\tTargets:\r\n\t\t\t- ${15:Target}\r\n\t\tWaitForSuccessTimeoutSeconds: ${16:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html\r\n\nAttributes: \r\n  AssociationId\r\n",
        "prefix": "ssm-association",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::Document": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Document\"\r\n\tProperties:\r\n\t\tContent: ${2:Json} #required\r\n\t\tDocumentType: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html",
        "prefix": "ssm-document",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::MaintenanceWindow": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindow\"\r\n\tProperties:\r\n\t\tAllowUnassociatedTargets: ${2:Boolean} #required\r\n\t\tCutoff: ${3:Integer} #required\r\n\t\tDescription: ${4:String}\r\n\t\tDuration: ${5:Integer} #required\r\n\t\tEndDate: ${6:String}\r\n\t\tName: ${7:String} #required\r\n\t\tSchedule: ${8:String} #required\r\n\t\tScheduleOffset: ${9:Integer}\r\n\t\tScheduleTimezone: ${10:String}\r\n\t\tStartDate: ${11:String}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html",
        "prefix": "ssm-maintenancewindow",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::MaintenanceWindowTarget": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindowTarget\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String}\r\n\t\tOwnerInformation: ${4:String}\r\n\t\tResourceType: ${5:String} #required\r\n\t\tTargets: #required\r\n\t\t\t- ${6:Targets}\r\n\t\tWindowId: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html",
        "prefix": "ssm-maintenancewindowtarget",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::MaintenanceWindowTask": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindowTask\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tLoggingInfo:\r\n\t\t\t${3:LoggingInfo}\r\n\t\tMaxConcurrency: ${4:String} #required\r\n\t\tMaxErrors: ${5:String} #required\r\n\t\tName: ${6:String}\r\n\t\tPriority: ${7:Integer} #required\r\n\t\tServiceRoleArn: ${8:String}\r\n\t\tTargets: #required\r\n\t\t\t- ${9:Target}\r\n\t\tTaskArn: ${10:String} #required\r\n\t\tTaskInvocationParameters:\r\n\t\t\t${11:TaskInvocationParameters}\r\n\t\tTaskParameters: ${12:Json}\r\n\t\tTaskType: ${13:String} #required\r\n\t\tWindowId: ${14:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html",
        "prefix": "ssm-maintenancewindowtask",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::Parameter": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Parameter\"\r\n\tProperties:\r\n\t\tAllowedPattern: ${2:String}\r\n\t\tDataType: ${3:String}\r\n\t\tDescription: ${4:String}\r\n\t\tName: ${5:String}\r\n\t\tPolicies: ${6:String}\r\n\t\tTags: ${7:Json}\r\n\t\tTier: ${8:String}\r\n\t\tType: ${9:String} #required\r\n\t\tValue: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html\r\n\nAttributes: \r\n  Type\r\n  Value\r\n",
        "prefix": "ssm-parameter",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::PatchBaseline": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::PatchBaseline\"\r\n\tProperties:\r\n\t\tApprovalRules:\r\n\t\t\t${2:RuleGroup}\r\n\t\tApprovedPatches:\r\n\t\t\t- ${3:String}\r\n\t\tApprovedPatchesComplianceLevel: ${4:String}\r\n\t\tApprovedPatchesEnableNonSecurity: ${5:Boolean}\r\n\t\tDescription: ${6:String}\r\n\t\tGlobalFilters:\r\n\t\t\t${7:PatchFilterGroup}\r\n\t\tName: ${8:String} #required\r\n\t\tOperatingSystem: ${9:String}\r\n\t\tPatchGroups:\r\n\t\t\t- ${10:String}\r\n\t\tRejectedPatches:\r\n\t\t\t- ${11:String}\r\n\t\tRejectedPatchesAction: ${12:String}\r\n\t\tSources:\r\n\t\t\t- ${13:PatchSource}\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html",
        "prefix": "ssm-patchbaseline",
        "scope": "source.cloudformation"
    },
    "AWS::SSM::ResourceDataSync": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::ResourceDataSync\"\r\n\tProperties:\r\n\t\tBucketName: ${2:String}\r\n\t\tBucketPrefix: ${3:String}\r\n\t\tBucketRegion: ${4:String}\r\n\t\tKMSKeyArn: ${5:String}\r\n\t\tS3Destination:\r\n\t\t\t${6:S3Destination}\r\n\t\tSyncFormat: ${7:String}\r\n\t\tSyncName: ${8:String} #required\r\n\t\tSyncSource:\r\n\t\t\t${9:SyncSource}\r\n\t\tSyncType: ${10:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html",
        "prefix": "ssm-resourcedatasync",
        "scope": "source.cloudformation"
    },
    "AWS::SSO::Assignment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSO::Assignment\"\r\n\tProperties:\r\n\t\tInstanceArn: ${2:String} #required\r\n\t\tPermissionSetArn: ${3:String} #required\r\n\t\tPrincipalId: ${4:String} #required\r\n\t\tPrincipalType: ${5:String} #required\r\n\t\tTargetId: ${6:String} #required\r\n\t\tTargetType: ${7:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html",
        "prefix": "sso-assignment",
        "scope": "source.cloudformation"
    },
    "AWS::SSO::PermissionSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSO::PermissionSet\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tInlinePolicy: ${3:String}\r\n\t\tInstanceArn: ${4:String} #required\r\n\t\tManagedPolicies:\r\n\t\t\t- ${5:String}\r\n\t\tName: ${6:String} #required\r\n\t\tRelayStateType: ${7:String}\r\n\t\tSessionDuration: ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html\r\n\nAttributes: \r\n  PermissionSetArn\r\n",
        "prefix": "sso-permissionset",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::CodeRepository": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::CodeRepository\"\r\n\tProperties:\r\n\t\tCodeRepositoryName: ${2:String}\r\n\t\tGitConfig: #required\r\n\t\t\t${3:GitConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html\r\n\nAttributes: \r\n  CodeRepositoryName\r\n",
        "prefix": "sagemaker-coderepository",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::Endpoint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Endpoint\"\r\n\tProperties:\r\n\t\tEndpointConfigName: ${2:String} #required\r\n\t\tEndpointName: ${3:String}\r\n\t\tExcludeRetainedVariantProperties:\r\n\t\t\t- ${4:VariantProperty}\r\n\t\tRetainAllVariantProperties: ${5:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html\r\n\nAttributes: \r\n  EndpointName\r\n",
        "prefix": "sagemaker-endpoint",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::EndpointConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::EndpointConfig\"\r\n\tProperties:\r\n\t\tDataCaptureConfig:\r\n\t\t\t${2:DataCaptureConfig}\r\n\t\tEndpointConfigName: ${3:String}\r\n\t\tKmsKeyId: ${4:String}\r\n\t\tProductionVariants: #required\r\n\t\t\t- ${5:ProductionVariant}\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html\r\n\nAttributes: \r\n  EndpointConfigName\r\n",
        "prefix": "sagemaker-endpointconfig",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::Model": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Model\"\r\n\tProperties:\r\n\t\tContainers:\r\n\t\t\t- ${2:ContainerDefinition}\r\n\t\tEnableNetworkIsolation: ${3:Boolean}\r\n\t\tExecutionRoleArn: ${4:String} #required\r\n\t\tModelName: ${5:String}\r\n\t\tPrimaryContainer:\r\n\t\t\t${6:ContainerDefinition}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tVpcConfig:\r\n\t\t\t${8:VpcConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html\r\n\nAttributes: \r\n  ModelName\r\n",
        "prefix": "sagemaker-model",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::MonitoringSchedule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::MonitoringSchedule\"\r\n\tProperties:\r\n\t\tEndpointName: ${2:String}\r\n\t\tFailureReason: ${3:String}\r\n\t\tLastMonitoringExecutionSummary:\r\n\t\t\t${4:MonitoringExecutionSummary}\r\n\t\tMonitoringScheduleArn: ${5:String}\r\n\t\tMonitoringScheduleConfig: #required\r\n\t\t\t${6:MonitoringScheduleConfig}\r\n\t\tMonitoringScheduleName: ${7:String} #required\r\n\t\tMonitoringScheduleStatus: ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html\r\n\nAttributes: \r\n  CreationTime\r\n  LastModifiedTime\r\n",
        "prefix": "sagemaker-monitoringschedule",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::NotebookInstance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::NotebookInstance\"\r\n\tProperties:\r\n\t\tAcceleratorTypes:\r\n\t\t\t- ${2:String}\r\n\t\tAdditionalCodeRepositories:\r\n\t\t\t- ${3:String}\r\n\t\tDefaultCodeRepository: ${4:String}\r\n\t\tDirectInternetAccess: ${5:String}\r\n\t\tInstanceType: ${6:String} #required\r\n\t\tKmsKeyId: ${7:String}\r\n\t\tLifecycleConfigName: ${8:String}\r\n\t\tNotebookInstanceName: ${9:String}\r\n\t\tRoleArn: ${10:String} #required\r\n\t\tRootAccess: ${11:String}\r\n\t\tSecurityGroupIds:\r\n\t\t\t- ${12:String}\r\n\t\tSubnetId: ${13:String}\r\n\t\tTags:\r\n\t\t\t- ${14:Tag}\r\n\t\tVolumeSizeInGB: ${15:Integer}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html\r\n\nAttributes: \r\n  NotebookInstanceName\r\n",
        "prefix": "sagemaker-notebookinstance",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::NotebookInstanceLifecycleConfig\"\r\n\tProperties:\r\n\t\tNotebookInstanceLifecycleConfigName: ${2:String}\r\n\t\tOnCreate:\r\n\t\t\t- ${3:NotebookInstanceLifecycleHook}\r\n\t\tOnStart:\r\n\t\t\t- ${4:NotebookInstanceLifecycleHook}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html\r\n\nAttributes: \r\n  NotebookInstanceLifecycleConfigName\r\n",
        "prefix": "sagemaker-notebookinstancelifecycleconfig",
        "scope": "source.cloudformation"
    },
    "AWS::SageMaker::Workteam": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Workteam\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tMemberDefinitions:\r\n\t\t\t- ${3:MemberDefinition}\r\n\t\tNotificationConfiguration:\r\n\t\t\t${4:NotificationConfiguration}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tWorkteamName: ${6:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html\r\n\nAttributes: \r\n  WorkteamName\r\n",
        "prefix": "sagemaker-workteam",
        "scope": "source.cloudformation"
    },
    "AWS::SecretsManager::ResourcePolicy": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::ResourcePolicy\"\r\n\tProperties:\r\n\t\tBlockPublicPolicy: ${2:Boolean}\r\n\t\tResourcePolicy: ${3:Json} #required\r\n\t\tSecretId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
        "prefix": "secretsmanager-resourcepolicy",
        "scope": "source.cloudformation"
    },
    "AWS::SecretsManager::RotationSchedule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::RotationSchedule\"\r\n\tProperties:\r\n\t\tHostedRotationLambda:\r\n\t\t\t${2:HostedRotationLambda}\r\n\t\tRotationLambdaARN: ${3:String}\r\n\t\tRotationRules:\r\n\t\t\t${4:RotationRules}\r\n\t\tSecretId: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
        "prefix": "secretsmanager-rotationschedule",
        "scope": "source.cloudformation"
    },
    "AWS::SecretsManager::Secret": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::Secret\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tGenerateSecretString:\r\n\t\t\t${3:GenerateSecretString}\r\n\t\tKmsKeyId: ${4:String}\r\n\t\tName: ${5:String}\r\n\t\tSecretString: ${6:String}\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
        "prefix": "secretsmanager-secret",
        "scope": "source.cloudformation"
    },
    "AWS::SecretsManager::SecretTargetAttachment": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::SecretTargetAttachment\"\r\n\tProperties:\r\n\t\tSecretId: ${2:String} #required\r\n\t\tTargetId: ${3:String} #required\r\n\t\tTargetType: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
        "prefix": "secretsmanager-secrettargetattachment",
        "scope": "source.cloudformation"
    },
    "AWS::SecurityHub::Hub": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecurityHub::Hub\"\r\n\tProperties:\r\n\t\tTags: ${2:Json}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html",
        "prefix": "securityhub-hub",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::AcceptedPortfolioShare": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::AcceptedPortfolioShare\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tPortfolioId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html",
        "prefix": "servicecatalog-acceptedportfolioshare",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::CloudFormationProduct": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::CloudFormationProduct\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tDistributor: ${4:String}\r\n\t\tName: ${5:String} #required\r\n\t\tOwner: ${6:String} #required\r\n\t\tProvisioningArtifactParameters: #required\r\n\t\t\t- ${7:ProvisioningArtifactProperties}\r\n\t\tReplaceProvisioningArtifacts: ${8:Boolean}\r\n\t\tSupportDescription: ${9:String}\r\n\t\tSupportEmail: ${10:String}\r\n\t\tSupportUrl: ${11:String}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html\r\n\nAttributes: \r\n  ProductName\r\n  ProvisioningArtifactIds\r\n  ProvisioningArtifactNames\r\n",
        "prefix": "servicecatalog-cloudformationproduct",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::CloudFormationProvisionedProduct\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tNotificationArns:\r\n\t\t\t- ${3:String}\r\n\t\tPathId: ${4:String}\r\n\t\tPathName: ${5:String}\r\n\t\tProductId: ${6:String}\r\n\t\tProductName: ${7:String}\r\n\t\tProvisionedProductName: ${8:String}\r\n\t\tProvisioningArtifactId: ${9:String}\r\n\t\tProvisioningArtifactName: ${10:String}\r\n\t\tProvisioningParameters:\r\n\t\t\t- ${11:ProvisioningParameter}\r\n\t\tProvisioningPreferences:\r\n\t\t\t${12:ProvisioningPreferences}\r\n\t\tTags:\r\n\t\t\t- ${13:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html\r\n\nAttributes: \r\n  ProvisionedProductId\r\n  RecordId\r\n  CloudformationStackArn\r\n  Outputs\r\n",
        "prefix": "servicecatalog-cloudformationprovisionedproduct",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::LaunchNotificationConstraint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchNotificationConstraint\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tNotificationArns: #required\r\n\t\t\t- ${4:String}\r\n\t\tPortfolioId: ${5:String} #required\r\n\t\tProductId: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html",
        "prefix": "servicecatalog-launchnotificationconstraint",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::LaunchRoleConstraint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchRoleConstraint\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tLocalRoleName: ${4:String}\r\n\t\tPortfolioId: ${5:String} #required\r\n\t\tProductId: ${6:String} #required\r\n\t\tRoleArn: ${7:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html",
        "prefix": "servicecatalog-launchroleconstraint",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::LaunchTemplateConstraint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchTemplateConstraint\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tPortfolioId: ${4:String} #required\r\n\t\tProductId: ${5:String} #required\r\n\t\tRules: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html",
        "prefix": "servicecatalog-launchtemplateconstraint",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::Portfolio": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::Portfolio\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tDisplayName: ${4:String} #required\r\n\t\tProviderName: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html\r\n\nAttributes: \r\n  PortfolioName\r\n",
        "prefix": "servicecatalog-portfolio",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tPortfolioId: ${3:String} #required\r\n\t\tPrincipalARN: ${4:String} #required\r\n\t\tPrincipalType: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html",
        "prefix": "servicecatalog-portfolioprincipalassociation",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::PortfolioProductAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioProductAssociation\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tPortfolioId: ${3:String} #required\r\n\t\tProductId: ${4:String} #required\r\n\t\tSourcePortfolioId: ${5:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html",
        "prefix": "servicecatalog-portfolioproductassociation",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::PortfolioShare": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioShare\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tAccountId: ${3:String} #required\r\n\t\tPortfolioId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html",
        "prefix": "servicecatalog-portfolioshare",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::ResourceUpdateConstraint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::ResourceUpdateConstraint\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tPortfolioId: ${4:String} #required\r\n\t\tProductId: ${5:String} #required\r\n\t\tTagUpdateOnProvisionedProduct: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html",
        "prefix": "servicecatalog-resourceupdateconstraint",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::StackSetConstraint": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::StackSetConstraint\"\r\n\tProperties:\r\n\t\tAcceptLanguage: ${2:String}\r\n\t\tAccountList: #required\r\n\t\t\t- ${3:String}\r\n\t\tAdminRole: ${4:String} #required\r\n\t\tDescription: ${5:String} #required\r\n\t\tExecutionRole: ${6:String} #required\r\n\t\tPortfolioId: ${7:String} #required\r\n\t\tProductId: ${8:String} #required\r\n\t\tRegionList: #required\r\n\t\t\t- ${9:String}\r\n\t\tStackInstanceControl: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html",
        "prefix": "servicecatalog-stacksetconstraint",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::TagOption": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::TagOption\"\r\n\tProperties:\r\n\t\tActive: ${2:Boolean}\r\n\t\tKey: ${3:String} #required\r\n\t\tValue: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html",
        "prefix": "servicecatalog-tagoption",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceCatalog::TagOptionAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::TagOptionAssociation\"\r\n\tProperties:\r\n\t\tResourceId: ${2:String} #required\r\n\t\tTagOptionId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html",
        "prefix": "servicecatalog-tagoptionassociation",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceDiscovery::HttpNamespace": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::HttpNamespace\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "servicediscovery-httpnamespace",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceDiscovery::Instance": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::Instance\"\r\n\tProperties:\r\n\t\tInstanceAttributes: ${2:Json} #required\r\n\t\tInstanceId: ${3:String}\r\n\t\tServiceId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html",
        "prefix": "servicediscovery-instance",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceDiscovery::PrivateDnsNamespace": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::PrivateDnsNamespace\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n\t\tVpc: ${5:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "servicediscovery-privatednsnamespace",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceDiscovery::PublicDnsNamespace": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::PublicDnsNamespace\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String} #required\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n",
        "prefix": "servicediscovery-publicdnsnamespace",
        "scope": "source.cloudformation"
    },
    "AWS::ServiceDiscovery::Service": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::Service\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tDnsConfig:\r\n\t\t\t${3:DnsConfig}\r\n\t\tHealthCheckConfig:\r\n\t\t\t${4:HealthCheckConfig}\r\n\t\tHealthCheckCustomConfig:\r\n\t\t\t${5:HealthCheckCustomConfig}\r\n\t\tName: ${6:String}\r\n\t\tNamespaceId: ${7:String}\r\n\t\tTags:\r\n\t\t\t- ${8:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html\r\n\nAttributes: \r\n  Id\r\n  Arn\r\n  Name\r\n",
        "prefix": "servicediscovery-service",
        "scope": "source.cloudformation"
    },
    "AWS::Signer::ProfilePermission": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Signer::ProfilePermission\"\r\n\tProperties:\r\n\t\tAction: ${2:String} #required\r\n\t\tPrincipal: ${3:String} #required\r\n\t\tProfileName: ${4:String} #required\r\n\t\tProfileVersion: ${5:String}\r\n\t\tStatementId: ${6:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html",
        "prefix": "signer-profilepermission",
        "scope": "source.cloudformation"
    },
    "AWS::Signer::SigningProfile": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Signer::SigningProfile\"\r\n\tProperties:\r\n\t\tPlatformId: ${2:String} #required\r\n\t\tSignatureValidityPeriod:\r\n\t\t\t${3:SignatureValidityPeriod}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html\r\n\nAttributes: \r\n  ProfileName\r\n  ProfileVersion\r\n  Arn\r\n  ProfileVersionArn\r\n",
        "prefix": "signer-signingprofile",
        "scope": "source.cloudformation"
    },
    "AWS::StepFunctions::Activity": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::StepFunctions::Activity\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tTags:\r\n\t\t\t- ${3:TagsEntry}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html\r\n\nAttributes: \r\n  Name\r\n",
        "prefix": "stepfunctions-activity",
        "scope": "source.cloudformation"
    },
    "AWS::StepFunctions::StateMachine": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::StepFunctions::StateMachine\"\r\n\tProperties:\r\n\t\tDefinitionS3Location:\r\n\t\t\t${2:S3Location}\r\n\t\tDefinitionString: ${3:String}\r\n\t\tDefinitionSubstitutions:\r\n\t\t\t${4:DefinitionSubstitutions}\r\n\t\tLoggingConfiguration:\r\n\t\t\t${5:LoggingConfiguration}\r\n\t\tRoleArn: ${6:String} #required\r\n\t\tStateMachineName: ${7:String}\r\n\t\tStateMachineType: ${8:String}\r\n\t\tTags:\r\n\t\t\t- ${9:TagsEntry}\r\n\t\tTracingConfiguration:\r\n\t\t\t${10:TracingConfiguration}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html\r\n\nAttributes: \r\n  Arn\r\n  Name\r\n",
        "prefix": "stepfunctions-statemachine",
        "scope": "source.cloudformation"
    },
    "AWS::Synthetics::Canary": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Synthetics::Canary\"\r\n\tProperties:\r\n\t\tArtifactS3Location: ${2:String} #required\r\n\t\tCode: #required\r\n\t\t\t${3:Code}\r\n\t\tExecutionRoleArn: ${4:String} #required\r\n\t\tFailureRetentionPeriod: ${5:Integer}\r\n\t\tName: ${6:String} #required\r\n\t\tRunConfig:\r\n\t\t\t${7:RunConfig}\r\n\t\tRuntimeVersion: ${8:String} #required\r\n\t\tSchedule: #required\r\n\t\t\t${9:Schedule}\r\n\t\tStartCanaryAfterCreation: ${10:Boolean} #required\r\n\t\tSuccessRetentionPeriod: ${11:Integer}\r\n\t\tTags:\r\n\t\t\t- ${12:Tag}\r\n\t\tVPCConfig:\r\n\t\t\t${13:VPCConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html\r\n\nAttributes: \r\n  Id\r\n  State\r\n",
        "prefix": "synthetics-canary",
        "scope": "source.cloudformation"
    },
    "AWS::Timestream::Database": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Timestream::Database\"\r\n\tProperties:\r\n\t\tDatabaseName: ${2:String}\r\n\t\tKmsKeyId: ${3:String}\r\n\t\tTags:\r\n\t\t\t- ${4:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "timestream-database",
        "scope": "source.cloudformation"
    },
    "AWS::Timestream::Table": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Timestream::Table\"\r\n\tProperties:\r\n\t\tDatabaseName: ${2:String} #required\r\n\t\tRetentionProperties: ${3:Json}\r\n\t\tTableName: ${4:String}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html\r\n\nAttributes: \r\n  Arn\r\n",
        "prefix": "timestream-table",
        "scope": "source.cloudformation"
    },
    "AWS::Transfer::Server": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Transfer::Server\"\r\n\tProperties:\r\n\t\tCertificate: ${2:String}\r\n\t\tEndpointDetails:\r\n\t\t\t${3:EndpointDetails}\r\n\t\tEndpointType: ${4:String}\r\n\t\tIdentityProviderDetails:\r\n\t\t\t${5:IdentityProviderDetails}\r\n\t\tIdentityProviderType: ${6:String}\r\n\t\tLoggingRole: ${7:String}\r\n\t\tProtocols:\r\n\t\t\t- ${8:Protocol}\r\n\t\tSecurityPolicyName: ${9:String}\r\n\t\tTags:\r\n\t\t\t- ${10:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html\r\n\nAttributes: \r\n  ServerId\r\n  Arn\r\n",
        "prefix": "transfer-server",
        "scope": "source.cloudformation"
    },
    "AWS::Transfer::User": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Transfer::User\"\r\n\tProperties:\r\n\t\tHomeDirectory: ${2:String}\r\n\t\tHomeDirectoryMappings:\r\n\t\t\t- ${3:HomeDirectoryMapEntry}\r\n\t\tHomeDirectoryType: ${4:String}\r\n\t\tPolicy: ${5:String}\r\n\t\tRole: ${6:String} #required\r\n\t\tServerId: ${7:String} #required\r\n\t\tSshPublicKeys:\r\n\t\t\t- ${8:SshPublicKey}\r\n\t\tTags:\r\n\t\t\t- ${9:Tag}\r\n\t\tUserName: ${10:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html\r\n\nAttributes: \r\n  ServerId\r\n  UserName\r\n  Arn\r\n",
        "prefix": "transfer-user",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::ByteMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::ByteMatchSet\"\r\n\tProperties:\r\n\t\tByteMatchTuples:\r\n\t\t\t- ${2:ByteMatchTuple}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html",
        "prefix": "waf-bytematchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::IPSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::IPSet\"\r\n\tProperties:\r\n\t\tIPSetDescriptors:\r\n\t\t\t- ${2:IPSetDescriptor}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html",
        "prefix": "waf-ipset",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::Rule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::Rule\"\r\n\tProperties:\r\n\t\tMetricName: ${2:String} #required\r\n\t\tName: ${3:String} #required\r\n\t\tPredicates:\r\n\t\t\t- ${4:Predicate}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html",
        "prefix": "waf-rule",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::SizeConstraintSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::SizeConstraintSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tSizeConstraints: #required\r\n\t\t\t- ${3:SizeConstraint}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html",
        "prefix": "waf-sizeconstraintset",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::SqlInjectionMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::SqlInjectionMatchSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tSqlInjectionMatchTuples:\r\n\t\t\t- ${3:SqlInjectionMatchTuple}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html",
        "prefix": "waf-sqlinjectionmatchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::WebACL": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::WebACL\"\r\n\tProperties:\r\n\t\tDefaultAction: #required\r\n\t\t\t${2:WafAction}\r\n\t\tMetricName: ${3:String} #required\r\n\t\tName: ${4:String} #required\r\n\t\tRules:\r\n\t\t\t- ${5:ActivatedRule}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html",
        "prefix": "waf-webacl",
        "scope": "source.cloudformation"
    },
    "AWS::WAF::XssMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::XssMatchSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tXssMatchTuples: #required\r\n\t\t\t- ${3:XssMatchTuple}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html",
        "prefix": "waf-xssmatchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::ByteMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::ByteMatchSet\"\r\n\tProperties:\r\n\t\tByteMatchTuples:\r\n\t\t\t- ${2:ByteMatchTuple}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html",
        "prefix": "wafregional-bytematchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::GeoMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::GeoMatchSet\"\r\n\tProperties:\r\n\t\tGeoMatchConstraints:\r\n\t\t\t- ${2:GeoMatchConstraint}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html",
        "prefix": "wafregional-geomatchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::IPSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::IPSet\"\r\n\tProperties:\r\n\t\tIPSetDescriptors:\r\n\t\t\t- ${2:IPSetDescriptor}\r\n\t\tName: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html",
        "prefix": "wafregional-ipset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::RateBasedRule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::RateBasedRule\"\r\n\tProperties:\r\n\t\tMatchPredicates:\r\n\t\t\t- ${2:Predicate}\r\n\t\tMetricName: ${3:String} #required\r\n\t\tName: ${4:String} #required\r\n\t\tRateKey: ${5:String} #required\r\n\t\tRateLimit: ${6:Integer} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html",
        "prefix": "wafregional-ratebasedrule",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::RegexPatternSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::RegexPatternSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tRegexPatternStrings: #required\r\n\t\t\t- ${3:String}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html",
        "prefix": "wafregional-regexpatternset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::Rule": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::Rule\"\r\n\tProperties:\r\n\t\tMetricName: ${2:String} #required\r\n\t\tName: ${3:String} #required\r\n\t\tPredicates:\r\n\t\t\t- ${4:Predicate}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html",
        "prefix": "wafregional-rule",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::SizeConstraintSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::SizeConstraintSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tSizeConstraints:\r\n\t\t\t- ${3:SizeConstraint}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html",
        "prefix": "wafregional-sizeconstraintset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::SqlInjectionMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::SqlInjectionMatchSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tSqlInjectionMatchTuples:\r\n\t\t\t- ${3:SqlInjectionMatchTuple}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html",
        "prefix": "wafregional-sqlinjectionmatchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::WebACL": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::WebACL\"\r\n\tProperties:\r\n\t\tDefaultAction: #required\r\n\t\t\t${2:Action}\r\n\t\tMetricName: ${3:String} #required\r\n\t\tName: ${4:String} #required\r\n\t\tRules:\r\n\t\t\t- ${5:Rule}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html",
        "prefix": "wafregional-webacl",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::WebACLAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::WebACLAssociation\"\r\n\tProperties:\r\n\t\tResourceArn: ${2:String} #required\r\n\t\tWebACLId: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html",
        "prefix": "wafregional-webaclassociation",
        "scope": "source.cloudformation"
    },
    "AWS::WAFRegional::XssMatchSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::XssMatchSet\"\r\n\tProperties:\r\n\t\tName: ${2:String} #required\r\n\t\tXssMatchTuples:\r\n\t\t\t- ${3:XssMatchTuple}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html",
        "prefix": "wafregional-xssmatchset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFv2::IPSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::IPSet\"\r\n\tProperties:\r\n\t\tAddresses: #required\r\n\t\t\t- ${2:String}\r\n\t\tDescription: ${3:String}\r\n\t\tIPAddressVersion: ${4:String} #required\r\n\t\tName: ${5:String}\r\n\t\tScope: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html\r\n\nAttributes: \r\n  Arn\r\n  Id\r\n",
        "prefix": "wafv2-ipset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFv2::RegexPatternSet": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::RegexPatternSet\"\r\n\tProperties:\r\n\t\tDescription: ${2:String}\r\n\t\tName: ${3:String}\r\n\t\tRegularExpressionList: #required\r\n\t\t\t- ${4:String}\r\n\t\tScope: ${5:String} #required\r\n\t\tTags:\r\n\t\t\t- ${6:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html\r\n\nAttributes: \r\n  Arn\r\n  Id\r\n",
        "prefix": "wafv2-regexpatternset",
        "scope": "source.cloudformation"
    },
    "AWS::WAFv2::RuleGroup": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::RuleGroup\"\r\n\tProperties:\r\n\t\tCapacity: ${2:Integer} #required\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tRules:\r\n\t\t\t- ${5:Rule}\r\n\t\tScope: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tVisibilityConfig: #required\r\n\t\t\t${8:VisibilityConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html\r\n\nAttributes: \r\n  Arn\r\n  Id\r\n",
        "prefix": "wafv2-rulegroup",
        "scope": "source.cloudformation"
    },
    "AWS::WAFv2::WebACL": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::WebACL\"\r\n\tProperties:\r\n\t\tDefaultAction: #required\r\n\t\t\t${2:DefaultAction}\r\n\t\tDescription: ${3:String}\r\n\t\tName: ${4:String}\r\n\t\tRules:\r\n\t\t\t- ${5:Rule}\r\n\t\tScope: ${6:String} #required\r\n\t\tTags:\r\n\t\t\t- ${7:Tag}\r\n\t\tVisibilityConfig: #required\r\n\t\t\t${8:VisibilityConfig}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html\r\n\nAttributes: \r\n  Arn\r\n  Capacity\r\n  Id\r\n",
        "prefix": "wafv2-webacl",
        "scope": "source.cloudformation"
    },
    "AWS::WAFv2::WebACLAssociation": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::WebACLAssociation\"\r\n\tProperties:\r\n\t\tResourceArn: ${2:String} #required\r\n\t\tWebACLArn: ${3:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html",
        "prefix": "wafv2-webaclassociation",
        "scope": "source.cloudformation"
    },
    "AWS::WorkSpaces::ConnectionAlias": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WorkSpaces::ConnectionAlias\"\r\n\tProperties:\r\n\t\tConnectionString: ${2:String} #required\r\n\t\tTags:\r\n\t\t\t- ${3:Tag}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html\r\n\nAttributes: \r\n  Associations\r\n  AliasId\r\n  ConnectionAliasState\r\n",
        "prefix": "workspaces-connectionalias",
        "scope": "source.cloudformation"
    },
    "AWS::WorkSpaces::Workspace": {
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WorkSpaces::Workspace\"\r\n\tProperties:\r\n\t\tBundleId: ${2:String} #required\r\n\t\tDirectoryId: ${3:String} #required\r\n\t\tRootVolumeEncryptionEnabled: ${4:Boolean}\r\n\t\tTags:\r\n\t\t\t- ${5:Tag}\r\n\t\tUserName: ${6:String} #required\r\n\t\tUserVolumeEncryptionEnabled: ${7:Boolean}\r\n\t\tVolumeEncryptionKey: ${8:String}\r\n\t\tWorkspaceProperties:\r\n\t\t\t${9:WorkspaceProperties}\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html",
        "prefix": "workspaces-workspace",
        "scope": "source.cloudformation"
    },
    "Alexa::ASK::Skill": {
        "body": "${1:LogicalID}:\r\n\tType: \"Alexa::ASK::Skill\"\r\n\tProperties:\r\n\t\tAuthenticationConfiguration: #required\r\n\t\t\t${2:AuthenticationConfiguration}\r\n\t\tSkillPackage: #required\r\n\t\t\t${3:SkillPackage}\r\n\t\tVendorId: ${4:String} #required\r\n",
        "description": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html",
        "prefix": "alexa-ask-skill",
        "scope": "source.cloudformation"
    }
}